<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lisir&#39;s Blog</title>
  
  <subtitle>Do what you want to do！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.lisirlife.cn/"/>
  <updated>2024-09-21T09:02:52.366Z</updated>
  <id>http://www.lisirlife.cn/</id>
  
  <author>
    <name>LiGuanCheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CI/CD自动化运维实践</title>
    <link href="http://www.lisirlife.cn/2024/05/21/CICD%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%AE%9E%E8%B7%B5/"/>
    <id>http://www.lisirlife.cn/2024/05/21/CICD自动化运维实践/</id>
    <published>2024-05-21T07:37:00.000Z</published>
    <updated>2024-09-21T09:02:52.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CI-CD自动化运维实践"><a href="#CI-CD自动化运维实践" class="headerlink" title="CI/CD自动化运维实践"></a>CI/CD自动化运维实践</h1><h2 id="1、前言与介绍"><a href="#1、前言与介绍" class="headerlink" title="1、前言与介绍"></a>1、前言与介绍</h2><h3 id="1-1、技术预览"><a href="#1-1、技术预览" class="headerlink" title="1.1、技术预览"></a>1.1、技术预览</h3><ul><li><p>Semphore</p><blockquote><p>Semaphore 是一个具有基本CI/CD的Ansible脚本的Web界面，用于运行 Ansible 剧本、Terraform/OpenTofu 和 Pulumi 代码。使用Semaphore可以完成代码构建、部署、回滚。管理Ansible HOSTS环境、存储库、秘钥等信息。响应式UI方便运维人员快速上手，并允许在移动设备上运行。当前已支持CRON模式执行剧本。随时查看任何剧本运行的详细日志等功能。在实际项目应用中，Semaphore可以实现一个具有基本能力的CI/CD流水线，来实现产品的持续快速交付与部署，通过自动执行重复性任务，改变IT专业人员的工作重心，用更多的思考能力来改进产品、排查问题，不必担心集成进度。</p></blockquote></li><li><p>Ansible</p><blockquote><p>Ansible是近年来越来越火的一款运维自动化工具，其主要功能是帮助运维实现IT工作的自动化、降低认为操作失误、提高业务自动化率、提升运维工作效率，常用于软件部署自动化、配置自动化、管理自动化、持续集成、零宕机平滑升级等。它丰富的内置模块（如ACL、commonand、shell、cron、yum、copy、file、user等多达接近2000个模块）和开发的APT接口。而Ansible架构相对比较简单，仅需通过SSH连接客户机执行任务即可。</p></blockquote></li></ul><h2 id="2、最佳实践"><a href="#2、最佳实践" class="headerlink" title="2、最佳实践"></a>2、最佳实践</h2><h3 id="2-1、基于趣街的自动化运维实现"><a href="#2-1、基于趣街的自动化运维实现" class="headerlink" title="2.1、基于趣街的自动化运维实现"></a>2.1、基于趣街的自动化运维实现</h3><blockquote><p>须知：所有支持自动化更新的应用，均已替换成运维自主编写的JAVA应用管理脚本。此脚本中涵盖了应用备份、应用检查、应用启停等功能，并对执行结果和信息输出均做了判断和控制。涉及技术有Semphore、Ansible、Shell，自动化运行的逻辑是使用了Semphore图形化管理工具远程调用Ansible命令，对主机实现批量化管理，Semphore图形化工具包含了对anslbie的日常管理和任务执行工作，所有上线自动化操作均通过Semphore来完成；</p></blockquote><ul><li>架构图<br><img src="https://static.zybuluo.com/a807257775/rivscf8d1yird704vlyf5el9/%E8%B6%A3%E8%A1%97%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%AE%9E%E8%B7%B5%20%281%29.jpg" alt="趣街自动化运维实践 (1).jpg-76.3kB"></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CI-CD自动化运维实践&quot;&gt;&lt;a href=&quot;#CI-CD自动化运维实践&quot; class=&quot;headerlink&quot; title=&quot;CI/CD自动化运维实践&quot;&gt;&lt;/a&gt;CI/CD自动化运维实践&lt;/h1&gt;&lt;h2 id=&quot;1、前言与介绍&quot;&gt;&lt;a href=&quot;#1、前言与介
      
    
    </summary>
    
      <category term="Ansible相关" scheme="http://www.lisirlife.cn/categories/Ansible%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Ansible相关" scheme="http://www.lisirlife.cn/tags/Ansible%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix监控系统应用实践</title>
    <link href="http://www.lisirlife.cn/2024/03/02/Zabbix%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E5%BA%94%E7%94%A8%E5%AE%9E%E8%B7%B5/"/>
    <id>http://www.lisirlife.cn/2024/03/02/Zabbix监控系统应用实践/</id>
    <published>2024-03-02T08:00:00.000Z</published>
    <updated>2024-09-21T09:02:52.404Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Zabbix监控系统应用实践"><a href="#Zabbix监控系统应用实践" class="headerlink" title="Zabbix监控系统应用实践"></a>Zabbix监控系统应用实践</h1><h2 id="1、zabbix简介"><a href="#1、zabbix简介" class="headerlink" title="1、zabbix简介"></a>1、zabbix简介</h2><h3 id="1-1、zabbix介绍"><a href="#1-1、zabbix介绍" class="headerlink" title="1.1、zabbix介绍"></a>1.1、zabbix介绍</h3><blockquote><p>Zabbix 是一种企业级的分布式开源监控解决方案。<br>Zabbix 是集报警框架、数据收集、监控模板、集中式web展示的一款完整性监控平台，能够监控众多网络参数、服务器的健康度、应用软件的性能、服务可用性等。Zabbix有非常 灵活的通知机制，通过不同的动作和分组，可以将指定消息推送给指定用户，并且支持邮件、微信、钉钉、短信等事件通知。并且Zabbix 基于存储的数据提供出色的报告和数据可视化。所有的 Zabbix 报告、统计信息和配置参数都可以通过基于 Web 的前端页面进行访问。<br>Zabbix 是免费开源的</p></blockquote><ul><li>Zabbix分布式监控系统的优点如下：<ul><li style="list-style: none"><input type="checkbox" checked> 支持自动发现服务器和网络设备；</li><li style="list-style: none"><input type="checkbox" checked> 分布式的监控体系和集中式的WEB管理；</li><li style="list-style: none"><input type="checkbox" checked> 支持主动监控和被动监控模式；</li><li style="list-style: none"><input type="checkbox" checked> 服务器端支持多种操作系统：Linux, Solaris, HP-UX, AIX, FreeBSD, OpenBSD, MAC等；</li><li style="list-style: none"><input type="checkbox" checked> Agent客户端支持多种操作系统：Linux, Solaris, HP-UX, AIX, FreeBSD,Windows等；</li><li style="list-style: none"><input type="checkbox" checked> 基于SNMP、IPMI接口方式、Agent方式、Simple Check方式；</li><li style="list-style: none"><input type="checkbox" checked> 安全的用户认证及权限配置；</li><li style="list-style: none"><input type="checkbox" checked> 基于WEB的管理方法，支持自由的自定义事件和邮件、短信、微信、钉钉等通知；</li><li style="list-style: none"><input type="checkbox" checked> 支持日志审计，资产管理等功能；</li><li style="list-style: none"><input type="checkbox" checked> 提供200+的API接口，配合CMDB实现自动化运维整合。</li></ul></li></ul><h3 id="1-2、zabbix概述"><a href="#1-2、zabbix概述" class="headerlink" title="1.2、zabbix概述"></a>1.2、zabbix概述</h3><blockquote><p>Zabbix 由几个主要的功能组件组成，其职责如下所示。</p></blockquote><ul><li><p>Server</p><ul><li><code>Zabbix server</code> 是 <code>Zabbix agent</code> 向其报告可用性、系统完整性信息和统计信息的核心组件。是存储所有配置信息、统计信息和操作信息的核心存储库。</li></ul></li><li><p>数据库</p><ul><li>所有配置信息以及 Zabbix 采集到的数据都被存储在数据库中。zabbix支持的数据库有MySQL, PGSQL(postgreSQL)、Oracle、DB2、SQLite；</li></ul></li><li><p>Web 界面</p><ul><li>zabbix的GUI接口，使用PHP语言编写，在分布式环境中，不需要和server端部署在同一节点；</li></ul></li><li><p>Proxy</p><ul><li><code>Zabbix proxy</code> 可以替 <code>Zabbix server</code> 收集性能和可用性数据。<code>Zabbix proxy</code> 是 <code>Zabbix</code> 环境部署的可选部分；一般用于多分布式环境，监控多数据库中心的方案中所使用的组件。</li></ul></li><li><p>Agent</p><ul><li>agentd需要安装到被监控的主机上，它负责定期收集各项数据，并发送到zabbix server端，zabbix server将数据存储到数据库中，zabbix web根据数据在前端进行展现和绘图。这里agentd收集数据分为主动和被动两种模式：</li><li>主动：agent请求server获取主动的监控项列表，并主动将监控项内需要检测的数据提交给server/proxy</li><li>被动：server向agent请求获取监控项的数据，agent返回数据。</li></ul></li><li><p>监控数据流</p><ul><li>首先，为了创建一个采集数据的监控项，你就必须先创建主机。其次，必须有一个监控项来创建触发器。最后，你必须有一个触发器来创建一个动作，这几个点构成了一个完整的数据流。因此，如果你想要收到 <code>CPU load it too high on Server X</code> 的告警，你必须首先为 <code>Server X</code> 创建一个主机条目，其次创建一个用于监视其 CPU 的监控项，最后创建一个触发器，用来触发 <code>CPU is too high</code> 这个动作，并将其发送到指定的邮箱里。虽然这些步骤看起来很繁琐，但是使用模板的话，其实并不复杂。也正是由于这种设计，使得 Zabbix 的配置变得更加灵活易用。</li></ul></li><li><p>架构图<br><img src="http://static.zybuluo.com/a807257775/wmkbtftifarc2annmuy7l4uq/20191127212159172.jpg" alt="20191127212159172.jpg-563.7kB"> </p></li></ul><h3 id="1-3、zabbix特点"><a href="#1-3、zabbix特点" class="headerlink" title="1.3、zabbix特点"></a>1.3、zabbix特点</h3><ul><li><p>Zabbix在2022年的多款监控软件排名第一<br><img src="http://static.zybuluo.com/a807257775/3yl9eecnch8ixt9xlrklfxg0/image_1gdadvi6o13quu41hrihrlbsil.png" alt="image_1gdadvi6o13quu41hrihrlbsil.png-126.7kB"></p></li><li><p>简单易用</p><ul><li>开箱部署，如使用docker与容器编排工具，可实现分钟级的快速部署；</li><li>社区资源丰富，软件及手册已全面支持中文；</li></ul></li><li>开源且免费</li><li>适合中小企业使用的全栈监控平台<ul><li>可用性监控（服务、端口、链路、联机状态等）</li><li>性能监控（CPU、内存、网络带宽、磁盘IO等）</li><li>日志监控（安全日志、系统日志、应用日志、审计日志等）</li><li>自定义监控（Scripts脚本）</li><li>WEB监控（WEB接口性能、返回状态码）</li><li>应用中间件监控（NGX、ES、REDIS、MYSQL、RABITMQ、KAFKA、ZK等）</li></ul></li><li>兼具监控的广度和深度<ul><li>系统异构性（少则几种，多则几十种，比如需要监控硬件、存储、操作系统、中间件、数据库及应用等）</li><li>平台多样性（比如我们有华为、戴尔、惠普、IBM 的硬件服务器或者交换机，同时也会有 Windows、Linux、Aix、ESXi等多种操作系统）</li><li>运维复杂性（日常监控指标的精细化、平台架构的日常运维，包括系统异构性和平台的多样性均构成了运维的复杂性）</li><li>综上，一个理想的监控平台理应支持基于各类系统，覆盖各类厂商和平台的监控，而经过这么多年的功能演变及用户口碑来看，zabbix在非容器环境下不管是监控深度和广度是目前最合适的监控平台。这也弥补了金融云在监控层面对于中间件、自定义指标、WEB监控相关功能的缺失；</li></ul></li></ul><h2 id="2、zabbix功能"><a href="#2、zabbix功能" class="headerlink" title="2、zabbix功能"></a>2、zabbix功能</h2><h3 id="2-1、数据采集"><a href="#2-1、数据采集" class="headerlink" title="2.1、数据采集"></a>2.1、数据采集</h3><ul><li style="list-style: none"><input type="checkbox" checked> 可用性和性能指标的数据采集；</li><li style="list-style: none"><input type="checkbox" checked> 支持 SNMP（包括主动轮询和被动捕获）、IPMI、JMX、VMware 监控、Kubernets监控；</li><li style="list-style: none"><input type="checkbox" checked> 自定义检查；</li><li style="list-style: none"><input type="checkbox" checked> 按照自定义的时间间隔采集需要的数据；</li><li style="list-style: none"><input type="checkbox" checked> 通过 Server/Proxy 和 Agents 来执行数据采集。</li></ul><h3 id="2-2、灵活的阈值定义"><a href="#2-2、灵活的阈值定义" class="headerlink" title="2.2、灵活的阈值定义"></a>2.2、灵活的阈值定义</h3><ul><li style="list-style: none"><input type="checkbox" checked> 将告警阈值称之为触发器，触发器从后端数据库获得参考值。</li></ul><h3 id="2-3、高度可配置化的告警"><a href="#2-3、高度可配置化的告警" class="headerlink" title="2.3、高度可配置化的告警"></a>2.3、高度可配置化的告警</h3><ul><li style="list-style: none"><input type="checkbox" checked> 可以根据递增计划、接收者、媒介类型自定义发送告警通知；</li><li style="list-style: none"><input type="checkbox" checked> 使用宏变量可以使告警通知变得更加高效有益；</li><li style="list-style: none"><input type="checkbox" checked> 自动动作包含远程命令。</li></ul><h3 id="2-4、实时图形"><a href="#2-4、实时图形" class="headerlink" title="2.4、实时图形"></a>2.4、实时图形</h3><ul><li style="list-style: none"><input type="checkbox" checked> 使用内置图形功能可实以将监控项绘制成图形。</li></ul><h3 id="2-5、Web-监控功能"><a href="#2-5、Web-监控功能" class="headerlink" title="2.5、Web 监控功能"></a>2.5、Web 监控功能</h3><ul><li style="list-style: none"><input type="checkbox" checked> Zabbix 可以追踪模拟鼠标在 Web 网站上的点击操作，来检查 Web 网站的功能和响应时间。</li></ul><h3 id="2-6、丰富的可视化选项"><a href="#2-6、丰富的可视化选项" class="headerlink" title="2.6、丰富的可视化选项"></a>2.6、丰富的可视化选项</h3><ul><li style="list-style: none"><input type="checkbox" checked> 能够创建可以将多个监控项组合到单个视图中的自定义图形；</li><li style="list-style: none"><input type="checkbox" checked> 网络拓扑图；</li><li style="list-style: none"><input type="checkbox" checked> 以仪表盘样式展示自定义聚合图形和幻灯片演示；</li><li style="list-style: none"><input type="checkbox" checked> 报表；</li><li style="list-style: none"><input type="checkbox" checked> 监控资源的高层次（业务）视图。</li></ul><h3 id="2-7、配置简单"><a href="#2-7、配置简单" class="headerlink" title="2.7、配置简单"></a>2.7、配置简单</h3><ul><li style="list-style: none"><input type="checkbox" checked> 将被监控设备添加为主机；</li><li style="list-style: none"><input type="checkbox" checked> 主机一旦添加到数据库中，就会采集主机数据用于监控；</li><li style="list-style: none"><input type="checkbox" checked> 将模板用于监控设备。</li></ul><h3 id="2-8、套用模板"><a href="#2-8、套用模板" class="headerlink" title="2.8、套用模板"></a>2.8、套用模板</h3><ul><li style="list-style: none"><input type="checkbox" checked> 在模板中分组检查；</li><li style="list-style: none"><input type="checkbox" checked> 模板可以关联其他模板，获得继承。</li></ul><h3 id="2-9、网络发现"><a href="#2-9、网络发现" class="headerlink" title="2.9、网络发现"></a>2.9、网络发现</h3><ul><li style="list-style: none"><input type="checkbox" checked> 自动发现网络设备；</li><li style="list-style: none"><input type="checkbox" checked> Zabbix Agent 发现设备后自动注册；</li><li style="list-style: none"><input type="checkbox" checked> 自动发现文件系统、网络接口和 SNMP OIDs 值。</li></ul><h3 id="2-10、Zabbix-API"><a href="#2-10、Zabbix-API" class="headerlink" title="2.10、Zabbix API"></a>2.10、Zabbix API</h3><ul><li style="list-style: none"><input type="checkbox" checked> Zabbix API 为 Zabbix 提供可编程接口，用于批量操作、第三方软件集成的用途。</li></ul><h3 id="2-11、权限管理系统"><a href="#2-11、权限管理系统" class="headerlink" title="2.11、权限管理系统"></a>2.11、权限管理系统</h3><ul><li style="list-style: none"><input type="checkbox" checked> 安全的用户身份验证；</li><li style="list-style: none"><input type="checkbox" checked> 将特定用户限制于访问特定的视图。</li></ul><h2 id="3、zabbix实践应用"><a href="#3、zabbix实践应用" class="headerlink" title="3、zabbix实践应用"></a>3、zabbix实践应用</h2><h3 id="3-1、支付组"><a href="#3-1、支付组" class="headerlink" title="3.1、支付组"></a>3.1、支付组</h3><ul><li>所实现的监控项<ul><li>代付失败笔数监控</li><li>有缺陷的成功笔数监控</li><li>代付成功率监控</li><li>支付下单笔数监控</li><li>支付成功率监控</li><li>代付下单笔数监控</li></ul></li></ul><h3 id="3-2、运维组"><a href="#3-2、运维组" class="headerlink" title="3.2、运维组"></a>3.2、运维组</h3><ul><li>所实现的监控项<ul><li>中间件的性能监控</li><li>服务可用性监控</li><li>数据库监控</li><li>第三方网络性能监控</li><li>进程掉线监控</li><li>服务端口监控</li><li>TCP连接数监控</li></ul></li></ul><h3 id="3-3、应用组"><a href="#3-3、应用组" class="headerlink" title="3.3、应用组"></a>3.3、应用组</h3><ul><li>所实现的监控项<ul><li>web接口监控</li></ul></li></ul><h2 id="4、WEB拓展"><a href="#4、WEB拓展" class="headerlink" title="4、WEB拓展"></a>4、WEB拓展</h2><h3 id="4-1、使用grafana进行web展示"><a href="#4-1、使用grafana进行web展示" class="headerlink" title="4.1、使用grafana进行web展示"></a>4.1、使用grafana进行web展示</h3><ul><li>zabbix的UI个人觉得并不是太好看，网上也有很多人吐槽，如果我们用来做7*24小时的监控大屏，不太能满足需求，所以我们运维组这边又添加了一个开源的web展示工具。叫做grafana，目前正在将部分看板往这个工具迁移中。</li><li>支付看板<br><img src="http://static.zybuluo.com/a807257775/y8bkh0hrdtvjpi16buelmb4x/image_1gdi135qetfd1noa1u9a3um15k19.png" alt="image_1gdi135qetfd1noa1u9a3um15k19.png-137.2kB"></li><li>主机资源看板<br><img src="http://static.zybuluo.com/a807257775/fje92s7l6mdkkj6ud2efbuto/image_1gdi13lif17o56091tct1h3v1ckhm.png" alt="image_1gdi13lif17o56091tct1h3v1ckhm.png-504.6kB"></li><li>主机组异常看板<br><img src="http://static.zybuluo.com/a807257775/b0oikip38kfqrcsd49n0dmlm/image_1gdi13qqiq681kile7pqv1ats13.png" alt="image_1gdi13qqiq681kile7pqv1ats13.png-196.7kB"></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Zabbix监控系统应用实践&quot;&gt;&lt;a href=&quot;#Zabbix监控系统应用实践&quot; class=&quot;headerlink&quot; title=&quot;Zabbix监控系统应用实践&quot;&gt;&lt;/a&gt;Zabbix监控系统应用实践&lt;/h1&gt;&lt;h2 id=&quot;1、zabbix简介&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="SkyWalking" scheme="http://www.lisirlife.cn/categories/SkyWalking/"/>
    
    
      <category term="SkyWalking" scheme="http://www.lisirlife.cn/tags/SkyWalking/"/>
    
  </entry>
  
  <entry>
    <title>ES7.14未经授权漏洞整改手册</title>
    <link href="http://www.lisirlife.cn/2023/11/30/ES7.14%E6%9C%AA%E7%BB%8F%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%95%B4%E6%94%B9%E6%89%8B%E5%86%8C/"/>
    <id>http://www.lisirlife.cn/2023/11/30/ES7.14未经授权漏洞整改手册/</id>
    <published>2023-11-30T04:30:00.000Z</published>
    <updated>2024-09-21T09:02:52.386Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ES7-14未经授权漏洞整改手册"><a href="#ES7-14未经授权漏洞整改手册" class="headerlink" title="ES7.14未经授权漏洞整改手册"></a>ES7.14未经授权漏洞整改手册</h1><h2 id="ES集群侧"><a href="#ES集群侧" class="headerlink" title="ES集群侧"></a>ES集群侧</h2><p>###1、关停ES集群，需要在三台机器上进行执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep &apos;elasticsearch-7.14.0&apos;|grep -v grep|awk &apos;&#123;print $2&#125;&apos;|xargs kill -9</span><br></pre></td></tr></table></figure></p><p>###2、创建证书存放路径，需要在三台机器上进行执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -pv /home/ap/iflytek/yth-apps/system/elasticsearch-7.14.0/config/certs</span><br></pre></td></tr></table></figure></p><p>###3、生成CA证书，任意一台AILOG执行即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/ap/iflytek/yth-apps/system/elasticsearch-7.14.0/config/certs</span><br><span class="line">/home/ap/iflytek/yth-apps/system/elasticsearch-7.14.0/bin/elasticsearch-certutil ca</span><br><span class="line">/home/ap/iflytek/yth-apps/system/elasticsearch-7.14.0/bin/elasticsearch-certutil cert --ca elastic-stack-ca.p12</span><br></pre></td></tr></table></figure></p><p>###4、拷贝证书文件到AILOG单元内的所有ES集群上的certs目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将文件elastic-certificates.p12和elastic-stack-ca.p12文件cp到nas下，并cp到其他的es集群主机内进行同步</span><br></pre></td></tr></table></figure></p><p>###5、修改elasticsearch.yml主配置文件,文件结尾追加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#开启xpack功能,实现密码验证功能</span><br><span class="line">xpack.security.enabled: true</span><br><span class="line">xpack.license.self_generated.type: basic</span><br><span class="line">xpack.security.transport.ssl.enabled: true</span><br><span class="line">xpack.security.transport.ssl.verification_mode: certificate</span><br><span class="line">xpack.security.transport.ssl.client_authentication: required</span><br><span class="line">xpack.security.transport.ssl.keystore.path: certs/elastic-certificates.p12</span><br><span class="line">xpack.security.transport.ssl.truststore.path: certs/elastic-certificates.p12</span><br></pre></td></tr></table></figure></p><p>###6、启动ES集群，三台机器都要操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/ap/iflytek/yth-apps/system/elasticsearch-7.14.0/bin/elasticsearch -d</span><br></pre></td></tr></table></figure></p><p>###7、设置初始密码</p><ul><li>所有用户统一密码：Szzt@123</li><li>登录任意AILOG任意机器，执行：/home/ap/iflytek/yth-apps/system/elasticsearch-7.14.0/bin/elasticsearch-setup-passwords interactive<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Initiating the setup of passwords for reserved users elastic,apm_system,kibana,logstash_system,beats_system,remote_monitoring_user.</span><br><span class="line">You will be prompted to enter passwords as the process progresses.</span><br><span class="line">Please confirm that you would like to continue [y/N]y</span><br><span class="line">Enter password for [elastic]:</span><br><span class="line">Reenter password for [elastic]:</span><br><span class="line">Enter password for [apm_system]:</span><br><span class="line">Reenter password for [apm_system]:</span><br><span class="line">Enter password for [kibana]:</span><br><span class="line">Reenter password for [kibana]:</span><br><span class="line">Enter password for [logstash_system]:</span><br><span class="line">Reenter password for [logstash_system]:</span><br><span class="line">Enter password for [beats_system]:</span><br><span class="line">Reenter password for [beats_system]:</span><br><span class="line">Enter password for [remote_monitoring_user]:</span><br><span class="line">Reenter password for [remote_monitoring_user]:</span><br><span class="line">Changed password for user [apm_system]</span><br><span class="line">Changed password for user [kibana]</span><br><span class="line">Changed password for user [logstash_system]</span><br><span class="line">Changed password for user [beats_system]</span><br><span class="line">Changed password for user [remote_monitoring_user]</span><br><span class="line">Changed password for user [elastic]</span><br></pre></td></tr></table></figure></li></ul><p>##数据采集端侧</p><p>###1、关停采集端服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep &apos;logstash-7.14.0&apos;|grep -v grep|awk &apos;&#123;print $2&#125;&apos;|xargs kill -9</span><br></pre></td></tr></table></figure></p><p>###2、修改配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cd /home/ap/iflytek/yth-apps/system/logstash-7.14.0/config/conf.d</span><br><span class="line">#修改如下三个文件</span><br><span class="line">vim ask_ol_chan_outes.conf</span><br><span class="line">vim faq_ol_chan_outes.conf</span><br><span class="line">vim session_ol_chan_outes.conf</span><br><span class="line">#在ouput中，添加user和passwod的配置</span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">  hosts =&gt; [&quot;10.255.35.175:19200&quot;,&quot;10.255.35.168:19200&quot;,&quot;10.255.35.116:19200&quot;]</span><br><span class="line">  index =&gt; &quot;ol-chan-ask-%&#123;timestamp&#125;&quot;</span><br><span class="line">  user =&gt; &quot;elastic&quot;</span><br><span class="line">  password =&gt; &quot;Szzt@123&quot;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>###3、启动logstash采集服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/ap/ccb-yth/yth-apps/system/logstash-7.14.0/bin</span><br><span class="line">sh logstash.sh</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ES7-14未经授权漏洞整改手册&quot;&gt;&lt;a href=&quot;#ES7-14未经授权漏洞整改手册&quot; class=&quot;headerlink&quot; title=&quot;ES7.14未经授权漏洞整改手册&quot;&gt;&lt;/a&gt;ES7.14未经授权漏洞整改手册&lt;/h1&gt;&lt;h2 id=&quot;ES集群侧&quot;&gt;&lt;a
      
    
    </summary>
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/categories/ELK%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/tags/ELK%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>Elasticserach数据迁移验证</title>
    <link href="http://www.lisirlife.cn/2023/11/30/Elasticserach%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E9%AA%8C%E8%AF%81/"/>
    <id>http://www.lisirlife.cn/2023/11/30/Elasticserach数据迁移验证/</id>
    <published>2023-11-30T04:30:00.000Z</published>
    <updated>2024-09-21T09:02:52.388Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Elasticserach数据迁移验证"><a href="#Elasticserach数据迁移验证" class="headerlink" title="Elasticserach数据迁移验证"></a>Elasticserach数据迁移验证</h1><h2 id="1、前置条件梳理"><a href="#1、前置条件梳理" class="headerlink" title="1、前置条件梳理"></a>1、前置条件梳理</h2><blockquote><p>SAG网络已提前打通，宇信金融云的ES机器可以与阿里的ES机器互访</p></blockquote><h3 id="1-1、本地ES信息整理"><a href="#1-1、本地ES信息整理" class="headerlink" title="1.1、本地ES信息整理"></a>1.1、本地ES信息整理</h3><table><thead><tr><th></th><th>ES版本</th><th>测试环境IP</th><th>待同步索引</th><th>主分片</th><th>副本分片</th><th>存储大小 </th></tr></thead><tbody><tr><td>elasticsearch-7.3.2</td><td>192.168.36.59/60/61</td><td>traderecord</td><td>5</td><td>1</td><td>3.6gb </td></tr></tbody></table><ul><li>ES配置文件：elasticsearch.yml（node-1/2/3）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line">bootstrap.memory_lock: false</span><br><span class="line">bootstrap.system_call_filter: false</span><br><span class="line">path.data: /opt/test/data</span><br><span class="line">path.logs: /opt/test/logs</span><br><span class="line">node.max_local_storage_nodes: 1</span><br><span class="line">#discovery.zen.ping.unicast.hosts: [&quot;127.0.0.1&quot;]</span><br><span class="line">cluster.initial_master_nodes: [&quot;node-1&quot;]</span><br><span class="line">http.cors.enabled: true</span><br><span class="line">http.cors.allow-origin: &quot;*&quot;</span><br><span class="line">cluster.name: yusys-test</span><br><span class="line">node.name: node-1</span><br><span class="line">node.master: true</span><br><span class="line">node.data: true</span><br><span class="line">discovery.zen.ping.unicast.hosts: [&quot;192.168.36.59&quot;, &quot;192.168.36.60&quot;, &quot;192.168.36.61&quot;]</span><br></pre></td></tr></table></figure></li></ul><h3 id="1-2、阿里云ES信息整理"><a href="#1-2、阿里云ES信息整理" class="headerlink" title="1.2、阿里云ES信息整理"></a>1.2、阿里云ES信息整理</h3><table><thead><tr><th></th><th>ES版本</th><th>测试环境IP</th><th>待同步索引</th><th>主分片</th><th>副本分片</th><th>存储大小 </th></tr></thead><tbody><tr><td>elasticsearch-7.3.2</td><td>10.60.2.31(外)</td><td>traderecord</td><td>5</td><td>1</td><td>3.6gb </td></tr></tbody></table><h3 id="1-3、logstash的配置与使用"><a href="#1-3、logstash的配置与使用" class="headerlink" title="1.3、logstash的配置与使用"></a>1.3、logstash的配置与使用</h3><blockquote><p>logstash会占用部分资源，建议在阿里云环境上部署logstash服务；</p></blockquote><h4 id="1-3-1、安装并创建所需目录"><a href="#1-3-1、安装并创建所需目录" class="headerlink" title="1.3.1、安装并创建所需目录"></a>1.3.1、安装并创建所需目录</h4><ul><li>下载logstash，需根据es版本下载对应的logstash<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">su - sspusr</span><br><span class="line">wget https://artifacts.elastic.co/downloads/logstash/logstash-7.3.2.tar.gz</span><br><span class="line">tar xzvf logstash-7.3.2.tar.gz</span><br><span class="line">cd /home/sspusr/logstash-7.3.2</span><br><span class="line">mkdir -pv &#123;logs,data&#125; config/conf.d</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-3、创建piplines文件"><a href="#1-3-3、创建piplines文件" class="headerlink" title="1.3.3、创建piplines文件"></a>1.3.3、创建piplines文件</h4><ul><li>vim /home/sspusr/logstash-7.3.2/config/conf.d/inyusyses_outalies.conf <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">input&#123;</span><br><span class="line">    elasticsearch&#123;</span><br><span class="line">        # 源端ES地址。</span><br><span class="line">        hosts =&gt;  [&quot;http://192.168.36.59:9200&quot;]</span><br><span class="line">        # 安全集群配置登录用户名密码。</span><br><span class="line">        #user =&gt; &quot;xxxxxx&quot;</span><br><span class="line">        #password =&gt; &quot;xxxxxx&quot;</span><br><span class="line">        # 需要迁移的索引列表，多个索引以英文以逗号（,）分隔。</span><br><span class="line">        index =&gt; &quot;traderecord_202203&quot;</span><br><span class="line">        # 以下三项保持默认即可，包含线程数和迁移数据大小和Logstash JVM配置相关。</span><br><span class="line">        #docinfo=&gt;true</span><br><span class="line">        #slices =&gt; 5</span><br><span class="line">        #size =&gt; 5000</span><br><span class="line">        # 定时任务，以下配置表示每分钟执行一次</span><br><span class="line">        schedule =&gt; &quot;* * * * *&quot;</span><br><span class="line">        scroll =&gt; &quot;5m&quot;</span><br><span class="line">        docinfo=&gt;true</span><br><span class="line">        size =&gt; 5000</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  # 去掉一些Logstash自己加的字段。</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [&quot;@timestamp&quot;, &quot;@version&quot;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output&#123;</span><br><span class="line">    elasticsearch&#123;</span><br><span class="line">        # 目标端ES地址，可在阿里云Elasticsearch实例的基本信息页面获取。</span><br><span class="line">        hosts =&gt; [&quot;http://10.60.2.31:9200&quot;]</span><br><span class="line">        # 安全集群配置登录用户名密码。</span><br><span class="line">        #user =&gt; &quot;elastic&quot;</span><br><span class="line">        #password =&gt; &quot;xxxxxx&quot;</span><br><span class="line">        # 目标端索引名称，以下配置表示索引与源端保持一致。</span><br><span class="line">        index =&gt; &quot;%&#123;[@metadata][_index]&#125;&quot;</span><br><span class="line">        # 目标端索引type，以下配置表示索引类型与源端保持一致。</span><br><span class="line">        document_type =&gt; &quot;%&#123;[@metadata][_type]&#125;&quot;</span><br><span class="line">        # 目标端数据的id，如果不需要保留原id，可以删除以下这行，删除后性能会更好。</span><br><span class="line">        document_id =&gt; &quot;%&#123;[@metadata][_id]&#125;&quot;</span><br><span class="line">        ilm_enabled =&gt; false</span><br><span class="line">        manage_template =&gt; false</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-4、修改logstash-yml配置文件"><a href="#1-3-4、修改logstash-yml配置文件" class="headerlink" title="1.3.4、修改logstash.yml配置文件"></a>1.3.4、修改logstash.yml配置文件</h4><ul><li>vim /home/sspusr/logstash-7.3.2/config/logstash.yml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">path.data: /home/sspusr/logstash-7.3.2/data</span><br><span class="line">path.logs: /home/sspusr/logstash-7.3.2/logs</span><br></pre></td></tr></table></figure></li></ul><h3 id="1-4、迁移索引元数据（设置和映射）"><a href="#1-4、迁移索引元数据（设置和映射）" class="headerlink" title="1.4、迁移索引元数据（设置和映射）"></a>1.4、迁移索引元数据（设置和映射）</h3><ul><li>在进行数据迁移时，Logstash会帮助您自动创建索引，但是自动创建的索引可能与您待迁移的索引存在差异，导致迁移前后数据的格式不一致。</li></ul><h4 id="1-4-1、创建indiceCreate-py迁移脚本"><a href="#1-4-1、创建indiceCreate-py迁移脚本" class="headerlink" title="1.4.1、创建indiceCreate.py迁移脚本"></a>1.4.1、创建indiceCreate.py迁移脚本</h4><blockquote><p>提示：脚本默认是将源ES的所有索引进行迁移，如迁移指定索引需改造脚本</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">## 分片数默认和源集群索引保持一致，可根据生产实际节点数修改数值。</span><br><span class="line">#number_of_shards = 6</span><br><span class="line">number_of_shards = settingsDict[index][&quot;settings&quot;][&quot;index&quot;][&quot;number_of_shards&quot;]</span><br><span class="line"></span><br><span class="line">## 副本数默认为0，可根据生产实际节点数修改数值。</span><br><span class="line">#number_of_replicas = 1</span><br><span class="line">number_of_replicas = DEFAULT_REPLICAS</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">vim indiceCreate.py</span><br><span class="line">#!/usr/bin/python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"># 文件名：indiceCreate.py</span><br><span class="line">import sys</span><br><span class="line">import base64</span><br><span class="line">import time</span><br><span class="line">import httplib</span><br><span class="line">import json</span><br><span class="line">## 源集群host。</span><br><span class="line">oldClusterHost = &quot;192.168.36.59:9200&quot;</span><br><span class="line">## 源集群用户名，可为空。</span><br><span class="line">oldClusterUserName = &quot;&quot;</span><br><span class="line">## 源集群密码，可为空。</span><br><span class="line">oldClusterPassword = &quot;&quot;</span><br><span class="line">## 目标集群host，可在阿里云Elasticsearch实例的基本信息页面获取。</span><br><span class="line">newClusterHost = &quot;10.60.2.31:9200&quot;</span><br><span class="line">## 目标集群用户名。</span><br><span class="line">newClusterUser = &quot;&quot;</span><br><span class="line">## 目标集群密码。</span><br><span class="line">newClusterPassword = &quot;&quot;</span><br><span class="line">DEFAULT_REPLICAS = 0</span><br><span class="line">def httpRequest(method, host, endpoint, params=&quot;&quot;, username=&quot;&quot;, password=&quot;&quot;):</span><br><span class="line">    conn = httplib.HTTPConnection(host)</span><br><span class="line">    headers = &#123;&#125;</span><br><span class="line">    if (username != &quot;&quot;) :</span><br><span class="line">        &apos;Hello &#123;name&#125;, your age is &#123;age&#125; !&apos;.format(name = &apos;Tom&apos;, age = &apos;20&apos;)</span><br><span class="line">        base64string = base64.encodestring(&apos;&#123;username&#125;:&#123;password&#125;&apos;.format(username = username, password = password)).replace(&apos;\n&apos;, &apos;&apos;)</span><br><span class="line">        headers[&quot;Authorization&quot;] = &quot;Basic %s&quot; % base64string;</span><br><span class="line">    if &quot;GET&quot; == method:</span><br><span class="line">        headers[&quot;Content-Type&quot;] = &quot;application/x-www-form-urlencoded&quot;</span><br><span class="line">        conn.request(method=method, url=endpoint, headers=headers)</span><br><span class="line">    else :</span><br><span class="line">        headers[&quot;Content-Type&quot;] = &quot;application/json&quot;</span><br><span class="line">        conn.request(method=method, url=endpoint, body=params, headers=headers)</span><br><span class="line">    response = conn.getresponse()</span><br><span class="line">    res = response.read()</span><br><span class="line">    return res</span><br><span class="line">def httpGet(host, endpoint, username=&quot;&quot;, password=&quot;&quot;):</span><br><span class="line">    return httpRequest(&quot;GET&quot;, host, endpoint, &quot;&quot;, username, password)</span><br><span class="line">def httpPost(host, endpoint, params, username=&quot;&quot;, password=&quot;&quot;):</span><br><span class="line">    return httpRequest(&quot;POST&quot;, host, endpoint, params, username, password)</span><br><span class="line">def httpPut(host, endpoint, params, username=&quot;&quot;, password=&quot;&quot;):</span><br><span class="line">    return httpRequest(&quot;PUT&quot;, host, endpoint, params, username, password)</span><br><span class="line">def getIndices(host, username=&quot;&quot;, password=&quot;&quot;):</span><br><span class="line">    endpoint = &quot;/_cat/indices&quot;</span><br><span class="line">    indicesResult = httpGet(oldClusterHost, endpoint, oldClusterUserName, oldClusterPassword)</span><br><span class="line">    indicesList = indicesResult.split(&quot;\n&quot;)</span><br><span class="line">    indexList = []</span><br><span class="line">    for indices in indicesList:</span><br><span class="line">        if (indices.find(&quot;open&quot;) &gt; 0):</span><br><span class="line">            indexList.append(indices.split()[2])</span><br><span class="line">    return indexList</span><br><span class="line">def getSettings(index, host, username=&quot;&quot;, password=&quot;&quot;):</span><br><span class="line">    endpoint = &quot;/&quot; + index + &quot;/_settings&quot;</span><br><span class="line">    indexSettings = httpGet(host, endpoint, username, password)</span><br><span class="line">    print (index + &quot;  原始settings如下：\n&quot; + indexSettings)</span><br><span class="line">    settingsDict = json.loads(indexSettings)</span><br><span class="line">    ## 分片数默认和源集群索引保持一致。</span><br><span class="line">    number_of_shards = settingsDict[index][&quot;settings&quot;][&quot;index&quot;][&quot;number_of_shards&quot;]</span><br><span class="line">    ## 副本数默认为0。</span><br><span class="line">    number_of_replicas = DEFAULT_REPLICAS</span><br><span class="line">    newSetting = &quot;\&quot;settings\&quot;: &#123;\&quot;number_of_shards\&quot;: %s, \&quot;number_of_replicas\&quot;: %s&#125;&quot; % (number_of_shards, number_of_replicas)</span><br><span class="line">    return newSetting</span><br><span class="line">def getMapping(index, host, username=&quot;&quot;, password=&quot;&quot;):</span><br><span class="line">    endpoint = &quot;/&quot; + index + &quot;/_mapping&quot;</span><br><span class="line">    indexMapping = httpGet(host, endpoint, username, password)</span><br><span class="line">    print (index + &quot; 原始mapping如下：\n&quot; + indexMapping)</span><br><span class="line">    mappingDict = json.loads(indexMapping)</span><br><span class="line">    mappings = json.dumps(mappingDict[index][&quot;mappings&quot;])</span><br><span class="line">    newMapping = &quot;\&quot;mappings\&quot; : &quot; + mappings</span><br><span class="line">    return newMapping</span><br><span class="line">def createIndexStatement(oldIndexName):</span><br><span class="line">    settingStr = getSettings(oldIndexName, oldClusterHost, oldClusterUserName, oldClusterPassword)</span><br><span class="line">    mappingStr = getMapping(oldIndexName, oldClusterHost, oldClusterUserName, oldClusterPassword)</span><br><span class="line">    createstatement = &quot;&#123;\n&quot; + str(settingStr) + &quot;,\n&quot; + str(mappingStr) + &quot;\n&#125;&quot;</span><br><span class="line">    return createstatement</span><br><span class="line">def createIndex(oldIndexName, newIndexName=&quot;&quot;):</span><br><span class="line">    if (newIndexName == &quot;&quot;) :</span><br><span class="line">        newIndexName = oldIndexName</span><br><span class="line">    createstatement = createIndexStatement(oldIndexName)</span><br><span class="line">    print (&quot;新索引 &quot; + newIndexName + &quot; 的setting和mapping如下：\n&quot; + createstatement)</span><br><span class="line">    endpoint = &quot;/&quot; + newIndexName</span><br><span class="line">    createResult = httpPut(newClusterHost, endpoint, createstatement, newClusterUser, newClusterPassword)</span><br><span class="line">    print (&quot;新索引 &quot; + newIndexName + &quot; 创建结果：&quot; + createResult)</span><br><span class="line">## main</span><br><span class="line">#indexList = getIndices(oldClusterHost, oldClusterUserName, oldClusterPassword)</span><br><span class="line">systemIndex = []</span><br><span class="line">indexneed = [&apos;traderecord&apos;]</span><br><span class="line">#print(indexList)</span><br><span class="line">#print(systemIndex)</span><br><span class="line">for index in indexneed:</span><br><span class="line">    if (index.startswith(&quot;.&quot;)):</span><br><span class="line">        systemIndex.append(index)</span><br><span class="line">    else :</span><br><span class="line">        createIndex(index, index)</span><br><span class="line">if (len(systemIndex) &gt; 0) :</span><br><span class="line">    for index in systemIndex:</span><br><span class="line">        print (index + &quot; 或许是系统索引，不会重新创建，如有需要，请单独处理～&quot;)</span><br></pre></td></tr></table></figure><h4 id="1-4-2、执行Python脚本，创建目标索引"><a href="#1-4-2、执行Python脚本，创建目标索引" class="headerlink" title="1.4.2、执行Python脚本，创建目标索引"></a>1.4.2、执行Python脚本，创建目标索引</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/python indiceCreate.py</span><br></pre></td></tr></table></figure><h4 id="1-4-3、查看目标ES的索引是否创建"><a href="#1-4-3、查看目标ES的索引是否创建" class="headerlink" title="1.4.3、查看目标ES的索引是否创建"></a>1.4.3、查看目标ES的索引是否创建</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://10.60.2.31:9200/traderecord/_mapping?pretty</span><br></pre></td></tr></table></figure><h2 id="2、启动logstash服务"><a href="#2、启动logstash服务" class="headerlink" title="2、启动logstash服务"></a>2、启动logstash服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#启动命令</span><br><span class="line">nohup /home/sspusr/logstash-7.3.2/bin/logstash &amp;</span><br><span class="line">#日志目录</span><br><span class="line">/home/sspusr/logstash-7.3.2/logs/*</span><br></pre></td></tr></table></figure><h3 id="2-1、查看数据迁移结果"><a href="#2-1、查看数据迁移结果" class="headerlink" title="2.1、查看数据迁移结果"></a>2.1、查看数据迁移结果</h3><h2 id="3、注意事项"><a href="#3、注意事项" class="headerlink" title="3、注意事项"></a>3、注意事项</h2><ol><li>趣街所使用的ES索引中，所有跟时间相关的字段，均为（type:text）类型，这就导致了阿里提供的logstash增量迁移方法，无法根据时间范围查询数据，需要有type:date的时间字段才可以进行范围定时抽取数据；</li><li>对logstash的全量pipline配置，进行调整，将增量中提到的定时任务添加到全量配置里，实现每分钟实时增量同步，logstash会记录checkpoint，不会出现重复数据；</li><li>索引的mapping及setting使用阿里的python脚本进行同步，目前已对脚本做了适配改造，支持同步指定索引</li><li>阿里官方迁移手册：<a href="https://help.aliyun.com/document_detail/418418.html" target="_blank" rel="noopener">通过Logstash将自建Elasticsearch数据全量或增量迁移至阿里云</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Elasticserach数据迁移验证&quot;&gt;&lt;a href=&quot;#Elasticserach数据迁移验证&quot; class=&quot;headerlink&quot; title=&quot;Elasticserach数据迁移验证&quot;&gt;&lt;/a&gt;Elasticserach数据迁移验证&lt;/h1&gt;&lt;h2 i
      
    
    </summary>
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/categories/ELK%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/tags/ELK%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>基于Logstash的Elasticsearch数据迁移方案</title>
    <link href="http://www.lisirlife.cn/2023/09/30/%E5%9F%BA%E4%BA%8ELogstash%E7%9A%84Elasticsearch%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E6%96%B9%E6%A1%88/"/>
    <id>http://www.lisirlife.cn/2023/09/30/基于Logstash的Elasticsearch数据迁移方案/</id>
    <published>2023-09-30T04:30:00.000Z</published>
    <updated>2024-09-21T09:02:52.413Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基于Logstash的Elasticsearch数据迁移方案"><a href="#基于Logstash的Elasticsearch数据迁移方案" class="headerlink" title="基于Logstash的Elasticsearch数据迁移方案"></a>基于Logstash的Elasticsearch数据迁移方案</h1><h2 id="1、背景信息"><a href="#1、背景信息" class="headerlink" title="1、背景信息"></a>1、背景信息</h2><p><img src="http://static.zybuluo.com/a807257775/tdnwf01w4miazv5useu3n13l/%E5%9F%BA%E4%BA%8ELogstash%E7%9A%84Elasticsearch%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E6%96%B9%E6%A1%88.jpg" alt="基于Logstash的Elasticsearch数据迁移方案.jpg-100.2kB"></p><h2 id="2、数据迁移前置条件"><a href="#2、数据迁移前置条件" class="headerlink" title="2、数据迁移前置条件"></a>2、数据迁移前置条件</h2><p>基于logstash的增量方案，无法适用，因为增量的数据同步可能还得需要date的时间类型，但是目前趣街的关于时间的字段均是keyword类型，甚至可能有一些索引没有关于时间的字段。</p><ul><li>对内对客的所有索引新增时间戳字段</li><li>使用ES的应用程序均需要改造<ul><li>后续在创建新索引的时候，自动添加时间戳字段，现有的索引，我们运维通过API进行新增</li><li>doc文档发生变动后，需要同步维护时间戳字段，将其更新为当前时间，用于logstash数据采集</li></ul></li></ul><h2 id="3、环境与工具准备"><a href="#3、环境与工具准备" class="headerlink" title="3、环境与工具准备"></a>3、环境与工具准备</h2><h3 id="3-1、阿里侧环境与实例准备"><a href="#3-1、阿里侧环境与实例准备" class="headerlink" title="3.1、阿里侧环境与实例准备"></a>3.1、阿里侧环境与实例准备</h3><h3 id="3-2、自建侧环境与实例准备"><a href="#3-2、自建侧环境与实例准备" class="headerlink" title="3.2、自建侧环境与实例准备"></a>3.2、自建侧环境与实例准备</h3><h2 id="4、迁移索引元数据（设置和映射）"><a href="#4、迁移索引元数据（设置和映射）" class="headerlink" title="4、迁移索引元数据（设置和映射）"></a>4、迁移索引元数据（设置和映射）</h2><ul><li>在进行数据迁移时，Logstash会帮助您自动创建索引，但是自动创建的索引可能与您待迁移的索引存在差异，导致迁移前后数据的格式不一致。</li></ul><h3 id="4-1、创建indiceCreate-py迁移脚本"><a href="#4-1、创建indiceCreate-py迁移脚本" class="headerlink" title="4.1、创建indiceCreate.py迁移脚本"></a>4.1、创建indiceCreate.py迁移脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">## 分片数默认和源集群索引保持一致，可根据生产实际节点数修改数值。</span><br><span class="line">#number_of_shards = 6</span><br><span class="line">number_of_shards = settingsDict[index][&quot;settings&quot;][&quot;index&quot;][&quot;number_of_shards&quot;]</span><br><span class="line"></span><br><span class="line">## 副本数默认为0，可根据生产实际节点数修改数值。</span><br><span class="line">#number_of_replicas = 1</span><br><span class="line">number_of_replicas = DEFAULT_REPLICAS</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">vim indiceCreate.py</span><br><span class="line">#!/usr/bin/python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"># 文件名：indiceCreate.py</span><br><span class="line">import sys</span><br><span class="line">import base64</span><br><span class="line">import time</span><br><span class="line">import httplib</span><br><span class="line">import json</span><br><span class="line">## 源集群host。</span><br><span class="line">oldClusterHost = &quot;192.168.36.59:9200&quot;</span><br><span class="line">## 源集群用户名，可为空。</span><br><span class="line">oldClusterUserName = &quot;&quot;</span><br><span class="line">## 源集群密码，可为空。</span><br><span class="line">oldClusterPassword = &quot;&quot;</span><br><span class="line">## 目标集群host，可在阿里云Elasticsearch实例的基本信息页面获取。</span><br><span class="line">newClusterHost = &quot;10.60.2.31:9200&quot;</span><br><span class="line">## 目标集群用户名。</span><br><span class="line">newClusterUser = &quot;&quot;</span><br><span class="line">## 目标集群密码。</span><br><span class="line">newClusterPassword = &quot;&quot;</span><br><span class="line">DEFAULT_REPLICAS = 0</span><br><span class="line">def httpRequest(method, host, endpoint, params=&quot;&quot;, username=&quot;&quot;, password=&quot;&quot;):</span><br><span class="line">    conn = httplib.HTTPConnection(host)</span><br><span class="line">    headers = &#123;&#125;</span><br><span class="line">    if (username != &quot;&quot;) :</span><br><span class="line">        &apos;Hello &#123;name&#125;, your age is &#123;age&#125; !&apos;.format(name = &apos;Tom&apos;, age = &apos;20&apos;)</span><br><span class="line">        base64string = base64.encodestring(&apos;&#123;username&#125;:&#123;password&#125;&apos;.format(username = username, password = password)).replace(&apos;\n&apos;, &apos;&apos;)</span><br><span class="line">        headers[&quot;Authorization&quot;] = &quot;Basic %s&quot; % base64string;</span><br><span class="line">    if &quot;GET&quot; == method:</span><br><span class="line">        headers[&quot;Content-Type&quot;] = &quot;application/x-www-form-urlencoded&quot;</span><br><span class="line">        conn.request(method=method, url=endpoint, headers=headers)</span><br><span class="line">    else :</span><br><span class="line">        headers[&quot;Content-Type&quot;] = &quot;application/json&quot;</span><br><span class="line">        conn.request(method=method, url=endpoint, body=params, headers=headers)</span><br><span class="line">    response = conn.getresponse()</span><br><span class="line">    res = response.read()</span><br><span class="line">    return res</span><br><span class="line">def httpGet(host, endpoint, username=&quot;&quot;, password=&quot;&quot;):</span><br><span class="line">    return httpRequest(&quot;GET&quot;, host, endpoint, &quot;&quot;, username, password)</span><br><span class="line">def httpPost(host, endpoint, params, username=&quot;&quot;, password=&quot;&quot;):</span><br><span class="line">    return httpRequest(&quot;POST&quot;, host, endpoint, params, username, password)</span><br><span class="line">def httpPut(host, endpoint, params, username=&quot;&quot;, password=&quot;&quot;):</span><br><span class="line">    return httpRequest(&quot;PUT&quot;, host, endpoint, params, username, password)</span><br><span class="line">def getIndices(host, username=&quot;&quot;, password=&quot;&quot;):</span><br><span class="line">    endpoint = &quot;/_cat/indices&quot;</span><br><span class="line">    indicesResult = httpGet(oldClusterHost, endpoint, oldClusterUserName, oldClusterPassword)</span><br><span class="line">    indicesList = indicesResult.split(&quot;\n&quot;)</span><br><span class="line">    indexList = []</span><br><span class="line">    for indices in indicesList:</span><br><span class="line">        if (indices.find(&quot;open&quot;) &gt; 0):</span><br><span class="line">            indexList.append(indices.split()[2])</span><br><span class="line">    return indexList</span><br><span class="line">def getSettings(index, host, username=&quot;&quot;, password=&quot;&quot;):</span><br><span class="line">    endpoint = &quot;/&quot; + index + &quot;/_settings&quot;</span><br><span class="line">    indexSettings = httpGet(host, endpoint, username, password)</span><br><span class="line">    print (index + &quot;  原始settings如下：\n&quot; + indexSettings)</span><br><span class="line">    settingsDict = json.loads(indexSettings)</span><br><span class="line">    ## 分片数默认和源集群索引保持一致。</span><br><span class="line">    number_of_shards = settingsDict[index][&quot;settings&quot;][&quot;index&quot;][&quot;number_of_shards&quot;]</span><br><span class="line">    ## 副本数默认为0。</span><br><span class="line">    number_of_replicas = DEFAULT_REPLICAS</span><br><span class="line">    newSetting = &quot;\&quot;settings\&quot;: &#123;\&quot;number_of_shards\&quot;: %s, \&quot;number_of_replicas\&quot;: %s&#125;&quot; % (number_of_shards, number_of_replicas)</span><br><span class="line">    return newSetting</span><br><span class="line">def getMapping(index, host, username=&quot;&quot;, password=&quot;&quot;):</span><br><span class="line">    endpoint = &quot;/&quot; + index + &quot;/_mapping&quot;</span><br><span class="line">    indexMapping = httpGet(host, endpoint, username, password)</span><br><span class="line">    print (index + &quot; 原始mapping如下：\n&quot; + indexMapping)</span><br><span class="line">    mappingDict = json.loads(indexMapping)</span><br><span class="line">    mappings = json.dumps(mappingDict[index][&quot;mappings&quot;])</span><br><span class="line">    newMapping = &quot;\&quot;mappings\&quot; : &quot; + mappings</span><br><span class="line">    return newMapping</span><br><span class="line">def createIndexStatement(oldIndexName):</span><br><span class="line">    settingStr = getSettings(oldIndexName, oldClusterHost, oldClusterUserName, oldClusterPassword)</span><br><span class="line">    mappingStr = getMapping(oldIndexName, oldClusterHost, oldClusterUserName, oldClusterPassword)</span><br><span class="line">    createstatement = &quot;&#123;\n&quot; + str(settingStr) + &quot;,\n&quot; + str(mappingStr) + &quot;\n&#125;&quot;</span><br><span class="line">    return createstatement</span><br><span class="line">def createIndex(oldIndexName, newIndexName=&quot;&quot;):</span><br><span class="line">    if (newIndexName == &quot;&quot;) :</span><br><span class="line">        newIndexName = oldIndexName</span><br><span class="line">    createstatement = createIndexStatement(oldIndexName)</span><br><span class="line">    print (&quot;新索引 &quot; + newIndexName + &quot; 的setting和mapping如下：\n&quot; + createstatement)</span><br><span class="line">    endpoint = &quot;/&quot; + newIndexName</span><br><span class="line">    createResult = httpPut(newClusterHost, endpoint, createstatement, newClusterUser, newClusterPassword)</span><br><span class="line">    print (&quot;新索引 &quot; + newIndexName + &quot; 创建结果：&quot; + createResult)</span><br><span class="line">## main</span><br><span class="line">#indexList = getIndices(oldClusterHost, oldClusterUserName, oldClusterPassword)</span><br><span class="line">systemIndex = []</span><br><span class="line">indexneed = [&apos;traderecord&apos;]</span><br><span class="line">#print(indexList)</span><br><span class="line">#print(systemIndex)</span><br><span class="line">for index in indexneed:</span><br><span class="line">    if (index.startswith(&quot;.&quot;)):</span><br><span class="line">        systemIndex.append(index)</span><br><span class="line">    else :</span><br><span class="line">        createIndex(index, index)</span><br><span class="line">if (len(systemIndex) &gt; 0) :</span><br><span class="line">    for index in systemIndex:</span><br><span class="line">        print (index + &quot; 或许是系统索引，不会重新创建，如有需要，请单独处理～&quot;)</span><br></pre></td></tr></table></figure><h3 id="4-2、执行Python脚本，创建目标索引"><a href="#4-2、执行Python脚本，创建目标索引" class="headerlink" title="4.2、执行Python脚本，创建目标索引"></a>4.2、执行Python脚本，创建目标索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/python indiceCreate.py</span><br></pre></td></tr></table></figure><h3 id="4-3、查看目标ES的索引是否创建"><a href="#4-3、查看目标ES的索引是否创建" class="headerlink" title="4.3、查看目标ES的索引是否创建"></a>4.3、查看目标ES的索引是否创建</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://10.60.2.31:9200/traderecord/_mapping?pretty</span><br></pre></td></tr></table></figure><blockquote><p>提示：脚本简单改造，支持全量同步和指定索引同步</p></blockquote><h2 id="5、迁移全量数据"><a href="#5、迁移全量数据" class="headerlink" title="5、迁移全量数据"></a>5、迁移全量数据</h2><blockquote><p>logstash会占用部分资源，建议在闲置资源侧上部署logstash服务；</p></blockquote><h3 id="5-1、logstash安装与配置"><a href="#5-1、logstash安装与配置" class="headerlink" title="5.1、logstash安装与配置"></a>5.1、logstash安装与配置</h3><ul><li>下载logstash，需根据es版本下载对应的logstash<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">su - sspusr</span><br><span class="line">wget https://artifacts.elastic.co/downloads/logstash/logstash-7.3.2.tar.gz</span><br><span class="line">tar xzvf logstash-7.3.2.tar.gz</span><br><span class="line">cd /home/sspusr/logstash-7.3.2</span><br><span class="line">mkdir -pv &#123;logs,data&#125; config/conf.d</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-2、全量pipeline文件制作"><a href="#5-2、全量pipeline文件制作" class="headerlink" title="5.2、全量pipeline文件制作"></a>5.2、全量pipeline文件制作</h3><ul><li>vim /home/sspusr/logstash-7.3.2/config/conf.d/inyusyses_outalies.conf <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">input&#123;</span><br><span class="line">    elasticsearch&#123;</span><br><span class="line">        # 源端ES地址。</span><br><span class="line">        hosts =&gt;  [&quot;http://192.168.36.59:9200&quot;]</span><br><span class="line">        # 安全集群配置登录用户名密码。</span><br><span class="line">        #user =&gt; &quot;xxxxxx&quot;</span><br><span class="line">        #password =&gt; &quot;xxxxxx&quot;</span><br><span class="line">        # 需要迁移的索引列表，多个索引以英文以逗号（,）分隔。</span><br><span class="line">        index =&gt; &quot;traderecord_202203&quot;</span><br><span class="line">        # 以下三项保持默认即可，包含线程数和迁移数据大小和Logstash JVM配置相关。</span><br><span class="line">        #docinfo=&gt;true</span><br><span class="line">        #slices =&gt; 5</span><br><span class="line">        #size =&gt; 5000</span><br><span class="line">        # 定时任务，以下配置表示每分钟执行一次</span><br><span class="line">        schedule =&gt; &quot;* * * * *&quot;</span><br><span class="line">        scroll =&gt; &quot;5m&quot;</span><br><span class="line">        docinfo=&gt;true</span><br><span class="line">        size =&gt; 5000</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  # 去掉一些Logstash自己加的字段。</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [&quot;@timestamp&quot;, &quot;@version&quot;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output&#123;</span><br><span class="line">    elasticsearch&#123;</span><br><span class="line">        # 目标端ES地址，可在阿里云Elasticsearch实例的基本信息页面获取。</span><br><span class="line">        hosts =&gt; [&quot;http://10.60.2.31:9200&quot;]</span><br><span class="line">        # 安全集群配置登录用户名密码。</span><br><span class="line">        #user =&gt; &quot;elastic&quot;</span><br><span class="line">        #password =&gt; &quot;xxxxxx&quot;</span><br><span class="line">        # 目标端索引名称，以下配置表示索引与源端保持一致。</span><br><span class="line">        index =&gt; &quot;%&#123;[@metadata][_index]&#125;&quot;</span><br><span class="line">        # 目标端索引type，以下配置表示索引类型与源端保持一致。</span><br><span class="line">        document_type =&gt; &quot;%&#123;[@metadata][_type]&#125;&quot;</span><br><span class="line">        # 目标端数据的id，如果不需要保留原id，可以删除以下这行，删除后性能会更好。</span><br><span class="line">        document_id =&gt; &quot;%&#123;[@metadata][_id]&#125;&quot;</span><br><span class="line">        ilm_enabled =&gt; false</span><br><span class="line">        manage_template =&gt; false</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-3、修改logstash-yml配置文件"><a href="#5-3、修改logstash-yml配置文件" class="headerlink" title="5.3、修改logstash.yml配置文件"></a>5.3、修改logstash.yml配置文件</h3><ul><li>vim /home/sspusr/logstash-7.3.2/config/logstash.yml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">path.data: /home/sspusr/logstash-7.3.2/data</span><br><span class="line">path.logs: /home/sspusr/logstash-7.3.2/logs</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-4、启动logstash服务"><a href="#5-4、启动logstash服务" class="headerlink" title="5.4、启动logstash服务"></a>5.4、启动logstash服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#启动命令</span><br><span class="line">nohup /home/sspusr/logstash-7.3.2/bin/logstash &amp;</span><br><span class="line">#日志目录</span><br><span class="line">/home/sspusr/logstash-7.3.2/logs/*</span><br></pre></td></tr></table></figure><h3 id="5-5、查看数据迁移结果"><a href="#5-5、查看数据迁移结果" class="headerlink" title="5.5、查看数据迁移结果"></a>5.5、查看数据迁移结果</h3><h2 id="6、迁移增量数据"><a href="#6、迁移增量数据" class="headerlink" title="6、迁移增量数据"></a>6、迁移增量数据</h2><blockquote><p>注意：需增量迁移的索引，必须有时间戳字段，类型为date，且不支持删除数据同步；</p></blockquote><h3 id="6-1、增量pipeline文件制作"><a href="#6-1、增量pipeline文件制作" class="headerlink" title="6.1、增量pipeline文件制作"></a>6.1、增量pipeline文件制作</h3><h3 id="6-2、数据追加同步"><a href="#6-2、数据追加同步" class="headerlink" title="6.2、数据追加同步"></a>6.2、数据追加同步</h3><h3 id="6-3、启动logstash服务"><a href="#6-3、启动logstash服务" class="headerlink" title="6.3、启动logstash服务"></a>6.3、启动logstash服务</h3><h3 id="6-4、查看数据迁移结果"><a href="#6-4、查看数据迁移结果" class="headerlink" title="6.4、查看数据迁移结果"></a>6.4、查看数据迁移结果</h3><h2 id="7、验证数据迁移结果"><a href="#7、验证数据迁移结果" class="headerlink" title="7、验证数据迁移结果"></a>7、验证数据迁移结果</h2><h2 id="8、其他"><a href="#8、其他" class="headerlink" title="8、其他"></a>8、其他</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基于Logstash的Elasticsearch数据迁移方案&quot;&gt;&lt;a href=&quot;#基于Logstash的Elasticsearch数据迁移方案&quot; class=&quot;headerlink&quot; title=&quot;基于Logstash的Elasticsearch数据迁移方案&quot;&gt;
      
    
    </summary>
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/categories/ELK%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/tags/ELK%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch冷热分离技术验证</title>
    <link href="http://www.lisirlife.cn/2023/08/30/Elasticsearch%E5%86%B7%E7%83%AD%E5%88%86%E7%A6%BB%E6%8A%80%E6%9C%AF%E9%AA%8C%E8%AF%81/"/>
    <id>http://www.lisirlife.cn/2023/08/30/Elasticsearch冷热分离技术验证/</id>
    <published>2023-08-30T04:30:00.000Z</published>
    <updated>2024-09-21T09:02:52.387Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Elasticsearch冷热分离技术验证"><a href="#Elasticsearch冷热分离技术验证" class="headerlink" title="Elasticsearch冷热分离技术验证"></a>Elasticsearch冷热分离技术验证</h1><h2 id="1、背景信息"><a href="#1、背景信息" class="headerlink" title="1、背景信息"></a>1、背景信息</h2><ul><li>趣街ES集群目前采用的是传统的角色混用模式进行部署的，若有node脱离集群或发生故障，对整体集群影响较大。且业务数据长年累积，数据没有生命周期性的管理策略，当数据达到一定量时，必然会造成服务的内存、CPU、IO等指标上涨，影响Elasticsearch的全文检索能力。生产上多次出现因大查询等其他因素所导致的集群抖动，从而影响生产正常业务的事件。</li></ul><h2 id="2、Elasticsearch-ilm概述"><a href="#2、Elasticsearch-ilm概述" class="headerlink" title="2、Elasticsearch-ilm概述"></a>2、Elasticsearch-ilm概述</h2><ul><li>Elasticsearch 6.6.0及以上版本提供了索引生命周期管理ILM功能，将索引生命周期分为4个阶段：<code>hot</code>、<code>warm</code>、<code>cold</code>、<code>delete</code>。其中<code>hot</code>阶段主要负责对索引进行滚动更新操作，<code>warm</code>、<code>cold</code>、<code>delete</code>阶段主要负责进一步处理索引数据，详细功能如下：<ul><li><code>Rollover</code>（滚动更新）：在当前索引达到特定大小、文档计数或存在时间时，开始写入到新索引（my-index-000001）</li><li><code>Shrink</code>（分片收缩）: 减少索引中主分片的数量</li><li><code>Force merge</code>（强制合并分片段数）: 触发强制合并操作以减少索引分片中的段数。</li><li><code>Freeze</code>（冻结索引）: 冻结索引并使其只读</li><li><code>Delete</code>（删除索引）: 永久删除索引，包括其所有数据和元数据。</li></ul></li></ul><h3 id="2-1、ilm应用场景-常规"><a href="#2-1、ilm应用场景-常规" class="headerlink" title="2.1、ilm应用场景-常规"></a>2.1、ilm应用场景-常规</h3><table><thead><tr><th>阶段</th><th>描述</th></tr></thead><tbody><tr><td>hot</td><td>该策略设置索引只要满足其中任一条件：数据写入达到1 GB、使用超过1天、doc数超过1000，就会触发索引滚动更新。此时系统将创建一个新索引，该索引将重新启动策略，而旧索引将在滚动更新后等待30分钟进入warm阶段</td><td></td></tr><tr><td>warm</td><td>索引进入warm阶段后，ILM会将索引收缩到1个分片，强制合并为1个段。完成该操作后，索引将在1小时（从滚动更新时算起）后进入cold阶段。</td><td></td></tr><tr><td>cold</td><td>索引进入cold阶段后，ILM将索引从hot节点移动到cold节点。完成操作后，索引将在2小时后进入delete阶段。</td><td></td></tr><tr><td>delete</td><td>索引进入delete阶段后被删除。</td><td></td></tr></tbody></table><h3 id="2-2、ilm应用场景-趣街"><a href="#2-2、ilm应用场景-趣街" class="headerlink" title="2.2、ilm应用场景-趣街"></a>2.2、ilm应用场景-趣街</h3><ul><li>架构图<br><img src="http://static.zybuluo.com/a807257775/o9yu6rfd24ogx6r3tte6ry90/image_1gprqlohe1mid8otg4586f1h5h1h.png" alt="image_1gprqlohe1mid8otg4586f1h5h1h.png-277.4kB"><br><img src="http://static.zybuluo.com/a807257775/tnhwoukp5123v5tghn7evrqx/image_1gps4qtttvf316gd1ohn1bjg66a1u.png" alt="image_1gps4qtttvf316gd1ohn1bjg66a1u.png-114.8kB"><br>阶段 | 描述 |<br>—|—|<br>hot | 通过索引模板控制新索引均分配至hot节点，设置当前热索引优先级为100，并在1分钟后进入warm阶段。 |<br>warm | 索引进入warm阶段后，设置当前热索引优先级为50，索引路由规则box_type=hot。完成该操作后，索引将在2分钟（从滚动更新时算起）后进入cold阶段。 |<br>cold | 索引进入cold阶段后，设置当前热索引优先级为0，索引路由规则box_type=cold|</li></ul><blockquote><p>说明：<br>1、考虑到对业务及开发最低的影响，在hot阶段不引入分片滚动机制，依然使用之前按月创建索引的模式进行，不过要使用索引模板对索引的分片数量、ILM策略、路由规则进行管理<br>2、不打算建立warm节点，在warm阶段呢，只调整索引优先级，当机器重建或重启时，优先恢复优先级最高的索引，来保障实时生产业务；<br>3、cold阶段，可以缩减副本数量、设置只读，后续根据生产需求可进行调整；</p></blockquote><h2 id="3、冷热分离技术验证部分"><a href="#3、冷热分离技术验证部分" class="headerlink" title="3、冷热分离技术验证部分"></a>3、冷热分离技术验证部分</h2><h3 id="3-1、集群信息汇总"><a href="#3-1、集群信息汇总" class="headerlink" title="3.1、集群信息汇总"></a>3.1、集群信息汇总</h3><table><thead><tr><th>平台</th><th>IP</th><th>用途</th><th>ES版本</th><th>功能角色</th></tr></thead><tbody><tr><td>CentOS 7.8.2003</td><td>10.0.0.201</td><td>ES</td><td>7.17.3</td><td>Master_node</td><td></td></tr><tr><td>CentOS 7.8.2003</td><td>10.0.0.202</td><td>ES</td><td>7.17.3</td><td>Master_node</td><td></td></tr><tr><td>CentOS 7.8.2003</td><td>10.0.0.203</td><td>ES</td><td>7.17.3</td><td>Master_node</td><td></td></tr><tr><td>CentOS 7.8.2003</td><td>10.0.0.204</td><td>ES</td><td>7.17.3</td><td>Date_node_H</td><td></td></tr><tr><td>CentOS 7.8.2003</td><td>10.0.0.205</td><td>ES</td><td>7.17.3</td><td>Date_node_H</td><td></td></tr><tr><td>CentOS 7.8.2003</td><td>10.0.0.100</td><td>ES</td><td>7.17.3</td><td>Date_node_C</td><td></td></tr><tr><td>CentOS 7.8.2003</td><td>10.0.0.101</td><td>ES</td><td>7.17.3</td><td>Date_node_C</td><td></td></tr><tr><td>CentOS 7.8.2003</td><td>10.0.0.102</td><td>ES</td><td>7.17.3</td><td>Coordinat_node</td><td></td></tr><tr><td>CentOS 7.8.2003</td><td>10.0.0.103</td><td>ES</td><td>7.17.3</td><td>Coordinat_node</td><td></td></tr></tbody></table><h3 id="3-2、设置ES节点角色"><a href="#3-2、设置ES节点角色" class="headerlink" title="3.2、设置ES节点角色"></a>3.2、设置ES节点角色</h3><ul><li><p>主节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.roles: [ master ]</span><br></pre></td></tr></table></figure></li><li><p>数据节点-热</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.roles: [ data_hot, data_content ]</span><br></pre></td></tr></table></figure></li><li><p>数据节点-冷</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.roles: [ data_cold, data_content ]</span><br></pre></td></tr></table></figure></li><li><p>协调节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.roles: [  ]</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>按照如上节点划分修改elasticsearch.yml配置文件，并重启ES服务，执行如下命令查看node角色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET _cat/nodes?v</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ip         ram.percent cpu load_1m load_5m load_15m node.role master name</span><br><span class="line">10.0.0.202          66   6    0.50    0.16     0.10 m         -      node-2</span><br><span class="line">10.0.0.203          68   7    0.82    0.26     0.13 m         -      node-3</span><br><span class="line">10.0.0.204          60  10    0.65    0.28     0.14 hs        -      node-4</span><br><span class="line">10.0.0.102          66   2    0.10    0.08     0.07 -         -      node-8</span><br><span class="line">10.0.0.201          89   9    0.70    0.22     0.12 m         *      node-1</span><br><span class="line">10.0.0.101          62   7    0.61    0.26     0.13 cs        -      node-7</span><br><span class="line">10.0.0.100          68  10    0.74    0.32     0.15 cs        -      node-6</span><br><span class="line">10.0.0.205          60  10    0.77    0.34     0.16 hs        -      node-5</span><br><span class="line">10.0.0.103          65   1    0.12    0.10     0.07 -         -      node-9</span><br></pre></td></tr></table></figure><h3 id="3-3、为索引配置生命周期管理策略"><a href="#3-3、为索引配置生命周期管理策略" class="headerlink" title="3.3、为索引配置生命周期管理策略"></a>3.3、为索引配置生命周期管理策略</h3><table><thead><tr><th>阶段</th><th>描述</th></tr></thead><tbody><tr><td>hot</td><td>通过索引模板控制新索引均分配至hot节点，设置当前热索引优先级为100，并在1分钟后进入warm阶段。</td><td></td></tr><tr><td>warm</td><td>索引进入warm阶段后，设置当前热索引优先级为50，索引路由规则box_type=hot。完成该操作后，索引将在2分钟（从滚动更新时算起）后进入cold阶段。</td><td></td></tr><tr><td>cold</td><td>索引进入cold阶段后，设置当前热索引优先级为0，索引路由规则box_type=cold</td><td></td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#角色模式</span><br><span class="line">PUT _ilm/policy/traderecordday_ILM</span><br><span class="line">&#123;</span><br><span class="line">  &quot;policy&quot;: &#123;</span><br><span class="line">    &quot;phases&quot;: &#123;</span><br><span class="line">      &quot;hot&quot;: &#123;</span><br><span class="line">        &quot;min_age&quot;: &quot;0ms&quot;,</span><br><span class="line">        &quot;actions&quot;: &#123;</span><br><span class="line">          &quot;set_priority&quot;: &#123;</span><br><span class="line">            &quot;priority&quot;: 100</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;warm&quot;: &#123;</span><br><span class="line">        &quot;min_age&quot;: &quot;1m&quot;,</span><br><span class="line">        &quot;actions&quot;: &#123;</span><br><span class="line">          &quot;set_priority&quot;: &#123;</span><br><span class="line">            &quot;priority&quot;: 50</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;cold&quot;: &#123;</span><br><span class="line">        &quot;min_age&quot;: &quot;2m&quot;,</span><br><span class="line">        &quot;actions&quot;: &#123;</span><br><span class="line">          &quot;set_priority&quot;: &#123;</span><br><span class="line">            &quot;priority&quot;: 0</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4、创建索引模板"><a href="#3-4、创建索引模板" class="headerlink" title="3.4、创建索引模板"></a>3.4、创建索引模板</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT &quot;http://127.0.0.1:19200/_index_template/template_traderecordday?pretty&quot; -H &apos;Content-Type: application/json&apos; -d&apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;index_patterns&quot; : [&quot;traderecordday*&quot;],</span><br><span class="line">  &quot;template&quot;: &#123;</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">      &quot;number_of_shards&quot; : 2,</span><br><span class="line">      &quot;number_of_replicas&quot; : 1,</span><br><span class="line">      &quot;max_result_window&quot; : 2147483647,</span><br><span class="line">      &quot;index.lifecycle.name&quot;: &quot;traderecordday_ILM&quot;,</span><br><span class="line">      &quot;index.routing.allocation.include._tier_preference&quot;:&quot;data_hot&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;aliases&quot;: &#123;</span><br><span class="line">      &quot;traderecordday_alias&quot; : &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;mappings&quot;: &#123;</span><br><span class="line">      &quot;dynamic_templates&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;strings&quot;: &#123;</span><br><span class="line">            &quot;match_mapping_type&quot;: &quot;string&quot;,</span><br><span class="line">            &quot;mapping&quot;: &#123;</span><br><span class="line">              &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">              &quot;fields:&quot;: &#123;</span><br><span class="line">                &quot;raw&quot;: &#123;</span><br><span class="line">                  &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">                  &quot;ignore_above&quot;: 2147483647</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;&apos;</span><br></pre></td></tr></table></figure><h3 id="3-5、创建测试索引"><a href="#3-5、创建测试索引" class="headerlink" title="3.5、创建测试索引"></a>3.5、创建测试索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPUT http://127.0.0.1:19200/traderecordday_202201 &amp;&amp; curl -XPUT http://127.0.0.1:19200/traderecordday_202202 &amp;&amp; curl -XPUT http://127.0.0.1:19200/traderecordday_202203 &amp;&amp; curl -XPUT http://127.0.0.1:19200/traderecordday_202204 &amp;&amp; curl -XPUT http://127.0.0.1:19200/traderecordday_202205</span><br></pre></td></tr></table></figure><p><img src="http://static.zybuluo.com/a807257775/iuwo7vl6ate3naos96ckpjrt/image_1gpa0cpu5mll1uaq80e1nkt1p5k5n.png" alt="image_1gpa0cpu5mll1uaq80e1nkt1p5k5n.png-38.2kB"></p><h3 id="3-5、写入数据"><a href="#3-5、写入数据" class="headerlink" title="3.5、写入数据"></a>3.5、写入数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl --location --request PUT &apos;http://192.168.2.67:19200/traderecordday_202201/_doc/1&apos; \</span><br><span class="line">--header &apos;Content-Type: application/json&apos; \</span><br><span class="line">-d &apos;&#123;</span><br><span class="line">    &quot;content&quot;: &quot;ligc&quot;,</span><br><span class="line">    &quot;title&quot;: &quot;yusys&quot;,</span><br><span class="line">    &quot;id&quot;: &quot;1&quot;</span><br><span class="line">&#125;&apos;</span><br></pre></td></tr></table></figure><p><img src="http://static.zybuluo.com/a807257775/5t1ewi4437z792k71aci2eds/image_1gpa0dndpn261nmj1k3pbdpt6o64.png" alt="image_1gpa0dndpn261nmj1k3pbdpt6o64.png-33.2kB"></p><h3 id="3-6、根据生命周期阶段查看索引setting信息"><a href="#3-6、根据生命周期阶段查看索引setting信息" class="headerlink" title="3.6、根据生命周期阶段查看索引setting信息"></a>3.6、根据生命周期阶段查看索引setting信息</h3><ul><li><p>hot阶段<br><img src="http://static.zybuluo.com/a807257775/hi9q4jpzfavohxuhp8447223/image_1gps6kr4hq8l9p2vvitpd1r7m35.png" alt="image_1gps6kr4hq8l9p2vvitpd1r7m35.png-11.7kB"><br><img src="http://static.zybuluo.com/a807257775/aug16a20fcz5ji211ivyogpi/image_1gps6kbj9g0b1elo175d6h21cdm2o.png" alt="image_1gps6kbj9g0b1elo175d6h21cdm2o.png-65.2kB"></p></li><li><p>warm阶段<br><img src="http://static.zybuluo.com/a807257775/jq7b591lqwe8rl7vvddrsphq/image_1gps6lf4i12qc1cmg8h016nh1iav3i.png" alt="image_1gps6lf4i12qc1cmg8h016nh1iav3i.png-61.4kB"></p></li><li><p>cold阶段<br><img src="http://static.zybuluo.com/a807257775/jc3ztqve2aej9vau540pxvbw/image_1gps6mnub1f7q2si65qvor1j73v.png" alt="image_1gps6mnub1f7q2si65qvor1j73v.png-63.9kB"><br><img src="http://static.zybuluo.com/a807257775/svyod15j881izeih4nf5008j/image_1gps6n0is18ct1kocqgc4po1bps4c.png" alt="image_1gps6n0is18ct1kocqgc4po1bps4c.png-12.1kB"></p></li></ul><h2 id="4、集群极端性测试"><a href="#4、集群极端性测试" class="headerlink" title="4、集群极端性测试"></a>4、集群极端性测试</h2><h3 id="4-1、数据节点故障对集群的影响？"><a href="#4-1、数据节点故障对集群的影响？" class="headerlink" title="4.1、数据节点故障对集群的影响？"></a>4.1、数据节点故障对集群的影响？</h3><ul><li><p>当前shards分布如下：<br><img src="http://static.zybuluo.com/a807257775/15txw57exbrlg1b39394snza/image_1gpa19l1t1t6o1h4717qtp3kl0u8v.png" alt="image_1gpa19l1t1t6o1h4717qtp3kl0u8v.png-12.1kB"></p></li><li><p>创建新索引，模拟当前生产hot索引<br><img src="http://static.zybuluo.com/a807257775/d6rskan2gmau1aw4bpki7dpx/image_1gpa1bj2rk985q014uk10rt1lj09c.png" alt="image_1gpa1bj2rk985q014uk10rt1lj09c.png-33.5kB"></p></li><li><p>模拟cold节点全部宕机<br><img src="http://static.zybuluo.com/a807257775/58s38u2pclts221wcxn3mmrm/image_1gpa1cg9bhj71hcs1qmk5bltn09p.png" alt="image_1gpa1cg9bhj71hcs1qmk5bltn09p.png-225.5kB"><br><img src="http://static.zybuluo.com/a807257775/y4oq0rnnlksusf5e6jtrtoyb/image_1gpa1e01n1bcm1la7115g195q3mra6.png" alt="image_1gpa1e01n1bcm1la7115g195q3mra6.png-29.9kB"></p></li><li><p>测试hot节点索引是否可读可写<br><img src="http://static.zybuluo.com/a807257775/a3uru2he5c7adu3ugl8cb82p/image_1gpa1ftuq18n41ai8jhemkt1snnb0.png" alt="image_1gpa1ftuq18n41ai8jhemkt1snnb0.png-56.9kB"><br><img src="http://static.zybuluo.com/a807257775/b7ki4vzjibporsho9exzzqt7/image_1gpa1fmhd1luf1i9i18a9ulodrfaj.png" alt="image_1gpa1fmhd1luf1i9i18a9ulodrfaj.png-46kB"></p></li></ul><h3 id="4-2、索引分片数据持续写入，会对分片迁移造成什么影响？"><a href="#4-2、索引分片数据持续写入，会对分片迁移造成什么影响？" class="headerlink" title="4.2、索引分片数据持续写入，会对分片迁移造成什么影响？"></a>4.2、索引分片数据持续写入，会对分片迁移造成什么影响？</h3><ul><li><p>当前shards分布如下：<br><img src="http://static.zybuluo.com/a807257775/0m84d4sanepisj78am3eomlj/image_1gpa1thpgj81slr10s96je14rjbq.png" alt="image_1gpa1thpgj81slr10s96je14rjbq.png-19.4kB"></p></li><li><p>向202201索引导入数据，观察ILM迁移是否受影响<br><img src="http://static.zybuluo.com/a807257775/0j74lfz7qf7y45v27zokeui6/image_1gpa28oo91hhr1ams3rv14ck2erc7.png" alt="image_1gpa28oo91hhr1ams3rv14ck2erc7.png-192.2kB"></p></li><li><p>右边数据持续写入，202201的个别分片还处于RELOCATION的状态，但此时并不影响数据查询和迁移<br><img src="http://static.zybuluo.com/a807257775/3px1xcjy057s944vnjn7a1z2/image_1gpa29ilc1r4rnlrnf01c2f1f1ick.png" alt="image_1gpa29ilc1r4rnlrnf01c2f1f1ick.png-206.8kB"><br><img src="http://static.zybuluo.com/a807257775/az21h906aqr468ppl9qtltsj/image_1gpa29sdsgfa13no15p01lokkkpd1.png" alt="image_1gpa29sdsgfa13no15p01lokkkpd1.png-188.9kB"><br><img src="http://static.zybuluo.com/a807257775/42rlycnb8z894ncl2221av04/image_1gpa2ap9t14dlo28vbj1eiks89de.png" alt="image_1gpa2ap9t14dlo28vbj1eiks89de.png-47.5kB"></p></li></ul><h2 id="5、问题讨论"><a href="#5、问题讨论" class="headerlink" title="5、问题讨论"></a>5、问题讨论</h2><h3 id="5-1、现有架构如何迁移至冷热架构"><a href="#5-1、现有架构如何迁移至冷热架构" class="headerlink" title="5.1、现有架构如何迁移至冷热架构"></a>5.1、现有架构如何迁移至冷热架构</h3><ul><li>修改现有集群角色或给节点添加标签，不能热更新，需要修改配置，重启集群，且修改角色还需要执行一系列复杂的操作；</li><li>迁移数据，使用logstash或elasticdump迁移数据，应用割切如何进行？</li><li>目前生产的ES数据查询是通过别名进行的，如果使用了冷热分离的技术，冷节点的机器配置是低于热节点的，并且冷节点上存放的数据周期很长，各方面性能都低于热节点，<ul><li>阿里专家答复：如果用alias查全部索引会受到冷节点算力少的影响，不过在查询量不大的情况的影响较小。如果查询QPS比较高，最好在查询条件上做修改，查对应时间段的索引</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Elasticsearch冷热分离技术验证&quot;&gt;&lt;a href=&quot;#Elasticsearch冷热分离技术验证&quot; class=&quot;headerlink&quot; title=&quot;Elasticsearch冷热分离技术验证&quot;&gt;&lt;/a&gt;Elasticsearch冷热分离技术验证&lt;/
      
    
    </summary>
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/categories/ELK%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/tags/ELK%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>ES故障节点平替方案-2022</title>
    <link href="http://www.lisirlife.cn/2022/12/30/ES%E6%95%85%E9%9A%9C%E8%8A%82%E7%82%B9%E5%B9%B3%E6%9B%BF%E6%96%B9%E6%A1%88-2022/"/>
    <id>http://www.lisirlife.cn/2022/12/30/ES故障节点平替方案-2022/</id>
    <published>2022-12-30T04:30:00.000Z</published>
    <updated>2024-09-21T09:02:52.386Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ES故障节点平替方案-2022"><a href="#ES故障节点平替方案-2022" class="headerlink" title="ES故障节点平替方案-2022"></a>ES故障节点平替方案-2022</h1><h2 id="1、事件背景"><a href="#1、事件背景" class="headerlink" title="1、事件背景"></a>1、事件背景</h2><blockquote><p>2022年8月11日早间7:26分微信告警，集群出现<code>没有分配一个或多个复制分片</code>，状态为YELLOW状态，随后全面排查服务器相关节点日志后，发现10.32.58.118的系统MESSAGE日志出现磁盘错误（EXT4-fs (vdb1): Delayed block allocation failed for inode 3932853 at logical offset 77824 with max blocks 2048 with error 5），经金融云技术人员分析服务磁盘很可能已经出现逻辑坏道，需要执行fsck文件系统修复，此修复必须要重启机器执行。需在保证业务连续性的情况下，平替节点（不更换ES节点IP）。</p></blockquote><h2 id="2、集群信息汇总"><a href="#2、集群信息汇总" class="headerlink" title="2、集群信息汇总"></a>2、集群信息汇总</h2><table><thead><tr><th>平台</th><th>IP</th><th>用途</th><th>ES版本</th><th>磁盘容量</th><th>资源配置</th><th>类型</th></tr></thead><tbody><tr><td>CentOS 7.4.1708</td><td>10.32.58.117</td><td>ES</td><td>7.3.2</td><td>1TB</td><td>32C/64G</td><td>生产</td></tr><tr><td>CentOS 7.4.1708</td><td>10.32.58.118</td><td>ES</td><td>7.3.2</td><td>1TB</td><td>32C/64G</td><td>生产(fault)</td></tr><tr><td>CentOS 7.4.1708</td><td>10.32.58.119</td><td>ES</td><td>7.3.2</td><td>1TB</td><td>32C/64G</td><td>生产</td></tr><tr><td>CentOS 7.4.1708</td><td>10.32.58.145</td><td>ES</td><td>7.3.2</td><td>1TB</td><td>32C/64G</td><td>生产</td></tr><tr><td>CentOS 7.4.1708</td><td>10.32.58.146</td><td>ES</td><td>7.3.2</td><td>1TB</td><td>32C/64G</td><td>生产</td></tr><tr><td>CentOS 7.4.1708</td><td>10.32.58.170</td><td>ES</td><td>7.3.2</td><td>1TB</td><td>32C/64G</td><td>生产(new)</td></tr></tbody></table><h2 id="3、节点平替方案"><a href="#3、节点平替方案" class="headerlink" title="3、节点平替方案"></a>3、节点平替方案</h2><h3 id="3-1、确认集群磁盘容量策略及当前可用容量"><a href="#3-1、确认集群磁盘容量策略及当前可用容量" class="headerlink" title="3.1、确认集群磁盘容量策略及当前可用容量"></a>3.1、确认集群磁盘容量策略及当前可用容量</h3><ul><li>查看集群磁盘容量策略：<code>GET _cluster/settings?include_defaults&amp;flat_settings</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;cluster.routing.allocation.disk.watermark.high&quot; : &quot;90%&quot;,</span><br><span class="line">&quot;cluster.routing.allocation.disk.watermark.low&quot; : &quot;85%&quot;,</span><br><span class="line">&quot;cluster.routing.allocation.enable&quot; : &quot;all&quot;,</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>提示：注意目标节点的空间是否充足，满足磁盘分片创建的水位线。</p></blockquote><h3 id="3-2、关闭现有集群自平衡机制"><a href="#3-2、关闭现有集群自平衡机制" class="headerlink" title="3.2、关闭现有集群自平衡机制"></a>3.2、关闭现有集群自平衡机制</h3><ul><li>集群设置信息查看：<code>GET _cluster/settings?include_defaults&amp;flat_settings</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PUT _cluster/settings </span><br><span class="line">&#123; </span><br><span class="line">  &quot;persistent&quot;: &#123; </span><br><span class="line">    &quot;cluster.routing.allocation.enable&quot;: &quot;none&quot;,</span><br><span class="line">    &quot;cluster.routing.rebalance.enable&quot;: &quot;none&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3、调整集群每秒传输字节"><a href="#3-3、调整集群每秒传输字节" class="headerlink" title="3.3、调整集群每秒传输字节"></a>3.3、调整集群每秒传输字节</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT /_cluster/settings</span><br><span class="line">&#123;</span><br><span class="line">    &quot;persistent&quot; : &#123;</span><br><span class="line">        &quot;indices.recovery.max_bytes_per_sec&quot; : &quot;80mb&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4、手动迁移故障节点118分片及副本到其他在线节点"><a href="#3-4、手动迁移故障节点118分片及副本到其他在线节点" class="headerlink" title="3.4、手动迁移故障节点118分片及副本到其他在线节点"></a>3.4、手动迁移故障节点118分片及副本到其他在线节点</h3><blockquote><p>参数解析：<code>move</code>将started（已启动）状态的分片从一个节点移动到另一个节点。move包含四个属性：index（索引名）、shard（分片编号）、from_node（节点名，从哪个节点移动）、to_node（节点名，移动到哪个节点）</p></blockquote><ul><li>手动迁移命令：<img src="http://static.zybuluo.com/a807257775/konwwl7dgkrfradxruudn43r/%E8%BF%81%E7%A7%BB%E7%B4%A2%E5%BC%95%E5%88%86%E7%89%87%E5%91%BD%E4%BB%A4.txt" alt="迁移索引分片命令.txt-5.9kB"></li></ul><h3 id="3-5、确认故障节点分片已迁移完毕后，关停118-ES服务"><a href="#3-5、确认故障节点分片已迁移完毕后，关停118-ES服务" class="headerlink" title="3.5、确认故障节点分片已迁移完毕后，关停118 ES服务"></a>3.5、确认故障节点分片已迁移完毕后，关停118 ES服务</h3><h3 id="3-6、新机器更换IP地址为118"><a href="#3-6、新机器更换IP地址为118" class="headerlink" title="3.6、新机器更换IP地址为118"></a>3.6、新机器更换IP地址为118</h3><blockquote><p>提示：更换服务器IP需联系金融云张万星 电话：13391857556</p></blockquote><h3 id="3-7、拷贝118配置文件到新节点"><a href="#3-7、拷贝118配置文件到新节点" class="headerlink" title="3.7、拷贝118配置文件到新节点"></a>3.7、拷贝118配置文件到新节点</h3><blockquote><p>提示：已提前完成，启动前进行核对</p></blockquote><h3 id="3-8、启动新118服务添加至集群"><a href="#3-8、启动新118服务添加至集群" class="headerlink" title="3.8、启动新118服务添加至集群"></a>3.8、启动新118服务添加至集群</h3><h3 id="3-9、命令迁移原分片（保证和之前截图一致）"><a href="#3-9、命令迁移原分片（保证和之前截图一致）" class="headerlink" title="3.9、命令迁移原分片（保证和之前截图一致）"></a>3.9、命令迁移原分片（保证和之前截图一致）</h3><ul><li>手动回迁命令：<img src="http://static.zybuluo.com/a807257775/q3nii3zy5ro7cgw1nankhukr/%E8%BF%81%E7%A7%BB%E7%B4%A2%E5%BC%95%E5%88%86%E7%89%87%E8%87%B3%E5%8E%9F%E8%8A%82%E7%82%B9-%E5%9B%9E%E8%BF%81.txt" alt="迁移索引分片至原节点-回迁.txt-5.9kB"></li></ul><h3 id="3-9、迁移完成后，开启集群自平衡"><a href="#3-9、迁移完成后，开启集群自平衡" class="headerlink" title="3.9、迁移完成后，开启集群自平衡"></a>3.9、迁移完成后，开启集群自平衡</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PUT _cluster/settings </span><br><span class="line">&#123; </span><br><span class="line">  &quot;persistent&quot;: &#123; </span><br><span class="line">    &quot;cluster.routing.allocation.enable&quot;: &quot;all&quot;,</span><br><span class="line">    &quot;cluster.routing.rebalance.enable&quot;: &quot;all&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ES故障节点平替方案-2022&quot;&gt;&lt;a href=&quot;#ES故障节点平替方案-2022&quot; class=&quot;headerlink&quot; title=&quot;ES故障节点平替方案-2022&quot;&gt;&lt;/a&gt;ES故障节点平替方案-2022&lt;/h1&gt;&lt;h2 id=&quot;1、事件背景&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/categories/ELK%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/tags/ELK%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>基于openresty实现nginx+lua鉴权功能</title>
    <link href="http://www.lisirlife.cn/2022/01/05/%E5%9F%BA%E4%BA%8Eopenresty%E5%AE%9E%E7%8E%B0nginx+lua%E9%89%B4%E6%9D%83%E5%8A%9F%E8%83%BD/"/>
    <id>http://www.lisirlife.cn/2022/01/05/基于openresty实现nginx+lua鉴权功能/</id>
    <published>2022-01-05T07:00:00.000Z</published>
    <updated>2024-09-21T09:02:52.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基于openresty实现nginx-lua鉴权功能"><a href="#基于openresty实现nginx-lua鉴权功能" class="headerlink" title="基于openresty实现nginx+lua鉴权功能"></a>基于openresty实现nginx+lua鉴权功能</h1><hr><h2 id="1、需求背景"><a href="#1、需求背景" class="headerlink" title="1、需求背景"></a>1、需求背景</h2><blockquote><p>客户请求我方接口，会带有token等参数，获取参数后，查询参数合法性与redis是否匹配，匹配则放行，不匹配则403访问拒绝，并对接口使用限流措施；</p></blockquote><h2 id="2、部署需知"><a href="#2、部署需知" class="headerlink" title="2、部署需知"></a>2、部署需知</h2><blockquote><p>目前最新版的OpenResty内置的lua_redis模块，只可用于单机版redis，这个并不复合架构的高可用性，网上也有相关开源的案例，但均不支持集群密码连接，这里就仅使用单机版进行部署，可以考虑替代方案：TwemProxy(nutcracker)集群方案</p></blockquote><h2 id="3、OpenResty简介"><a href="#3、OpenResty简介" class="headerlink" title="3、OpenResty简介"></a>3、OpenResty简介</h2><blockquote><p>OpenResty是基于Nginx和Lua的高性能Web平台，OpenResty通过汇聚各种设计精良的Nginx模块，从而将Nginx有效地变成一个强大的通用Web应用平台。根据需求，本次我们利用OpenResty的lua模块，将nginx与redis进行连接，客户方发起请求后，行请求拦截。</p></blockquote><h2 id="4、安装环境介绍"><a href="#4、安装环境介绍" class="headerlink" title="4、安装环境介绍"></a>4、安装环境介绍</h2><table><thead><tr><th>平台</th><th>IP</th><th>OpenResty版本</th><th>Redis版本</th></tr></thead><tbody><tr><td>CentOS 7.8 64Bit</td><td>192.168.2.245</td><td>openresty-1.19.9.1</td><td>redis-6.2.5</td><td></td></tr></tbody></table><h2 id="5、Openresty部署"><a href="#5、Openresty部署" class="headerlink" title="5、Openresty部署"></a>5、Openresty部署</h2><h3 id="5-1、下载源码包"><a href="#5-1、下载源码包" class="headerlink" title="5.1、下载源码包"></a>5.1、下载源码包</h3><ul><li><a href="http://openresty.org/cn/download.html" target="_blank" rel="noopener">官方下载地址</a></li><li><a href="http://openresty.org/cn/installation.html" target="_blank" rel="noopener">官方安装手册</a></li></ul><h3 id="5-2、编译编码包"><a href="#5-2、编译编码包" class="headerlink" title="5.2、编译编码包"></a>5.2、编译编码包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -pv /home/ap/iflytek/yth-apps/system/openresty-1.19.9.1</span><br><span class="line">./configure --prefix=/home/ap/iflytek/yth-apps/system/openresty-1.19.9.1</span><br><span class="line">gmake</span><br><span class="line">gmake install</span><br></pre></td></tr></table></figure><h3 id="5-3、启动测试"><a href="#5-3、启动测试" class="headerlink" title="5.3、启动测试"></a>5.3、启动测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/ap/iflytek/yth-apps/system/openresty-1.19.9.1/nginx/sbin</span><br><span class="line">./nginx</span><br></pre></td></tr></table></figure><h3 id="5-3、lua测试"><a href="#5-3、lua测试" class="headerlink" title="5.3、lua测试"></a>5.3、lua测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#在nginx.conf，server段中增加如下配置</span><br><span class="line">location /lua &#123;</span><br><span class="line">    default_type text/html;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.say(&quot;Hello Lua!&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#重载nginx</span><br><span class="line">./nginx -s reload</span><br><span class="line">#访问测试</span><br><span class="line">curl http://127.0.0.1/lua</span><br><span class="line">#如下返回表示lua安装正常</span><br><span class="line">Hello Lua!</span><br></pre></td></tr></table></figure><h2 id="6、Redis部署"><a href="#6、Redis部署" class="headerlink" title="6、Redis部署"></a>6、Redis部署</h2><blockquote><p>提示：源码安装这里不在展示，直接使用编译好的二进制文件进行启动，这里的二进制包是7下编译的，向下兼容6代系统</p></blockquote><h3 id="6-1、解压二进制文件包"><a href="#6-1、解压二进制文件包" class="headerlink" title="6.1、解压二进制文件包"></a>6.1、解压二进制文件包</h3><blockquote><p>提示：根据实际路径，注意logfile、pidfile、dir、requirepass等配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip -d redis_6.2.5_builder_auth.zip /home/ap/iflytek/yth-apps/system/</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="6-2、验证服务"><a href="#6-2、验证服务" class="headerlink" title="6.2、验证服务"></a>6.2、验证服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-403089 bin]# ./redis-server ../conf/redis.conf </span><br><span class="line">[root@ecs-403089 bin]# ./redis-cli -h 127.0.0.1 -p 6379 -a 123456</span><br><span class="line">Warning: Using a password with &apos;-a&apos; or &apos;-u&apos; option on the command line interface may not be safe.</span><br><span class="line">127.0.0.1:6379&gt; set lisir &quot;007&quot;</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get lisir</span><br><span class="line">&quot;007&quot;</span><br><span class="line">127.0.0.1:6379&gt; exit</span><br></pre></td></tr></table></figure><h2 id="7、OpenResty配置"><a href="#7、OpenResty配置" class="headerlink" title="7、OpenResty配置"></a>7、OpenResty配置</h2><ul><li><p>附主配置文件：nginx.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">#user ccb-yth ccb-yth;</span><br><span class="line">worker_processes  6;</span><br><span class="line">worker_cpu_affinity 000001 000010 000100 001000 010000 100000;</span><br><span class="line">error_log  logs/error.log  error;</span><br><span class="line">#pid        conf/pidifle/nginx.pid;</span><br><span class="line">worker_rlimit_nofile 65535;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    use epoll;</span><br><span class="line">    worker_connections  65535;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    server_tokens off;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    add_header X-Frame-Options SAMEORIGIN;</span><br><span class="line">    underscores_in_headers on;</span><br><span class="line">    fastcgi_intercept_errors on;</span><br><span class="line">    </span><br><span class="line">    tcp_nopush     on;</span><br><span class="line">    tcp_nodelay on;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  60s;</span><br><span class="line">    server_names_hash_bucket_size 128;</span><br><span class="line">    </span><br><span class="line">    client_header_buffer_size 32k;</span><br><span class="line">    large_client_header_buffers 8 128k;</span><br><span class="line">    client_body_buffer_size  128k;</span><br><span class="line">    client_max_body_size 10m;</span><br><span class="line">    client_body_temp_path /tmp;</span><br><span class="line"></span><br><span class="line">    proxy_connect_timeout     100s;</span><br><span class="line">    proxy_read_timeout       100s;</span><br><span class="line">    proxy_send_timeout       100s;</span><br><span class="line">    proxy_buffer_size        64k;</span><br><span class="line">    proxy_buffers            4 64k;</span><br><span class="line">    proxy_busy_buffers_size  128k;</span><br><span class="line">    proxy_temp_file_write_size 128k;</span><br><span class="line">    </span><br><span class="line">#速率限制配置</span><br><span class="line">    limit_req_zone $server_name zone=perserver:10m rate=100r/s;</span><br><span class="line">    limit_req_zone $binary_remote_addr zone=perip:10m rate=100r/s;</span><br><span class="line">    limit_req_status 503;</span><br><span class="line">    limit_req_log_level error;</span><br><span class="line"></span><br><span class="line">#连接数限制配置</span><br><span class="line">    limit_conn_zone $binary_remote_addr zone=peripconn:10m;</span><br><span class="line">    limit_conn_zone $server_name zone=perserverconn:10m;</span><br><span class="line">    limit_conn_status 503;</span><br><span class="line">    limit_conn_log_level error;</span><br><span class="line"></span><br><span class="line">    log_format access &apos;$remote_addr - $remote_user [$time_local] &quot;$server_name&quot; &quot;$request&quot; &apos;</span><br><span class="line">        &apos;$status $body_bytes_sent &quot;$request_body&quot; &quot;$http_referer&quot; &apos;</span><br><span class="line">        &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot; &apos;</span><br><span class="line">        &apos;$connection $upstream_addr &apos;</span><br><span class="line">        &apos;$upstream_response_time $request_time&apos;;</span><br><span class="line"></span><br><span class="line">    access_log logs/access.log access;</span><br><span class="line"></span><br><span class="line">##########一体化负载组##########</span><br><span class="line">    upstream yth_load_balancing &#123;</span><br><span class="line">        server 128.196.124.222:8850;</span><br><span class="line">        server 128.196.124.224:8850;</span><br><span class="line">        #server 192.168.92.233:8850;</span><br><span class="line">        keepalive 10;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">#lua模块路径，多个之间”;”分隔，其中”;;”表示默认搜索路径，默认到/usr/servers/nginx下找</span><br><span class="line">    lua_package_path &quot;/home/ap/iflytek/yth-apps/system/openresty-1.19.9.1/lualib/?.lua;;/home/ap/iflytek/yth-apps/system/openresty-1.19.9.1/nginx/conf/openResty/?.lua;;&quot;;</span><br><span class="line">    lua_package_cpath &quot;/home/ap/iflytek/yth-apps/system/openresty-1.19.9.1/lualib/?.so;&quot;;</span><br><span class="line">    include /home/ap/iflytek/yth-apps/system/openresty-1.19.9.1/nginx/conf/openResty/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>附虚拟主机配置文件：20000_auth.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       20000;</span><br><span class="line">    server_name  0.0.0.0;</span><br><span class="line"></span><br><span class="line">    if ($request_method = GET) &#123;</span><br><span class="line">        return 405;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    #p4接入</span><br><span class="line">    location  /yth/api/p4 &#123;</span><br><span class="line">        proxy_pass http://yth_load_balancing;</span><br><span class="line">        include proxyhttp.conf;</span><br><span class="line">        #允许1秒钟不超过100个请求，最大延迟请求数量不大于100. 如果请求不需要被延迟，添加nodelay参数，服务器会立刻返回503状态码。</span><br><span class="line">        limit_req zone=perip burst=100;</span><br><span class="line">        #针对服务进行连接限制，限制并发连接数为100</span><br><span class="line">        #limit_conn peripconn 100;</span><br><span class="line">        access_log logs/p4_access.log access;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    #redis鉴权接入</span><br><span class="line">    location  /yth/api &#123;</span><br><span class="line">        default_type &apos;application/json&apos;;</span><br><span class="line">        lua_code_cache off;</span><br><span class="line">        rewrite_by_lua_file  conf/openResty/lua/redis/redis-util.lua;</span><br><span class="line">        proxy_pass http://yth_load_balancing;</span><br><span class="line">        include proxyhttp.conf;</span><br><span class="line">        #允许1秒钟不超过100个请求，最大延迟请求数量不大于100. 如果请求不需要被延迟，添加nodelay参数，服务器会立刻返回503状态码。</span><br><span class="line">        limit_req zone=perip burst=100;</span><br><span class="line">        #针对服务进行连接限制，限制并发连接数为100</span><br><span class="line">        #limit_conn peripconn 100;</span><br><span class="line">        access_log logs/redis_access.log access;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="7、lua-redis脚本定制开发"><a href="#7、lua-redis脚本定制开发" class="headerlink" title="7、lua_redis脚本定制开发"></a>7、lua_redis脚本定制开发</h2><blockquote><p>开发逻辑：通过lua获取请求中的get或post参数，将参数json格式化，判断”appid”、”token”、”callid”三个参数不可缺少，则返回400报错，随后拼接参数”appid”和”token”后，去redis进行查询，如果token在redis中为空，则返回403报错，如果都满足，进入nginx location转发请求（rewrite_by_lua_file）</p></blockquote><ul><li>附连接redis的lua脚本：redis-util.lua<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">local function close_redes( red )</span><br><span class="line">  if not red then</span><br><span class="line">    return</span><br><span class="line">  end</span><br><span class="line">  -- 释放连接（连接池实现）</span><br><span class="line">  local pool_max_idle_time = 10000 -- 毫秒</span><br><span class="line">  local pool_size = 100 --连接池大小</span><br><span class="line">  local ok, err = red:set_keepalive(pool_max_idle_time, pool_size)</span><br><span class="line">  if not ok then</span><br><span class="line">    ngx.say(&quot;set keepalive error : &quot;, err)</span><br><span class="line">  end</span><br><span class="line">end</span><br><span class="line"> </span><br><span class="line">local redis = require(&quot;resty.redis&quot;)</span><br><span class="line"> </span><br><span class="line">-- 创建实例</span><br><span class="line">local red = redis:new()</span><br><span class="line">-- 设置超时(毫秒)</span><br><span class="line">red:set_timeout(2000)</span><br><span class="line">-- 建立连接</span><br><span class="line">local ip = &quot;128.196.124.222&quot;</span><br><span class="line">local port = 6379</span><br><span class="line">local ok, err = red:connect(ip, port)</span><br><span class="line">if not ok then</span><br><span class="line">  return</span><br><span class="line">end</span><br><span class="line">local res, err = red:auth(&quot;123456&quot;)</span><br><span class="line">if not res then</span><br><span class="line">  ngx.say(&quot;connect to redis error : &quot;, err)</span><br><span class="line">  return</span><br><span class="line">end</span><br><span class="line"> </span><br><span class="line">-- 选择db 0</span><br><span class="line">local ok, err = red:select(0)  </span><br><span class="line">if not ok then</span><br><span class="line">    ngx.say(&quot;failed to select db: &quot;, err)</span><br><span class="line">    return</span><br><span class="line">end</span><br><span class="line"> </span><br><span class="line">--Nginx服务器中使用lua获取get或post参数</span><br><span class="line">local request_method = ngx.var.request_method</span><br><span class="line">local args = nil</span><br><span class="line">local param = nil</span><br><span class="line"> </span><br><span class="line">--获取url参数的值</span><br><span class="line">if &quot;GET&quot; == request_method then</span><br><span class="line">    args = ngx.req.get_uri_args()</span><br><span class="line">elseif &quot;POST&quot; == request_method then</span><br><span class="line">    ngx.req.read_body()</span><br><span class="line">    args = ngx.req.get_post_args()</span><br><span class="line">end</span><br><span class="line">cjson = require &quot;cjson&quot;</span><br><span class="line">if ( args[&quot;appid&quot;] == nil or args[&quot;token&quot;] == nil or args[&quot;callid&quot;] == nil ) then</span><br><span class="line">       -- 如果输入参数缺少appi or token or callid，，则返回400报错</span><br><span class="line">       local loginfailobj = &#123;success = false,message = &quot;Bad request&quot;,code = 400,timestamp = os.time()&#125;</span><br><span class="line">       local loginfailjson = cjson.encode(loginfailobj)</span><br><span class="line">       ngx.say(loginfailjson)</span><br><span class="line">else</span><br><span class="line">       -- ngx.print(args[&quot;appid&quot;]..&quot;:&quot;..args[&quot;token&quot;])</span><br><span class="line">       param = (&quot;yth:&quot;..args[&quot;appid&quot;]..&quot;:&quot;..args[&quot;token&quot;])</span><br><span class="line">       local key_value = red:get(param)</span><br><span class="line">       local key_name = red:keys(param)</span><br><span class="line">       local res, errs = red:exists(param)</span><br><span class="line">       if ( res ~= 1 ) then</span><br><span class="line">        -- 如果token，在redis中为空，则返回403报错</span><br><span class="line">             local loginfailobj = &#123;success = false,message = &quot;Unauthorized&quot;,code = 403,timestamp = os.time()&#125;</span><br><span class="line">             local loginfailjson = cjson.encode(loginfailobj)</span><br><span class="line">             ngx.say(loginfailjson)</span><br><span class="line">      end</span><br><span class="line">end</span><br><span class="line">-- ngx.say(cjson.encode(key_value))</span><br><span class="line">-- ngx.say(cjson.encode(res))</span><br><span class="line">-- ngx.say(cjson.encode(key_name))</span><br><span class="line">red:close()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基于openresty实现nginx-lua鉴权功能&quot;&gt;&lt;a href=&quot;#基于openresty实现nginx-lua鉴权功能&quot; class=&quot;headerlink&quot; title=&quot;基于openresty实现nginx+lua鉴权功能&quot;&gt;&lt;/a&gt;基于openre
      
    
    </summary>
    
      <category term="NGINX文档" scheme="http://www.lisirlife.cn/categories/NGINX%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="NGINX代理" scheme="http://www.lisirlife.cn/tags/NGINX%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Java诊断工具Arthas使用手册</title>
    <link href="http://www.lisirlife.cn/2021/06/17/Java%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7Arthas%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>http://www.lisirlife.cn/2021/06/17/Java诊断工具Arthas使用手册/</id>
    <published>2021-06-17T07:15:00.000Z</published>
    <updated>2024-09-21T09:02:52.389Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java诊断工具Arthas使用手册"><a href="#Java诊断工具Arthas使用手册" class="headerlink" title="Java诊断工具Arthas使用手册"></a>Java诊断工具Arthas使用手册</h1><h2 id="1、Arthas可以解决什么问题？"><a href="#1、Arthas可以解决什么问题？" class="headerlink" title="1、Arthas可以解决什么问题？"></a>1、Arthas可以解决什么问题？</h2><ul><li><p>Arthas 是Alibaba开源的Java诊断工具，深受开发者喜爱。<br>当你遇到以下类似问题而束手无策时，Arthas可以帮助你解决：</p><ol><li>这个类从哪个 jar 包加载的？为什么会报各种类相关的 Exception？</li><li>我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？</li><li>遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？</li><li>线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！</li><li>是否有一个全局视角来查看系统的运行状况？</li><li>有什么办法可以监控到JVM的实时运行状态？</li><li>怎么快速定位应用的热点，生成火焰图？</li><li>怎样直接从JVM内查找某个类的实例？</li></ol></li><li><p><code>Arthas</code> 是阿里开源的 Java 诊断工具，深受开发者喜爱。在线排查问题，无需重启；动态跟踪 Java 代码；实时监控 JVM 状态。Arthas 支持 JDK 6+，支持 Linux/Mac/Windows，采用命令行交互模式，同时提供丰富的 Tab 自动补全功能，进一步方便进行问题的定位和诊断</p></li></ul><h2 id="2、下载与安装Arthas"><a href="#2、下载与安装Arthas" class="headerlink" title="2、下载与安装Arthas"></a>2、下载与安装Arthas</h2><blockquote><p>考虑后续生产是非互联网环境，所以采用全量包安装方法。本次使用arthas-bin.zip（3.5.1）版本进行部署实验，可前往Maven仓库或Github Releases下载，下载地址：<a href="https://github.com/alibaba/arthas/releases" target="_blank" rel="noopener">https://github.com/alibaba/arthas/releases</a></p></blockquote><h3 id="2-1、上传Arthas全量安装包至服务器"><a href="#2-1、上传Arthas全量安装包至服务器" class="headerlink" title="2.1、上传Arthas全量安装包至服务器"></a>2.1、上传Arthas全量安装包至服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#安装JDK1.8，添加当前用户的java环境变量</span><br><span class="line">[ccb-yth@APPSRV01 tools]$ cat ~/.bash_profile </span><br><span class="line">PATH=$PATH:$HOME/.local/bin:$HOME/bin</span><br><span class="line">JAVA_HOME=/home/ap/ccb-yth/java/jdk1.8.0_291</span><br><span class="line">export JAVA_HOME</span><br><span class="line">CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export CLASSPATH</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH:$HOME/bin:$JAVA_HOME/bin</span><br><span class="line">export PATH</span><br><span class="line"></span><br><span class="line">#验证JDK环境是否正常</span><br><span class="line">[ccb-yth@APPSRV01 tools]$ java -version</span><br><span class="line">java version &quot;1.8.0_291&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_291-b10)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.291-b10, mixed mode)</span><br><span class="line"></span><br><span class="line">#将arthas-bin.zip（3.5.1）解压到此目录</span><br><span class="line">[ccb-yth@APPSRV01 tools]$ pwd</span><br><span class="line">/home/ap/ccb-yth/tools</span><br><span class="line"></span><br><span class="line">#arthas-boot.jar为启动的监听jar包</span><br><span class="line">[ccb-yth@APPSRV01 tools]$ ll</span><br><span class="line">total 13492</span><br><span class="line">-rw-rw-r-- 1 ccb-yth ccb-yth     8470 Sep 27  2020 arthas-agent.jar</span><br><span class="line">-rw-rw-r-- 1 ccb-yth ccb-yth   141721 Sep 27  2020 arthas-boot.jar</span><br><span class="line">-rw-rw-r-- 1 ccb-yth ccb-yth   431033 Sep 27  2020 arthas-client.jar</span><br><span class="line">-rw-rw-r-- 1 ccb-yth ccb-yth 13143726 Sep 27  2020 arthas-core.jar</span><br><span class="line">drwxrwxr-x 2 ccb-yth ccb-yth        6 Jun 16 18:40 arthas-output</span><br><span class="line">-rw-rw-r-- 1 ccb-yth ccb-yth      403 Sep 27  2020 arthas.properties</span><br><span class="line">-rw-rw-r-- 1 ccb-yth ccb-yth     8988 Sep 27  2020 arthas-spy.jar</span><br><span class="line">-rwxrwxr-x 1 ccb-yth ccb-yth     3113 Sep 27  2020 as.bat</span><br><span class="line">-rwxrwxr-x 1 ccb-yth ccb-yth     7744 Sep 27  2020 as-service.bat</span><br><span class="line">-rwxr-xr-x 1 ccb-yth ccb-yth    32781 Sep 27  2020 as.sh</span><br><span class="line">drwxr-xr-x 2 ccb-yth ccb-yth      156 Sep 27  2020 async-profiler</span><br><span class="line">-rwxr-xr-x 1 ccb-yth ccb-yth      635 Sep 27  2020 install-local.sh</span><br><span class="line">drwxr-xr-x 2 ccb-yth ccb-yth      112 Sep 27  2020 lib</span><br><span class="line">-rw-rw-r-- 1 ccb-yth ccb-yth     2020 Sep 27  2020 logback.xml</span><br><span class="line">-rw-rw-r-- 1 ccb-yth ccb-yth     4506 Sep 27  2020 math-game.jar</span><br></pre></td></tr></table></figure><h3 id="2-2、启动Arthas"><a href="#2-2、启动Arthas" class="headerlink" title="2.2、启动Arthas"></a>2.2、启动Arthas</h3><blockquote><p>提示：根据官网建议，我们使用arthas-boot的方式进行启动，来监听java进程，启动arhas首先保证本机有一个正在运行的java进程，如果有多个，arthas会通过命令行交互的方式，让你来选择监听某个java进程；</p></blockquote><ul><li><p>使用java -jar的方式启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar arthas-boot.jar</span><br></pre></td></tr></table></figure></li><li><p>打印帮助信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar arthas-boot.jar -h</span><br></pre></td></tr></table></figure></li></ul><h2 id="3、Arthas的基本使用方法"><a href="#3、Arthas的基本使用方法" class="headerlink" title="3、Arthas的基本使用方法"></a>3、Arthas的基本使用方法</h2><h3 id="3-1、启动测试程序math-game"><a href="#3-1、启动测试程序math-game" class="headerlink" title="3.1、启动测试程序math-game"></a>3.1、启动测试程序math-game</h3><blockquote><p>math-game是一个简单的程序，每隔一秒生成一个随机数，再执行质因数分解，并打印出分解结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[ccb-yth@APPSRV01 tools]$ java -jar math-game.jar</span><br><span class="line">204915=3*5*19*719</span><br><span class="line">illegalArgumentCount:  1, number is: -121796, need &gt;= 2</span><br><span class="line">illegalArgumentCount:  2, number is: -166805, need &gt;= 2</span><br><span class="line">18271=11*11*151</span><br><span class="line">illegalArgumentCount:  3, number is: -126135, need &gt;= 2</span><br><span class="line">illegalArgumentCount:  4, number is: -85911, need &gt;= 2</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="3-2、启动arthas，attach到java进程"><a href="#3-2、启动arthas，attach到java进程" class="headerlink" title="3.2、启动arthas，attach到java进程"></a>3.2、启动arthas，attach到java进程</h3><ul><li>在命令行下面执行<code>java -jar arthas-boot.jar</code>（使用和目标进程一致的用户启动，否则可能attach失败）</li><li>如果<code>attach</code>不上目标进程，可以查看<code>~/logs/arthas/</code> 目录下的日志。</li><li><p><code>java -jar arthas-boot.jar -h</code> 打印更多参数信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ccb-yth@APPSRV01 tools]$ java -jar arthas-boot.jar</span><br><span class="line">[INFO] arthas-boot version: 3.5.1</span><br></pre></td></tr></table></figure></li><li><p>选择监听的java进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[INFO] Found existing java process, please choose one and input the serial number of the process, eg : 1. Then hit ENTER.</span><br><span class="line">* [1]: 9462 math-game.jar</span><br><span class="line">  [2]: 10344 /home/ap/ccb-yth/apps/data-collector/data-collector.jar</span><br></pre></td></tr></table></figure></li><li><p>math-game进程是第1个，则输入1，再敲回车。Arthas会attach到目标进程上，并输出日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">[INFO] arthas home: /home/ap/ccb-yth/tools</span><br><span class="line">[INFO] Try to attach process 9462</span><br><span class="line">[INFO] Attach process 9462 success.</span><br><span class="line">[INFO] arthas-client connect 127.0.0.1 3658</span><br><span class="line">  ,---.  ,------. ,--------.,--.  ,--.  ,---.   ,---.                           </span><br><span class="line"> /  O  \ |  .--. &apos;&apos;--.  .--&apos;|  &apos;--&apos;  | /  O  \ &apos;   .-&apos;                          </span><br><span class="line">|  .-.  ||  &apos;--&apos;.&apos;   |  |   |  .--.  ||  .-.  |`.  `-.                          </span><br><span class="line">|  | |  ||  |\  \    |  |   |  |  |  ||  | |  |.-&apos;    |                         </span><br><span class="line">`--&apos; `--&apos;`--&apos; &apos;--&apos;   `--&apos;   `--&apos;  `--&apos;`--&apos; `--&apos;`-----&apos;                          </span><br><span class="line">                                                                                </span><br><span class="line"></span><br><span class="line">wiki       https://arthas.aliyun.com/doc                                        </span><br><span class="line">tutorials  https://arthas.aliyun.com/doc/arthas-tutorials.html                  </span><br><span class="line">version    3.5.1                                                                </span><br><span class="line">main_class                                                                      </span><br><span class="line">pid        9462                                                                 </span><br><span class="line">time       2021-06-17 10:22:09  </span><br><span class="line">[arthas@9462]$</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-3、查看dashboard"><a href="#3-3、查看dashboard" class="headerlink" title="3.3、查看dashboard"></a>3.3、查看dashboard</h3><blockquote><p>提示：命令行输入dashboard，按回车，会展示当前进程的信息，按ctrl+c可以中断执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#当arthas附加到进程后，命令行提示符会变为[arthas@xxx]$，表明附加成功</span><br><span class="line">[arthas@9462]$ dashboard</span><br></pre></td></tr></table></figure></p></blockquote><p><img src="http://static.zybuluo.com/a807257775/4y4fc03pk8mcnjsne7svh926/image_1f8bsjea11leu1p4mtq91f5e3g3p.png" alt="image_1f8bsjea11leu1p4mtq91f5e3g3p.png-128.3kB"></p><h3 id="3-4、通过thread命令来获取到math-game进程的Main-Class"><a href="#3-4、通过thread命令来获取到math-game进程的Main-Class" class="headerlink" title="3.4、通过thread命令来获取到math-game进程的Main Class"></a>3.4、通过thread命令来获取到math-game进程的Main Class</h3><blockquote><p>thread 1会打印线程ID 1的栈，通常是main函数的线程。一目了然的了解系统的状态，哪些线程比较占cpu？他们到底在做什么？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[arthas@9462]$ thread 1 | grep &apos;main(&apos;</span><br><span class="line">    at demo.MathGame.main(MathGame.java:17)</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="3-5、通过jad来反编译Main-Class"><a href="#3-5、通过jad来反编译Main-Class" class="headerlink" title="3.5、通过jad来反编译Main Class"></a>3.5、通过jad来反编译Main Class</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">[arthas@9462]$ jad demo.MathGame</span><br><span class="line"></span><br><span class="line">ClassLoader:                                                                                                                                                      </span><br><span class="line">+-sun.misc.Launcher$AppClassLoader@70dea4e                                                                                                                        </span><br><span class="line">  +-sun.misc.Launcher$ExtClassLoader@68833bb2                                                                                                                     </span><br><span class="line"></span><br><span class="line">Location:                                                                                                                                                         </span><br><span class="line">/home/ap/ccb-yth/tools/math-game.jar                                                                                                                              </span><br><span class="line"></span><br><span class="line">       /*</span><br><span class="line">        * Decompiled with CFR.</span><br><span class="line">        */</span><br><span class="line">       package demo;</span><br><span class="line">       </span><br><span class="line">       import java.util.ArrayList;</span><br><span class="line">       import java.util.List;</span><br><span class="line">       import java.util.Random;</span><br><span class="line">       import java.util.concurrent.TimeUnit;</span><br><span class="line">       </span><br><span class="line">       public class MathGame &#123;</span><br><span class="line">           private static Random random = new Random();</span><br><span class="line">           private int illegalArgumentCount = 0;</span><br><span class="line">       </span><br><span class="line">           public List&lt;Integer&gt; primeFactors(int number) &#123;</span><br><span class="line">/*44*/         if (number &lt; 2) &#123;</span><br><span class="line">/*45*/             ++this.illegalArgumentCount;</span><br><span class="line">                   throw new IllegalArgumentException(&quot;number is: &quot; + number + &quot;, need &gt;= 2&quot;);</span><br><span class="line">               &#125;</span><br><span class="line">               ArrayList&lt;Integer&gt; result = new ArrayList&lt;Integer&gt;();</span><br><span class="line">/*50*/         int i = 2;</span><br><span class="line">/*51*/         while (i &lt;= number) &#123;</span><br><span class="line">/*52*/             if (number % i == 0) &#123;</span><br><span class="line">/*53*/                 result.add(i);</span><br><span class="line">/*54*/                 number /= i;</span><br><span class="line">/*55*/                 i = 2;</span><br><span class="line">                       continue;</span><br><span class="line">                   &#125;</span><br><span class="line">/*57*/             ++i;</span><br><span class="line">               &#125;</span><br><span class="line">/*61*/         return result;</span><br><span class="line">           &#125;</span><br><span class="line">       </span><br><span class="line">           public static void main(String[] args) throws InterruptedException &#123;</span><br><span class="line">               MathGame game = new MathGame();</span><br><span class="line">               while (true) &#123;</span><br><span class="line">/*16*/             game.run();</span><br><span class="line">/*17*/             TimeUnit.SECONDS.sleep(1L);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       </span><br><span class="line">           public void run() throws InterruptedException &#123;</span><br><span class="line">               try &#123;</span><br><span class="line">/*23*/             int number = random.nextInt() / 10000;</span><br><span class="line">/*24*/             List&lt;Integer&gt; primeFactors = this.primeFactors(number);</span><br><span class="line">/*25*/             MathGame.print(number, primeFactors);</span><br><span class="line">               &#125;</span><br><span class="line">               catch (Exception e) &#123;</span><br><span class="line">/*28*/             System.out.println(String.format(&quot;illegalArgumentCount:%3d, &quot;, this.illegalArgumentCount) + e.getMessage());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       </span><br><span class="line">           public static void print(int number, List&lt;Integer&gt; primeFactors) &#123;</span><br><span class="line">               StringBuffer sb = new StringBuffer(number + &quot;=&quot;);</span><br><span class="line">/*34*/         for (int factor : primeFactors) &#123;</span><br><span class="line">/*35*/             sb.append(factor).append(&apos;*&apos;);</span><br><span class="line">               &#125;</span><br><span class="line">/*37*/         if (sb.charAt(sb.length() - 1) == &apos;*&apos;) &#123;</span><br><span class="line">/*38*/             sb.deleteCharAt(sb.length() - 1);</span><br><span class="line">               &#125;</span><br><span class="line">/*40*/         System.out.println(sb);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">Affect(row-cnt:1) cost in 745 ms.</span><br></pre></td></tr></table></figure><h3 id="3-6、watch指令"><a href="#3-6、watch指令" class="headerlink" title="3.6、watch指令"></a>3.6、watch指令</h3><blockquote><p>通过watch命令来查看demo.MathGame#primeFactors函数的返回值</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[arthas@9462]$ watch demo.MathGame primeFactors returnObj</span><br><span class="line">Press Q or Ctrl+C to abort.</span><br><span class="line">Affect(class count: 1 , method count: 1) cost in 111 ms, listenerId: 1</span><br><span class="line">method=demo.MathGame.primeFactors location=AtExit</span><br><span class="line">ts=2021-06-17 10:29:00; [cost=2.068011ms] result=@ArrayList[</span><br><span class="line">    @Integer[2],</span><br><span class="line">    @Integer[2],</span><br><span class="line">    @Integer[3],</span><br><span class="line">    @Integer[37],</span><br><span class="line">    @Integer[101],</span><br><span class="line">]</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h3 id="3-7、生成进程火焰图"><a href="#3-7、生成进程火焰图" class="headerlink" title="3.7、生成进程火焰图"></a>3.7、生成进程火焰图</h3><blockquote><p><code>profiler</code> 命令支持生成应用热点的火焰图。本质上是通过不断的采样，然后把收集到的采样结果生成火焰图。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[arthas@10344]$ profiler start</span><br><span class="line">Started [cpu] profiling</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[arthas@10344]$ profiler stop</span><br><span class="line">OK</span><br><span class="line">profiler output file: /home/ap/ccb-yth/apps/data-collector/arthas-output/20210617-103942.svg</span><br><span class="line">[arthas@10344]$ exit</span><br><span class="line">[ccb-yth@APPSRV01 tools]$ sz /home/ap/ccb-yth/apps/data-collector/arthas-output/20210617-103942.svg</span><br></pre></td></tr></table></figure><p><img src="http://static.zybuluo.com/a807257775/tit0wjcvg0wfhckel1ifu1ka/image_1f8btis4v18kqljsfg41lc218ap16.png" alt="image_1f8btis4v18kqljsfg41lc218ap16.png-111.4kB"></p><h3 id="3-8、退出arthas"><a href="#3-8、退出arthas" class="headerlink" title="3.8、退出arthas"></a>3.8、退出arthas</h3><ul><li><p>如果只是退出当前的连接，可以用quit或者exit命令。Attach到目标进程上的arthas还会继续运行，端口会保持开放，下次连接时可以直接连接上。</p></li><li><p>如果想完全退出arthas，可以执行stop命令。</p></li></ul><h2 id="4、进阶使用"><a href="#4、进阶使用" class="headerlink" title="4、进阶使用"></a>4、进阶使用</h2><ul><li><a href="https://arthas.aliyun.com/doc/advanced-use.html" target="_blank" rel="noopener">官方进阶使用手册</a></li></ul><h2 id="5、官方手册与下载地址"><a href="#5、官方手册与下载地址" class="headerlink" title="5、官方手册与下载地址"></a>5、官方手册与下载地址</h2><ul><li><a href="https://github.com/alibaba/arthas/releases" target="_blank" rel="noopener">Arthas Github下载地址</a></li><li><a href="https://arthas.aliyun.com/doc/" target="_blank" rel="noopener">官方Arthas 中文用户文档</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java诊断工具Arthas使用手册&quot;&gt;&lt;a href=&quot;#Java诊断工具Arthas使用手册&quot; class=&quot;headerlink&quot; title=&quot;Java诊断工具Arthas使用手册&quot;&gt;&lt;/a&gt;Java诊断工具Arthas使用手册&lt;/h1&gt;&lt;h2 id=&quot;1
      
    
    </summary>
    
      <category term="Arthas" scheme="http://www.lisirlife.cn/categories/Arthas/"/>
    
    
      <category term="Arthas" scheme="http://www.lisirlife.cn/tags/Arthas/"/>
    
  </entry>
  
  <entry>
    <title>Nginx直播系统rtmp&amp;ffmpeg</title>
    <link href="http://www.lisirlife.cn/2021/04/19/Nginx%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9Frtmp&amp;ffmpeg/"/>
    <id>http://www.lisirlife.cn/2021/04/19/Nginx直播系统rtmp&amp;ffmpeg/</id>
    <published>2021-04-19T01:03:00.000Z</published>
    <updated>2024-09-21T09:02:52.398Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nginx直播系统rtmp-amp-ffmpeg"><a href="#Nginx直播系统rtmp-amp-ffmpeg" class="headerlink" title="Nginx直播系统rtmp&amp;ffmpeg"></a>Nginx直播系统rtmp&amp;ffmpeg</h1><h2 id="1、主流直播系统三大协议简介"><a href="#1、主流直播系统三大协议简介" class="headerlink" title="1、主流直播系统三大协议简介"></a>1、主流直播系统三大协议简介</h2><ul><li><p><code>HLS</code>，是苹果公司实现的基于 HTTP 的流媒体传输协议，全称 HTTP Live Streaming，可支持流媒体的直播和点播，主要应用在 iOS 系统，为 iOS 设备（如 iPhone、iPad）提供音视频直播和点播方案；</p></li><li><p><code>RTMP</code>，全称 Real Time Messaging Protocol，即实时消息传送协议。Adobe 公司为 Flash播放器和服务器之间音视频数据传输开发的私有协议。工作在TCP之上的明文协议，默认使用端口1935。协议中的基本数据单元成为消息（Message），传输的过程中消息会被拆分为更小的消息块（Chunk）单元。最后将分割后的消息块通过 TCP 协议传输，接收端再反解接收的消息块恢复成流媒体数据；</p></li><li><p><code>HTTP-FLV</code>即，将流媒体数据封装成FLV格式，然后通过HTTP协议传输给客户端。HTTP-FLV依靠MIME的特性，根据协议中的Content-Type来选择相应的程序去处理相应的内容，使得流媒体可以通过HTTP传输。相较于RTMP协议，HTTP-FLV能够好的穿透防火墙，它是基于HTTP/80传输，有效避免被防火墙拦截。除此之外，它可以通过 HTTP 302 跳转灵活调度/负载均衡，支持使用 HTTPS 加密传输，也能够兼容支持 Android，iOS 的移动端；</p></li></ul><p>图一：<img src="http://static.zybuluo.com/a807257775/j4001wstgr9q9jjixzuykmt7/image_1e5os8576150o18hl17vh4kr1ko816.png" alt="image_1e5os8576150o18hl17vh4kr1ko816.png-221.8kB"></p><h2 id="2、基于Nginx构建直播系统"><a href="#2、基于Nginx构建直播系统" class="headerlink" title="2、基于Nginx构建直播系统"></a>2、基于Nginx构建直播系统</h2><blockquote><p>如图二所示，利用nginx rtmp模块+ffmpeg工具，实现rtmp及hls协议分流+水印的直播系统，通过ffmpeg将直播流hls推送至阿里云、腾讯云，用户可通过本地地址或云端地址观看直播，有无水印取决ffmpeg推流配置；</p></blockquote><p>图二：<img src="http://static.zybuluo.com/a807257775/4bevf4x04zqdw9yc1ocq5rkn/image_1e5oraqup16tp1ho89lllk7q8lp.png" alt="image_1e5oraqup16tp1ho89lllk7q8lp.png-62.1kB"></p><ul><li>提示：<code>FFmpeg</code>是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。采用LGPL或GPL许可证。它提供了录制、转换以及流化音视频的完整解决方案。它包含了非常先进的音频/视频编解码库libavcodec，为了保证高可移植性和编解码质量，libavcodec里很多code都是从头开发的；</li></ul><h2 id="3、环境及相关软件介绍"><a href="#3、环境及相关软件介绍" class="headerlink" title="3、环境及相关软件介绍"></a>3、环境及相关软件介绍</h2><h3 id="3-1、实验环境"><a href="#3-1、实验环境" class="headerlink" title="3.1、实验环境"></a>3.1、实验环境</h3><table><thead><tr><th>平台</th><th>IP</th><th>用途</th><th>所需软件</th></tr></thead><tbody><tr><td>CentOS release 6.9 64Bit</td><td>172.21.0.5</td><td>拉端+水印处理+分流</td><td>nginx-1.16.1.tar.gz</td><td>x265_3.3.tar.gz</td><td></td></tr><tr><td></td><td></td><td></td><td></td><td>nginx-rtmp-module-1.2.1.zip </td></tr><tr><td></td><td></td><td></td><td></td><td>ffmpeg-4.2.1.tar.bz2 </td></tr><tr><td>Windows 7</td><td>192.168.1.106</td><td>推端</td><td>OBS+PotPlayer </td></tr></tbody></table><blockquote><p>提示：安装ffmpeg的过程相对比较麻烦，如需要开启更多ffmpeg功能，则对应的依赖关系就复杂</p></blockquote><h2 id="4、安装及部署"><a href="#4、安装及部署" class="headerlink" title="4、安装及部署"></a>4、安装及部署</h2><blockquote><p>提示：安装过程均基于oh my zsh的shell下进行</p></blockquote><h3 id="4-1、nginx及rtmp模块编译安装"><a href="#4-1、nginx及rtmp模块编译安装" class="headerlink" title="4.1、nginx及rtmp模块编译安装"></a>4.1、nginx及rtmp模块编译安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># root @ VM_0_5_centos in /soft [12:50:41]</span><br><span class="line">$ x nginx-1.16.1.tar.gz</span><br><span class="line">$ x nginx-rtmp-module-1.2.1.zip</span><br><span class="line">$ yum install vim telnet wget nethogs htop glances dstat traceroute lrzsz goaccess ntpdate dos2unix openssl-devel tcpdump lrzsz fio -y</span><br><span class="line">$ yum install pcre-devel zlib-devel libjpeg-devel libpng-devel freetype-devel openssl-devel curl curl-devel libxml2 libxml2-devel libjpeg libjpeg-devel libpng libpng-devel libmcrypt libmcrypt-devel openldap openldap-devel openssh-client -y</span><br><span class="line">$ useradd -s /sbin/nologin -M www</span><br><span class="line"># root @ VM_0_5_centos in /soft/nginx-1.16.1 [12:51:41]</span><br><span class="line">$ ./configure --prefix=/usr/local/nginx --user=www --group=www --with-http_stub_status_module --with-http_ssl_module --without-mail_pop3_module --without-mail_smtp_module --without-mail_imap_module --add-module=/soft/nginx-rtmp-module-1.2.1/nginx-rtmp-module-1.2.1/</span><br><span class="line">$ make &amp;&amp; make install</span><br><span class="line">$ cd /etc/init.d</span><br><span class="line"># root @ VM_0_5_centos in /etc/init.d [12:58:18]</span><br><span class="line">$ vim nginx</span><br><span class="line">$ chmod 777 nginx</span><br><span class="line">$ chkconfig nginx on</span><br></pre></td></tr></table></figure><h3 id="4-2、nginx配置及rtmp运行参数"><a href="#4-2、nginx配置及rtmp运行参数" class="headerlink" title="4.2、nginx配置及rtmp运行参数"></a>4.2、nginx配置及rtmp运行参数</h3><p>附件：<img src="http://static.zybuluo.com/a807257775/t9o7ak1b0ug7tnbb7ermzqkw/nginx%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8F%8Artmp%E8%BF%90%E8%A1%8C%E5%8F%82%E6%95%B0.zip" alt="nginx配置文件及rtmp运行参数.zip-3.9kB"></p><h3 id="4-2、ffmpeg编译安装"><a href="#4-2、ffmpeg编译安装" class="headerlink" title="4.2、ffmpeg编译安装"></a>4.2、ffmpeg编译安装</h3><blockquote><p>提示：安装ffmpeg前需解决相关依赖问题，并安装相关开发依赖组件，详见通用模板机安装手册；</p></blockquote><h4 id="4-2-1、dk-aac-2-0-1-tar-gz"><a href="#4-2-1、dk-aac-2-0-1-tar-gz" class="headerlink" title="4.2.1、dk-aac-2.0.1.tar.gz"></a>4.2.1、dk-aac-2.0.1.tar.gz</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x fdk-aac-2.0.1.tar.gz</span><br><span class="line">cd fdk-aac-2.0.1</span><br><span class="line">autoreconf -fiv</span><br><span class="line">./configure --disable-shared</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="4-2-2、lame-3-100-tar-gz"><a href="#4-2-2、lame-3-100-tar-gz" class="headerlink" title="4.2.2、lame-3.100.tar.gz"></a>4.2.2、lame-3.100.tar.gz</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x lame-3.100.tar.gz</span><br><span class="line">cd /soft/lame-3.100</span><br><span class="line">./configure --disable-shared --enable-nasm</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="4-2-3、opus-1-3-1-tar-gz"><a href="#4-2-3、opus-1-3-1-tar-gz" class="headerlink" title="4.2.3、opus-1.3.1.tar.gz"></a>4.2.3、opus-1.3.1.tar.gz</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x opus-1.3.1.tar.gz</span><br><span class="line">cd /soft/opus-1.3.1</span><br><span class="line">./configure --disable-shared</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="4-2-3、libvpx-zip"><a href="#4-2-3、libvpx-zip" class="headerlink" title="4.2.3、libvpx.zip"></a>4.2.3、libvpx.zip</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://chromium.googlesource.com/webm/libvpx.git/+archive/7ec7a33a081aeeb53fed1a8d87e4cbd189152527.tar.gz</span><br><span class="line">x libvpx.zip</span><br><span class="line">./configure --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=yasm</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="4-4-4、llibvorbis-1-3-6-zip"><a href="#4-4-4、llibvorbis-1-3-6-zip" class="headerlink" title="4.4.4、llibvorbis-1.3.6.zip"></a>4.4.4、llibvorbis-1.3.6.zip</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://ftp.osuosl.org/pub/xiph/releases/vorbis/libvorbis-1.3.6.zip</span><br><span class="line">x libvorbis-1.3.6.zip</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="4-4-5、libogg-1-3-0-tar-gz"><a href="#4-4-5、libogg-1-3-0-tar-gz" class="headerlink" title="4.4.5、libogg-1.3.0.tar.gz"></a>4.4.5、libogg-1.3.0.tar.gz</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http://downloads.xiph.org/releases/ogg/libogg-1.3.0.tar.gz</span><br><span class="line">x libogg-1.3.0.tar.gz</span><br><span class="line">cd libogg-1.3.0</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="4-4-6、SDL-1-2-15-tar-gz"><a href="#4-4-6、SDL-1-2-15-tar-gz" class="headerlink" title="4.4.6、SDL-1.2.15.tar.gz"></a>4.4.6、SDL-1.2.15.tar.gz</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.libsdl.org/release/SDL-1.2.15.tar.gz</span><br><span class="line">x SDL-1.2.15.tar.gz</span><br><span class="line">cd SDL-1.2.15</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="4-4-8、nasm-2-13-03-tar-xz"><a href="#4-4-8、nasm-2-13-03-tar-xz" class="headerlink" title="4.4.8、nasm-2.13.03.tar.xz"></a>4.4.8、nasm-2.13.03.tar.xz</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.nasm.us/pub/nasm/releasebuilds/2.13.03/nasm-2.13.03.tar.xz</span><br><span class="line">x nasm-2.13.03.tar.xz</span><br><span class="line">cd nasm-2.13.03</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="4-4-7、x264"><a href="#4-4-7、x264" class="headerlink" title="4.4.7、x264"></a>4.4.7、x264</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth 1 https://code.videolan.org/videolan/x264.gi</span><br><span class="line">cd x264</span><br><span class="line">export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/</span><br><span class="line">./configure --enable-static</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="4-4-8、x265-3-3-tar-gz"><a href="#4-4-8、x265-3-3-tar-gz" class="headerlink" title="4.4.8、x265_3.3.tar.gz"></a>4.4.8、x265_3.3.tar.gz</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar xvf x265_3.3.tar.gz</span><br><span class="line">cd x265_3.3</span><br><span class="line">cd build/linux</span><br><span class="line">cmake -G &quot;Unix Makefiles&quot; -DENABLE_SHARED:bool=off ../../source</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h4 id="4-4-9、ffmpeg-4-2-1-tar-bz2"><a href="#4-4-9、ffmpeg-4-2-1-tar-bz2" class="headerlink" title="4.4.9、ffmpeg-4.2.1.tar.bz2"></a>4.4.9、ffmpeg-4.2.1.tar.bz2</h4><ul><li><code>ffmpeg</code>下载地址：<a href="http://ffmpeg.org/download.html" target="_blank" rel="noopener">http://ffmpeg.org/download.html</a></li><li><code>ffmpeg</code>官方安装手册：<a href="https://trac.ffmpeg.org/wiki/CompilationGuide/Centos" target="_blank" rel="noopener">https://trac.ffmpeg.org/wiki/CompilationGuide/Centos</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># root @ VM_0_5_centos in /soft/ffmpeg-4.2.1 [12:59:35]</span><br><span class="line">$ yum install librtmp librtmp-devel libtheora libtheora-devel libwebp libwebp-devel -y  </span><br><span class="line">$ yum install autoconf automake bzip2 cmake freetype-devel gcc gcc-c++ git libtool make mercurial pkgconfig zlib-devel x264-devel yasm -y</span><br><span class="line">$ cd /usr/local/lib</span><br><span class="line">$ cp -rfp lib* /lib64</span><br><span class="line">$ tar xvJf ffmpeg-4.2.2.tar.xz</span><br><span class="line">$ cd ffmpeg-4.2.2</span><br><span class="line">$ export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/</span><br><span class="line">$ ./configure --prefix=/usr/local --pkg-config-flags=&quot;--static&quot; --extra-cflags=&quot;-I/usr/local/include&quot; --extra-ldflags=&quot;-L/usr/local/lib&quot; --enable-version3 --enable-gpl --enable-nonfree --enable-small --enable-libmp3lame --enable-libx264 --enable-libx265 --enable-libvpx --enable-libtheora --enable-libvorbis --enable-libopus --enable-libfdk-aac --enable-libass --enable-libwebp --enable-librtmp --enable-postproc --enable-avresample --enable-libfreetype --enable-openssl --disable-debug --disable-doc --disable-ffplay</span><br><span class="line">$ make &amp;&amp; make install</span><br><span class="line"># root @ VM_0_5_centos in ~ [14:03:21] </span><br><span class="line">$ ffmpeg  -version</span><br><span class="line">ffmpeg version 4.2.1 Copyright (c) 2000-2019 the FFmpeg developers</span><br><span class="line">built with gcc 4.4.7 (GCC) 20120313 (Red Hat 4.4.7-23)</span><br><span class="line">configuration: --prefix=/usr/local --pkg-config-flags=--static --extra-cflags=-I/usr/local/include --extra-ldflags=-L/usr/local/lib --enable-version3 --enable-gpl --enable-nonfree --enable-small --enable-libmp3lame --enable-libx264 --enable-libx265 --enable-libvpx --enable-libtheora --enable-libvorbis --enable-libopus --enable-libfdk-aac --enable-libass --enable-libwebp --enable-librtmp --enable-postproc --enable-avresample --enable-libfreetype --enable-openssl --disable-debug --disable-doc --disable-ffplay</span><br><span class="line">libavutil      56. 31.100 / 56. 31.100</span><br><span class="line">libavcodec     58. 54.100 / 58. 54.100</span><br><span class="line">libavformat    58. 29.100 / 58. 29.100</span><br><span class="line">libavdevice    58.  8.100 / 58.  8.100</span><br><span class="line">libavfilter     7. 57.100 /  7. 57.100</span><br><span class="line">libavresample   4.  0.  0 /  4.  0.  0</span><br><span class="line">libswscale      5.  5.100 /  5.  5.100</span><br><span class="line">libswresample   3.  5.100 /  3.  5.100</span><br><span class="line">libpostproc    55.  5.100 / 55.  5.100</span><br></pre></td></tr></table></figure><h2 id="4、直播实战"><a href="#4、直播实战" class="headerlink" title="4、直播实战"></a>4、直播实战</h2><ul><li>手机直播地址：<code>http://49.232.152.80/hls/ar640.m3u8</code>（不依赖flash任意浏览器均可播放）</li><li>手机直播地址（有水印）：<code>http://49.232.152.80/hls/ar1280_wm.m3u8</code>（不依赖flash任意浏览器均可播放）</li><li>PC客户端直播地址：<code>http://49.232.152.80:1935/stream/ar1280</code>（需下载播放器potplayer）</li></ul><h3 id="4-1、OBS推流软件配置"><a href="#4-1、OBS推流软件配置" class="headerlink" title="4.1、OBS推流软件配置"></a>4.1、OBS推流软件配置</h3><p><img src="http://static.zybuluo.com/a807257775/hadbrptqmh5pna1adolutrem/image_1e5p2kddedkj1pd71b9i178ofvm1v.png" alt="image_1e5p2kddedkj1pd71b9i178ofvm1v.png-34.2kB"><br><img src="http://static.zybuluo.com/a807257775/5v4uzx634e3uz0ijo5jstgiy/image_1e5p2s96ei9d50dfto1dkk1v8u2c.png" alt="image_1e5p2s96ei9d50dfto1dkk1v8u2c.png-117.3kB"></p><h3 id="4-2、PC端-amp-手机端观看直播"><a href="#4-2、PC端-amp-手机端观看直播" class="headerlink" title="4.2、PC端&amp;手机端观看直播"></a>4.2、PC端&amp;手机端观看直播</h3><ul><li>PC端使用PotPlayer播放rtmp流<br><img src="http://static.zybuluo.com/a807257775/0e7g82h0g1y2pw5pp7e58hjk/image_1e5p3gt9p1hv51oq3thl1jdpojh43.png" alt="image_1e5p3gt9p1hv51oq3thl1jdpojh43.png-42.6kB"><br><img src="http://static.zybuluo.com/a807257775/0kxxfzenmnm6frf9mszb2a3h/image_1e5p3gg3l1ejf1vb94mm1odb18m3m.png" alt="image_1e5p3gg3l1ejf1vb94mm1odb18m3m.png-56.6kB"></li><li>手机端浏览器播放直播<br>有水印：<img src="http://static.zybuluo.com/a807257775/f7gy0j2vdb3f5abun4teozwg/image_1e5p3jaan1bld1nlncouq1aj0s4g.png" alt="image_1e5p3jaan1bld1nlncouq1aj0s4g.png-106.3kB"><br>无水印：<img src="http://static.zybuluo.com/a807257775/dv6p4so2jgm9zdn5amg89feh/image_1e5p3cl3a1ugvt5v1rqf1l3tvq2p.png" alt="image_1e5p3cl3a1ugvt5v1rqf1l3tvq2p.png-92.8kB"></li></ul><h3 id="4-3、扩展部分"><a href="#4-3、扩展部分" class="headerlink" title="4.3、扩展部分"></a>4.3、扩展部分</h3><blockquote><p>提示：可构建h5页面，嵌套rtmp播放流，手机网页即可实现实时观看直播</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Nginx直播系统rtmp-amp-ffmpeg&quot;&gt;&lt;a href=&quot;#Nginx直播系统rtmp-amp-ffmpeg&quot; class=&quot;headerlink&quot; title=&quot;Nginx直播系统rtmp&amp;amp;ffmpeg&quot;&gt;&lt;/a&gt;Nginx直播系统rtmp&amp;
      
    
    </summary>
    
      <category term="NGINX文档" scheme="http://www.lisirlife.cn/categories/NGINX%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="NGINX代理" scheme="http://www.lisirlife.cn/tags/NGINX%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>云原生存储系统Longhorn的部署与基本使用</title>
    <link href="http://www.lisirlife.cn/2021/03/23/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9FLonghorn%E7%9A%84%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.lisirlife.cn/2021/03/23/云原生存储系统Longhorn的部署与基本使用/</id>
    <published>2021-03-23T08:00:00.000Z</published>
    <updated>2024-09-21T09:02:52.411Z</updated>
    
    <content type="html"><![CDATA[<h1 id="云原生存储系统Longhorn的部署与基本使用"><a href="#云原生存储系统Longhorn的部署与基本使用" class="headerlink" title="云原生存储系统Longhorn的部署与基本使用"></a>云原生存储系统Longhorn的部署与基本使用</h1><h2 id="1、Longhorn基本介绍"><a href="#1、Longhorn基本介绍" class="headerlink" title="1、Longhorn基本介绍"></a>1、Longhorn基本介绍</h2><ul><li>Longhorn是用于Kubernetes的轻量级，可靠且易于使用的分布式块存储系统；</li><li>Longhorn轻巧，可靠且功能强大。您可以使用一个kubectl； apply命令或使用Helm图表在现有Kubernetes集群上安装Longhorn 。一旦安装Longhorn，它将为Kubernetes集群添加持久的卷支持。</li><li>Longhorn使用容器和微服务实现分布式块存储。Longhorn为每个块设备卷创建一个专用的存储控制器，并跨多个节点上存储的多个副本同步复制该卷。存储控制器和副本本身使用Kubernetes进行编排。以下是Longhorn的一些显着功能：<ul><li style="list-style: none"><input type="checkbox" checked> 企业级分布式存储，无单点故障:</li><li style="list-style: none"><input type="checkbox" checked> 块存储的增量快照;</li><li style="list-style: none"><input type="checkbox" checked> 备份到基于有效更改块检测的辅助存储（与NFSv4或S3兼容的对象存储）;</li><li style="list-style: none"><input type="checkbox" checked> 定期快照和备份;</li><li style="list-style: none"><input type="checkbox" checked> 自动化无中断升级。您可以升级整个Longhorn软件堆栈，而无需中断运行卷！;</li><li style="list-style: none"><input type="checkbox" checked> 直观的GUI仪表板;</li></ul></li></ul><h3 id="1-1、Longhorn架构"><a href="#1-1、Longhorn架构" class="headerlink" title="1.1、Longhorn架构"></a>1.1、Longhorn架构</h3><blockquote><p>Longhorn设计有两层：数据层和控制层。Longhorn Engine是与数据平面相对应的存储控制器，而Longhorn Manager与控制平面相对应；</p></blockquote><ul><li>在下图中：<ul><li>有Longhorn卷的三个实例；</li><li>每个卷都有一个专用的控制器，称为Longhorn Engine，并作为Linux进程运行；</li><li>每个Longhorn卷都有两个副本，每个副本都是Linux进程；</li><li>图中的箭头表示卷，控制器实例，副本实例和磁盘之间的读/写数据流；</li><li>通过为每个卷创建一个单独的Longhorn Engine，如果一个控制器发生故障，则其他卷的功能不会受到影响；</li></ul></li></ul><p><img src="http://static.zybuluo.com/a807257775/qpva62ql8prnn7sfmhpnp4ea/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210322171215.png" alt="微信图片_20210322171215.png-58.5kB"></p><h2 id="2、Longhorn的安装与部署"><a href="#2、Longhorn的安装与部署" class="headerlink" title="2、Longhorn的安装与部署"></a>2、Longhorn的安装与部署</h2><blockquote><p>提示：yaml文件中，已经根据实际生产情况做了优化调整（请参考最佳实践），并添加了NFS备份存储服务器，卷数据的备份将统一使用NFS进行管理和存储；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@DEVOPSSRV01 ~]# kubectl apply /k8s_yml/longhorn_deployment/longhorn-v1.1.0.yaml</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="3、创建volume"><a href="#3、创建volume" class="headerlink" title="3、创建volume"></a>3、创建volume</h2><blockquote><p>Longhorn可创建的卷类型大致分为<code>Block Volume</code>、<code>CSI Persistent Volume</code>、<code>静态PVC</code>、<code>动态PVC</code>；</p></blockquote><h3 id="3-1、创建静态PVC逻辑卷"><a href="#3-1、创建静态PVC逻辑卷" class="headerlink" title="3.1、创建静态PVC逻辑卷"></a>3.1、创建静态PVC逻辑卷</h3><blockquote><p>静态PVC：顾名思义需要编写PVC.yaml，通过手工指定PVC的metadata_name，申请PV资源，才可以挂载到对应的namespace下供pod使用；</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#创建PVC资源，向longhorn申请PV存储卷</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: longhorn-volv-pvc</span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  storageClassName: longhorn</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 2Gi</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: volume-test</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  restartPolicy: Always</span><br><span class="line">  containers:</span><br><span class="line">  - name: volume-test</span><br><span class="line">    image: nginx:stable-alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    livenessProbe:</span><br><span class="line">      exec:</span><br><span class="line">        command:</span><br><span class="line">          - ls</span><br><span class="line">          - /data/lost+found</span><br><span class="line">      initialDelaySeconds: 5</span><br><span class="line">      periodSeconds: 5</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: volv</span><br><span class="line">      mountPath: /data</span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80</span><br><span class="line">#挂载卷组，指定pvc名称</span><br><span class="line">  volumes:</span><br><span class="line">  - name: volv</span><br><span class="line">    persistentVolumeClaim:</span><br><span class="line">      claimName: longhorn-volv-pvc</span><br></pre></td></tr></table></figure><h3 id="3-2、创建动态PVC逻辑卷"><a href="#3-2、创建动态PVC逻辑卷" class="headerlink" title="3.2、创建动态PVC逻辑卷"></a>3.2、创建动态PVC逻辑卷</h3><blockquote><p>动态PVC：使用动态PVC供应逻辑卷，用户必须预先创建一个或多个 StorageClass 对象，在有状态的POD控制器（StatefulSet）下，使用动态PVC，指定容量大小、存储类名等简单的参数后，即可实现按需创建存储的机制，一般用在独立POD，且独立数据卷的场景下；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 80</span><br><span class="line">    name: web</span><br><span class="line">  selector:</span><br><span class="line">    app: nginx</span><br><span class="line">  type: NodePort</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: StatefulSet</span><br><span class="line">metadata:</span><br><span class="line">  name: web</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx # has to match .spec.template.metadata.labels</span><br><span class="line">  serviceName: &quot;nginx&quot;</span><br><span class="line">  replicas: 2 # by default is 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx # has to match .spec.selector.matchLabels</span><br><span class="line">    spec:</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      terminationGracePeriodSeconds: 10</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx</span><br><span class="line">        image: k8s.gcr.io/nginx-slim:0.8</span><br><span class="line">        livenessProbe:</span><br><span class="line">          exec:</span><br><span class="line">            command:</span><br><span class="line">              - ls</span><br><span class="line">              - /usr/share/nginx/html/lost+found</span><br><span class="line">          initialDelaySeconds: 5</span><br><span class="line">          periodSeconds: 5</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">          name: web</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: www</span><br><span class="line">          mountPath: /usr/share/nginx/html</span><br><span class="line">#动态PVC配置模板</span><br><span class="line">  volumeClaimTemplates:</span><br><span class="line">  - metadata:</span><br><span class="line">      name: www</span><br><span class="line">    spec:</span><br><span class="line">      #访问模式，如使用longhorn支持多路读写“ReadWriteMany”</span><br><span class="line">      accessModes: [ &quot;ReadWriteOnce&quot; ]</span><br><span class="line">      #存储类名，默认安装为longhorn，官方建议不要修改此名称</span><br><span class="line">      storageClassName: &quot;longhorn&quot;</span><br><span class="line">      resources:</span><br><span class="line">      #可限定容量大小，IOPS等参数</span><br><span class="line">        requests:</span><br><span class="line">          storage: 1Gi</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="3-2、创建Block块设备"><a href="#3-2、创建Block块设备" class="headerlink" title="3.2、创建Block块设备"></a>3.2、创建Block块设备</h3><blockquote><p>提示：块设备类似于一块硬盘，可以想象为虚拟机或云服务器中新增一块磁盘，那么就要经历分区、格式化、挂载等一系列操作，容器内使用，建议还是采用卷的方式，由于格式化需要超级权限，若不想设定容器为特权模式，就需要sidecar及init容器来支持使用；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: longhorn-block-vol</span><br><span class="line">  namespace: centos-deployment</span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  volumeMode: Block</span><br><span class="line">  storageClassName: longhorn</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 10Gi</span><br><span class="line">---      </span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line"> name: centos2009</span><br><span class="line"> namespace: centos-deployment</span><br><span class="line">spec:</span><br><span class="line"> selector:</span><br><span class="line">  matchLabels:</span><br><span class="line">   app: os</span><br><span class="line"> replicas: 1</span><br><span class="line"> template:</span><br><span class="line">  metadata:</span><br><span class="line">   labels:</span><br><span class="line">    app: os</span><br><span class="line">  spec:</span><br><span class="line">    containers:</span><br><span class="line">    - name: centos2009-deployment</span><br><span class="line">      image: 192.168.6.10/szzt_production/centos:centos7.9.2009</span><br><span class="line">      command: [ &quot;/bin/bash&quot;, &quot;-c&quot;, &quot;--&quot; ]</span><br><span class="line">      args: [ &quot;while true; do sleep 30; done;&quot; ]</span><br><span class="line">      securityContext:</span><br><span class="line">        privileged: true</span><br><span class="line">        runAsUser: 0</span><br><span class="line">      env:</span><br><span class="line">      - name: TZ</span><br><span class="line">        value: Asia/Shanghai    </span><br><span class="line">      volumeDevices:</span><br><span class="line">      - devicePath: /dev/longhorn/testblk</span><br><span class="line">        name: block-vol</span><br><span class="line">    volumes:</span><br><span class="line">    - name: block-vol</span><br><span class="line">      persistentVolumeClaim:</span><br><span class="line">       claimName: longhorn-block-vol</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="3-3、使用块设备及存储卷"><a href="#3-3、使用块设备及存储卷" class="headerlink" title="3.3、使用块设备及存储卷"></a>3.3、使用块设备及存储卷</h3><ul><li>块设备与数据卷的区别如下图：数据卷采用ISCSI的存储协议进行网络通信，块设备则像一个本地磁盘一样挂载至服务器进行使用，<br><img src="http://static.zybuluo.com/a807257775/gu1g32uwt02kxe29t2f7yr3g/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210323144214.jpg" alt="微信图片_20210323144214.jpg-26.6kB"></li></ul><h2 id="4、数据备份与恢复"><a href="#4、数据备份与恢复" class="headerlink" title="4、数据备份与恢复"></a>4、数据备份与恢复</h2><blockquote><p>提示：备份与恢复统一使用Longhron的UI进行</p></blockquote><ul><li><p>查看创建的volume<br><img src="http://static.zybuluo.com/a807257775/r9ed04ft5n3aqfhnp8kxqc5d/image_1f1euuia4jie8vhr8p1g511q9h56.png" alt="image_1f1euuia4jie8vhr8p1g511q9h56.png-126.5kB"></p></li><li><p>对卷：<code>pvc-064fc5f5-ba4c-4e50-b61a-dfe548e699a4</code>进行手工备份<br><img src="http://static.zybuluo.com/a807257775/gfiuwfpnmra8651p8plbe5an/image_1f1ev20kg5nh1rdp21r1r6010pg60.png" alt="image_1f1ev20kg5nh1rdp21r1r6010pg60.png-145.3kB"></p></li><li><p>选择Backup标签<br><img src="http://static.zybuluo.com/a807257775/557m8ofopvofmo7foj82ctwe/image_1f1ev38m917tdm3d1u63154a6ha6d.png" alt="image_1f1ev38m917tdm3d1u63154a6ha6d.png-80.4kB"></p></li><li><p>根据刚才备份的卷名，查看备份情况<br><img src="http://static.zybuluo.com/a807257775/kjmuwfzow0h8mwf63xdn42b0/image_1f1ev48n91k518pd195sejlico6q.png" alt="image_1f1ev48n91k518pd195sejlico6q.png-108.7kB"></p></li><li><p>模拟数据丢失<br><img src="http://static.zybuluo.com/a807257775/pnh74d78sgi723h8rbfqhs0c/image_1f1ev7pddub972u1eb1o8do877.png" alt="image_1f1ev7pddub972u1eb1o8do877.png-52.4kB"></p></li><li><p>通过Longhorn刚才的备份进行恢复<br><img src="http://static.zybuluo.com/a807257775/8ox0x89ye5slzydls1r72rf7/image_1f1ev9u3bq5opnq1vl81fnivgb7k.png" alt="image_1f1ev9u3bq5opnq1vl81fnivgb7k.png-115.1kB"></p></li><li><p>恢复到一个名为：skywalking-restore的PV卷中<br><img src="http://static.zybuluo.com/a807257775/w2rjzioaf108ruj2sl6x4f6k/image_1f1evb81vpis112m1gsbb12u3881.png" alt="image_1f1evb81vpis112m1gsbb12u3881.png-109.6kB"><br><img src="http://static.zybuluo.com/a807257775/vilb7nks6owiq00orfl1xt2m/image_1f1evc6fndkb1vac1t0msch1dbl8e.png" alt="image_1f1evc6fndkb1vac1t0msch1dbl8e.png-138.9kB"></p></li><li><p>创建PVC<br><img src="http://static.zybuluo.com/a807257775/nedirnvqhe88i6isb325v9ba/image_1f1evrh301fo013291e2or37dr798.png" alt="image_1f1evrh301fo013291e2or37dr798.png-153.7kB"><br><img src="http://static.zybuluo.com/a807257775/mmy8r46hf8xfmm9ey1nh4jyb/image_1f1evsmphpnq7ptdkbuih2hta2.png" alt="image_1f1evsmphpnq7ptdkbuih2hta2.png-151.3kB"></p></li><li><p>将PVC挂载至容器，恢复数据即可<br><img src="http://static.zybuluo.com/a807257775/60w08q5ew8d1zfvvf8sv9bqb/image_1f1evvic78421d5g4nv5a81mhaaf.png" alt="image_1f1evvic78421d5g4nv5a81mhaaf.png-38.4kB"><br><img src="http://static.zybuluo.com/a807257775/yj9pntbeprfxpfw20nayo3w3/image_1f1f02uvv1iv116p5hja1bl9lfsas.png" alt="image_1f1f02uvv1iv116p5hja1bl9lfsas.png-41.6kB"><br><img src="http://static.zybuluo.com/a807257775/djh7k7iv9fk2mhg7gmutbf8k/image_1f1f08sqv1km51dhkm2rbsejob9.png" alt="image_1f1f08sqv1km51dhkm2rbsejob9.png-59.1kB"></p></li></ul><h2 id="6、性能测试"><a href="#6、性能测试" class="headerlink" title="6、性能测试"></a>6、性能测试</h2><blockquote><p>使用fio磁盘性能测试工具：fio可以按照负载情况分成照顺序读写，随机读写两大类。FIO是一个可以产生很多线程或进程并执行用户指定的特定类型I/O操作的工具，FIO的典型用途是编写和模拟的I/O负载匹配的作业文件，EPEL源，使用yum install fio -y安装</p></blockquote><ul><li><p>测试随机写 IOPS，运行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fio -direct=1 -iodepth=128 -rw=randwrite -ioengine=libaio -bs=4k -size=512M -numjobs=1 -runtime=1000 -group_reporting -filename=iotest -name=Rand_Write_Testing</span><br><span class="line">#结果</span><br><span class="line">write: IOPS=2006, BW=8027KiB/s (8219kB/s)(512MiB/65319msec)</span><br></pre></td></tr></table></figure></li><li><p>测试随机读 IOPS，运行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fio -direct=1 -iodepth=128 -rw=randread -ioengine=libaio -bs=4k -size=512M  -numjobs=1 -runtime=1000 -group_reporting -filename=iotest -name=Rand_Read_Testing</span><br><span class="line">#结果</span><br><span class="line">read: IOPS=8700, BW=33.0MiB/s (35.6MB/s)(512MiB/15065msec)</span><br></pre></td></tr></table></figure></li><li><p>测试顺序写吞吐量，运行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fio -direct=1 -iodepth=64 -rw=write -ioengine=libaio -bs=1024k -size=512M  -numjobs=1 -runtime=1000 -group_reporting -filename=iotest -name=Write_PPS_Testing</span><br><span class="line">#结果</span><br><span class="line">write: IOPS=36, BW=36.2MiB/s (38.0MB/s)(512MiB/14128msec)</span><br></pre></td></tr></table></figure></li><li><p>测试顺序读吞吐量，运行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fio -direct=1 -iodepth=64 -rw=read -ioengine=libaio -bs=1024k -size=512M  -numjobs=1 -runtime=1000 -group_reporting -filename=iotest -name=Read_PPS_Testing</span><br><span class="line">#结果</span><br><span class="line">read: IOPS=82, BW=82.6MiB/s (86.6MB/s)(512MiB/6202msec)</span><br></pre></td></tr></table></figure></li><li><p>输出结果解读，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">read : io=1024.0MB, bw=80505KB/s, iops=20126, runt= 13025msec</span><br><span class="line">表示 fio 做了 512M  I/O，速率约为 80 MB/s，总 IOPS 为 20126，运行时间为 13 秒。</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>总结：Longhorn的性能受整个K8S集群的影响，其服务是建立在K8S集群之上的，所以集群中如果CPU压力过大、内存不足、API调用超时等等因素都会影响存储性能，所以Longhorn中有一项参数：<code>Guaranteed Engine CPU</code>，给Longhorn Instance Manager Pod保留一定数量的CPU，这将有助于在高节点工作负载期间保持引擎稳定性。严格的测试应该在一个干净的K8S集群上进行测试，并尽量使用光纤或者万兆网络进行互连，发挥其最大化性能，评判一个磁盘性能除了读写速率外，一般要看IOPS这个指标，SSD的随机读写IOPS可达上万，普通的机械硬盘最多可能才几百，顺序读写的场景一般是单个大文件，而实际生产，我们大部分是零碎的小文件，这个时候就特别考验随机读写的性能，那么测试结果中IOPS的数值越大，代表其性能越佳，如果要投产使用，请参考官网的最佳实践！</p></blockquote><h2 id="7、其他"><a href="#7、其他" class="headerlink" title="7、其他"></a>7、其他</h2><ul><li>官方手册：<a href="https://longhorn.io/docs/1.1.0/" target="_blank" rel="noopener">Longhorn文档</a></li><li>GITHUB地址：<a href="https://github.com/longhorn/longhorn" target="_blank" rel="noopener">longhorn</a></li><li>最佳实践：<a href="https://longhorn.io/docs/1.1.0/best-practices/" target="_blank" rel="noopener">生产环境中部署Longhorn</a></li><li>基于K8S的安装模板：<a href="https://longhorn.io/docs/1.1.0/deploy/install/install-with-kubectl/" target="_blank" rel="noopener">Install With Kubectl</a></li><li>Longhorn配置参数详解：<a href="https://longhorn.io/docs/1.1.0/references/settingsn.io/docs/1.1.0/deploy/install/install-with-kubectl/" target="_blank" rel="noopener">Settings Reference</a></li><li>基本K8S的使用案列：<a href="https://longhorn.io/docs/1.1.0/references/examples/" target="_blank" rel="noopener">Examples</a></li><li>Longhorn备份与恢复手册：<a href="https://longhorn.io/docs/1.1.0/snapshots-and-backups/backup-and-restore/set-backup-target/" target="_blank" rel="noopener">Setting a Backup Target</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;云原生存储系统Longhorn的部署与基本使用&quot;&gt;&lt;a href=&quot;#云原生存储系统Longhorn的部署与基本使用&quot; class=&quot;headerlink&quot; title=&quot;云原生存储系统Longhorn的部署与基本使用&quot;&gt;&lt;/a&gt;云原生存储系统Longhorn的部
      
    
    </summary>
    
      <category term="分布式存储" scheme="http://www.lisirlife.cn/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8/"/>
    
    
      <category term="分布式存储" scheme="http://www.lisirlife.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>ES集群索引管理工具-cerebro的部署</title>
    <link href="http://www.lisirlife.cn/2021/03/21/ES%E9%9B%86%E7%BE%A4%E7%B4%A2%E5%BC%95%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-cerebro%E7%9A%84%E9%83%A8%E7%BD%B2/"/>
    <id>http://www.lisirlife.cn/2021/03/21/ES集群索引管理工具-cerebro的部署/</id>
    <published>2021-03-21T05:00:00.000Z</published>
    <updated>2024-09-21T09:02:52.387Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ES集群索引管理工具-cerebro的部署"><a href="#ES集群索引管理工具-cerebro的部署" class="headerlink" title="ES集群索引管理工具-cerebro的部署"></a>ES集群索引管理工具-cerebro的部署</h1><h2 id="1、前言："><a href="#1、前言：" class="headerlink" title="1、前言："></a>1、前言：</h2><blockquote><p>所有部署均采用docker+k8s进行，ELK集群由于是采用ECK部署，使用了TLS/SSL,HTTPS证书及BASIC认证，但cerebro官方并未对如何连接HTTPS集群做出指导，本文将从新构建cerebro镜像文件，添加ES跟证书到镜像中，后使用K8S将cerebro部署至集群中，连接ES服务进行管理；</p></blockquote><h2 id="1、导出ES集群CA根证书"><a href="#1、导出ES集群CA根证书" class="headerlink" title="1、导出ES集群CA根证书"></a>1、导出ES集群CA根证书</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -pv /k8s_yml/cerebro_bulid/certs</span><br><span class="line">cp -rfp ca.crt /k8s_yml/cerebro_bulid/certs</span><br></pre></td></tr></table></figure><h2 id="2、制作Dockerfile文件"><a href="#2、制作Dockerfile文件" class="headerlink" title="2、制作Dockerfile文件"></a>2、制作Dockerfile文件</h2><ul><li>vim /k8s_yml/cerebro_bulid/Dockerfile<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">FROM openjdk:11-jre-slim</span><br><span class="line"></span><br><span class="line">ENV CEREBRO_VERSION 0.9.3</span><br><span class="line"></span><br><span class="line">RUN  apt-get update \</span><br><span class="line">    &amp;&amp; apt-get install -y wget \</span><br><span class="line">    &amp;&amp; rm -rf /var/lib/apt/lists/* \</span><br><span class="line">    &amp;&amp; mkdir -p /opt/cerebro/logs \</span><br><span class="line">    &amp;&amp; wget -qO- https://github.com/lmenezes/cerebro/releases/download/v$&#123;CEREBRO_VERSION&#125;/cerebro-$&#123;CEREBRO_VERSION&#125;.tgz \</span><br><span class="line">    | tar xzv --strip-components 1 -C /opt/cerebro \</span><br><span class="line">    &amp;&amp; sed -i &apos;/&lt;appender-ref ref=&quot;FILE&quot;\/&gt;/d&apos; /opt/cerebro/conf/logback.xml \</span><br><span class="line">    &amp;&amp; addgroup -gid 1000 cerebro \</span><br><span class="line">    &amp;&amp; adduser -gid 1000 -uid 1000 cerebro \</span><br><span class="line">    &amp;&amp; chown -R cerebro:cerebro /opt/cerebro</span><br><span class="line"></span><br><span class="line">WORKDIR /opt/cerebro</span><br><span class="line"></span><br><span class="line">COPY certs/ca.crt /opt/cerebro</span><br><span class="line"></span><br><span class="line">RUN keytool -importcert -file ca.crt -alias esca -cacerts -storepass changeit -noprompt</span><br><span class="line"></span><br><span class="line">USER cerebro</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [ &quot;/opt/cerebro/bin/cerebro&quot; ]</span><br></pre></td></tr></table></figure></li></ul><h2 id="3、构建基于ES根证书的镜像"><a href="#3、构建基于ES根证书的镜像" class="headerlink" title="3、构建基于ES根证书的镜像"></a>3、构建基于ES根证书的镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /k8s_yml/cerebro_bulid/</span><br><span class="line">docker build -t 192.168.6.33/szzt_production/cerebro:0.9.3 .</span><br><span class="line">#上传到私有镜像库</span><br><span class="line">docker push 192.168.6.33/szzt_production/cerebro:0.9.3</span><br></pre></td></tr></table></figure><h2 id="4、使用K8S进行部署"><a href="#4、使用K8S进行部署" class="headerlink" title="4、使用K8S进行部署"></a>4、使用K8S进行部署</h2><ul><li>使用命令式对象管理方式，创建YML文件</li><li>kubectl apply -f cerebro_deploy.yml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line"> name: esmng-srv</span><br><span class="line"> namespace: elastic-production</span><br><span class="line">spec:</span><br><span class="line"> selector:</span><br><span class="line">  matchLabels:</span><br><span class="line">   app: es_mng</span><br><span class="line"> replicas: 1</span><br><span class="line"> template:</span><br><span class="line">  metadata:</span><br><span class="line">   labels:</span><br><span class="line">    app: es_mng</span><br><span class="line">  spec:</span><br><span class="line">   containers:</span><br><span class="line">   - name: esmng-srv</span><br><span class="line">     image: 192.168.6.33/szzt_production/cerebro:0.9.3</span><br><span class="line">     ports:</span><br><span class="line">     - containerPort: 9000</span><br><span class="line">     env:</span><br><span class="line">     #认证类型</span><br><span class="line">     - name: AUTH_TYPE</span><br><span class="line">       value: base</span><br><span class="line">     #ES用户</span><br><span class="line">     - name: BASIC_AUTH_USER</span><br><span class="line">       value: elastic</span><br><span class="line">     #ES密码   </span><br><span class="line">     - name: BASIC_AUTH_PWD</span><br><span class="line">       value: 26v7Aik1wM6Z9Mp1I8V9z4jm</span><br><span class="line">     #通过传参指定ES集群地址</span><br><span class="line">     command: [&quot;/opt/cerebro/bin/cerebro&quot;, &quot;-Dhosts.0.host=https://es-cluster-es-http.elastic-production.svc:9200&quot;]</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: esmng-svc</span><br><span class="line">  namespace: elastic-production</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: es_mng</span><br><span class="line">  ports:</span><br><span class="line">    - name: web-http</span><br><span class="line">      protocol: TCP</span><br><span class="line">      port: 9000</span><br><span class="line">      targetPort: 9000</span><br><span class="line">      #外部访问端口</span><br><span class="line">      nodePort: 30007</span><br></pre></td></tr></table></figure></li></ul><h2 id="5、访问cerebro页面"><a href="#5、访问cerebro页面" class="headerlink" title="5、访问cerebro页面"></a>5、访问cerebro页面</h2><ul><li>查看ES集群状态-<a href="http://10.255.4.38:30007/" target="_blank" rel="noopener">http://10.255.4.38:30007/</a><br><img src="http://static.zybuluo.com/a807257775/n3jq3gwqbzmxotxiir62bc9k/image_1f171s5uc1eqn18oq1ap313im8jn9.png" alt="image_1f171s5uc1eqn18oq1ap313im8jn9.png-83.1kB"></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ES集群索引管理工具-cerebro的部署&quot;&gt;&lt;a href=&quot;#ES集群索引管理工具-cerebro的部署&quot; class=&quot;headerlink&quot; title=&quot;ES集群索引管理工具-cerebro的部署&quot;&gt;&lt;/a&gt;ES集群索引管理工具-cerebro的部署&lt;/
      
    
    </summary>
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/categories/ELK%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/tags/ELK%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>使用SkyWalking监控Nginx链路信息</title>
    <link href="http://www.lisirlife.cn/2021/03/02/%E4%BD%BF%E7%94%A8SkyWalking%E7%9B%91%E6%8E%A7Nginx%E9%93%BE%E8%B7%AF%E4%BF%A1%E6%81%AF/"/>
    <id>http://www.lisirlife.cn/2021/03/02/使用SkyWalking监控Nginx链路信息/</id>
    <published>2021-03-02T08:00:00.000Z</published>
    <updated>2024-09-21T09:02:52.413Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用SkyWalking监控Nginx链路信息"><a href="#使用SkyWalking监控Nginx链路信息" class="headerlink" title="使用SkyWalking监控Nginx链路信息"></a>使用SkyWalking监控Nginx链路信息</h1><h2 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h2><p>本篇只记录如何安装及配置Nginx LUA Agent展开，详细的记录了nginx lua模块的安装过程及如配置Nginx LUA Agent，并全程使用docker+k8s进行部署，SkyWalking的服务端也采用k8s部署，数据存储使用7.10的es完成，ES连接方式为HTTPS，具体踩坑过程后续进行记录；</p><h2 id="2、SkyWalking简介与架构"><a href="#2、SkyWalking简介与架构" class="headerlink" title="2、SkyWalking简介与架构"></a>2、SkyWalking简介与架构</h2><blockquote><p>官方手册：<a href="https://skywalking.apache.org/docs/main/latest/en/concepts-and-designs/overview/" target="_blank" rel="noopener">SkyWalking Overview</a></p></blockquote><ul><li>SkyWalking：一个开放源代码的可观察性平台，用于收集，分析，聚合和可视化来自服务和云本机基础结构的数据。SkyWalking提供了一种简便的方法来维护您的分布式系统的清晰视图，即使在整个云中也是如此。它是一个现代的APM，专门为基于云的基于容器的分布式系统而设计，如下图：<br><img src="http://static.zybuluo.com/a807257775/3329kds64vfameocjdo9tb02/image_1evop0psr14426t59l814ub3es9.png" alt="image_1evop0psr14426t59l814ub3es9.png-242.1kB"></li></ul><blockquote><p>从逻辑上讲，SkyWalking分为四个部分：探针，服务后端，存储和UI，如下图：</p></blockquote><ul><li>探针：收集数据并重新格式化以符合SkyWalking的要求（不同的探针支持不同的来源）；</li><li>服务后端：支持数据聚合，分析和流处理，涵盖跟踪，指标和日志；</li><li>存储：支持ElasticSearch，H2，MySQL，TiDB，InfluxDB存储SkyWalking数据</li><li>UI：是一个高度可定制的基于Web的界面，允许SkyWalking最终用户可视化和管理SkyWalking数据。<br><img src="http://static.zybuluo.com/a807257775/cycyxik980hvftuilinnb91b/image_1evop2dcg1eui14ki6j81s82q4dm.png" alt="image_1evop2dcg1eui14ki6j81s82q4dm.png-272.8kB"></li></ul><h2 id="3、为什么要使用SkyWalking？"><a href="#3、为什么要使用SkyWalking？" class="headerlink" title="3、为什么要使用SkyWalking？"></a>3、为什么要使用SkyWalking？</h2><ul><li>SkyWalking提供了用于在许多不同情况下观察和监视分布式系统的解决方案。首先，与传统方法一样，SkyWalking为服务提供自动仪器代理，例如Java，C＃，Node.js，Go，PHP和Nginx LUA。在多语言，持续部署的环境中，云本机基础架构变得越来越强大，但也越来越复杂。SkyWalking的服务网格接收器使SkyWalking能够从Istio / Envoy和Linkerd等服务网格框架接收遥测数据，从而使用户能够了解整个分布式系统，</li><li>SkyWalking使用服务名称，服务实例，端点提供可观察性功能，详细含义如下：<ul><li>服务名称：表示一组工作负载，SkyWalking也可以使用您在Istio等平台中定义的名称；</li><li>服务实例：服务组中的每个单独工作负载都称为实例，像pods在Kubernetes中的定义一样；</li><li>端点：服务中用于传入请求的路径，例如HTTP URI路径或gRPC服务类+方法签名；</li></ul></li></ul><h2 id="4、部署环境介绍"><a href="#4、部署环境介绍" class="headerlink" title="4、部署环境介绍"></a>4、部署环境介绍</h2><table><thead><tr><th>平台</th><th>IP</th><th>NGINX版本</th><th>Agent版本</th><th>SkyWalking版本</th></tr></thead><tbody><tr><td>CentOS Linux release 7.7.1908</td><td>192.168.6.10</td><td>1.12.1</td><td>skywalking-nginx-lua-0.3.0</td><td>8.1.0</td><td></td></tr></tbody></table><h2 id="5、编译NGINX"><a href="#5、编译NGINX" class="headerlink" title="5、编译NGINX"></a>5、编译NGINX</h2><h3 id="5-1、安装luajit编译器"><a href="#5-1、安装luajit编译器" class="headerlink" title="5.1、安装luajit编译器"></a>5.1、安装luajit编译器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#下载luajit编译器</span><br><span class="line">wget http://luajit.org/download/LuaJIT-2.1.0-beta3.tar.gz</span><br><span class="line">#解压源码包</span><br><span class="line">tar xzvf LuaJIT-2.1.0-beta3.tar.gz</span><br><span class="line">cd LuaJIT-2.1.0-beta3</span><br><span class="line">#安装路径：/usr/local/luajit</span><br><span class="line">make PREFIX=/usr/local/luajit</span><br><span class="line">make install PREFIX=/usr/local/luajit</span><br><span class="line">#构建库文件软连接</span><br><span class="line">ln -s /usr/local/luajit/lib/libluajit-5.1.so.2 /lib64/libluajit-5.1.so.2</span><br></pre></td></tr></table></figure><h3 id="5-2、增加环境变量"><a href="#5-2、增加环境变量" class="headerlink" title="5.2、增加环境变量"></a>5.2、增加环境变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#增加LUAJIT环境变量</span><br><span class="line">echo &apos;export LUAJIT_LIB=/usr/local/luajit/lib&apos; &gt;&gt; /etc/profile</span><br><span class="line">echo &apos;export LUAJIT_INC=/usr/local/luajit/include/luajit-2.1&apos; &gt;&gt; /etc/profile</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h3 id="5-3、安装nginx-lua模块"><a href="#5-3、安装nginx-lua模块" class="headerlink" title="5.3、安装nginx lua模块"></a>5.3、安装nginx lua模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz -O ngx_devel_kit-0.3.0.tar.gz</span><br><span class="line">wget https://github.com/openresty/lua-nginx-module/archive/v0.10.14.tar.gz -O lua-nginx-module-0.10.14.tar.gz</span><br><span class="line">tar xzvf ngx_devel_kit-0.3.0.tar.gz</span><br><span class="line">tar xzvf lua-nginx-module-0.10.14.tar.gz</span><br></pre></td></tr></table></figure><h3 id="5-4、Bulid-Nginx"><a href="#5-4、Bulid-Nginx" class="headerlink" title="5.4、Bulid Nginx"></a>5.4、Bulid Nginx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#nginx编译参数如下（这里包含了其他模块，具体各个模块的安装这里不记录）：</span><br><span class="line">./configure --prefix=/usr/local/nginx --user=www --group=www --with-http_stub_status_module --with-http_ssl_module --without-mail_pop3_module --without-mail_smtp_module --without-mail_imap_module  --with-http_realip_module --add-module=/soft/naxsi-master/naxsi_src --add-module=/soft/nginx-limit-upstream-master --add-module=/soft/nginx-upstream-jvm-route-master --add-module=/soft/ngx_http_proxy_connect_module-0.0.2 --add-module=/soft/ngx_devel_kit-0.3.0 --add-module=/soft/lua-nginx-module-0.10.14 --with-http_v2_module &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="5-5、Test-Nginx-Lua"><a href="#5-5、Test-Nginx-Lua" class="headerlink" title="5.5、Test Nginx Lua"></a>5.5、Test Nginx Lua</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#在nginx.conf，server段中增加如下配置</span><br><span class="line">location /lua &#123;</span><br><span class="line">    default_type text/html;</span><br><span class="line">    content_by_lua_block &#123;</span><br><span class="line">        ngx.say(&quot;Hello Lua!&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#重载nginx</span><br><span class="line">/usr/loca/nginx/sbin/nginx -s reload</span><br><span class="line">#访问测试</span><br><span class="line">curl http://127.0.0.1/lua</span><br><span class="line">#如下返回表示lua安装正常</span><br><span class="line">Hello Lua!</span><br></pre></td></tr></table></figure><h3 id="5-5、下载skywalking-lua脚本"><a href="#5-5、下载skywalking-lua脚本" class="headerlink" title="5.5、下载skywalking lua脚本"></a>5.5、下载skywalking lua脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/apache/skywalking-nginx-lua/archive/v0.3.0.tar.gz</span><br><span class="line">tar xzvf v0.3.0.tar.gz -C /usr/local/</span><br></pre></td></tr></table></figure><h3 id="5-6、修改nginx-conf配置文件"><a href="#5-6、修改nginx-conf配置文件" class="headerlink" title="5.6、修改nginx.conf配置文件"></a>5.6、修改nginx.conf配置文件</h3><blockquote><p>提示：配置项（lua_package_path、metadata_buffer:set、startBackendTimer）要根据实际部署情况进行调整；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">#user  www;</span><br><span class="line">worker_processes  2;</span><br><span class="line">error_log  /usr/local/nginx/logs/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       /usr/local/nginx/conf/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">    access_log  /usr/local/nginx/logs/access.log  main;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    #gzip  on;</span><br><span class="line">    include /usr/local/nginx/conf/conf.d/*.conf;</span><br><span class="line">    ############################################################################################</span><br><span class="line">    #LUA脚本存放路径</span><br><span class="line">    lua_package_path &quot;/usr/local/skywalking-nginx-lua-0.3.0/lib/?.lua;;&quot;;</span><br><span class="line">    lua_shared_dict tracing_buffer 100m;</span><br><span class="line">    init_worker_by_lua_block &#123;</span><br><span class="line">        local metadata_buffer = ngx.shared.tracing_buffer</span><br><span class="line">        #服务名称</span><br><span class="line">        metadata_buffer:set(&apos;serviceName&apos;, &apos;szzt_nginx112&apos;)</span><br><span class="line">        #实例名称</span><br><span class="line">        metadata_buffer:set(&apos;serviceInstanceName&apos;, &apos;centos2009-858f6fcf97-m69tp&apos;)</span><br><span class="line">        #skywalking后端地址</span><br><span class="line">        require(&quot;skywalking.client&quot;):startBackendTimer(&quot;http://10.244.1.19:12800&quot;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 60000;</span><br><span class="line">        #lua_code_cache off;</span><br><span class="line">        location /ingress &#123;</span><br><span class="line">            default_type text/html;</span><br><span class="line">            rewrite_by_lua_block &#123;</span><br><span class="line">                require(&quot;skywalking.tracer&quot;):start(&quot;upstream service&quot;)</span><br><span class="line">            &#125;</span><br><span class="line">            proxy_pass http://127.0.0.1:60000/tier2/lb;</span><br><span class="line">            body_filter_by_lua_block &#123;</span><br><span class="line">                if ngx.arg[2] then</span><br><span class="line">                    require(&quot;skywalking.tracer&quot;):finish()</span><br><span class="line">                end</span><br><span class="line">            &#125;</span><br><span class="line">            log_by_lua_block &#123;</span><br><span class="line">                require(&quot;skywalking.tracer&quot;):prepareForReport()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /tier2/lb &#123;</span><br><span class="line">            default_type text/html;</span><br><span class="line"></span><br><span class="line">            rewrite_by_lua_block &#123;</span><br><span class="line">                require(&quot;skywalking.tracer&quot;):start(&quot;backend service&quot;)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            proxy_pass http://127.0.0.1:60000/backend;</span><br><span class="line"></span><br><span class="line">            body_filter_by_lua_block &#123;</span><br><span class="line">                if ngx.arg[2] then</span><br><span class="line">                    require(&quot;skywalking.tracer&quot;):finish()</span><br><span class="line">                end</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            log_by_lua_block &#123;</span><br><span class="line">                require(&quot;skywalking.tracer&quot;):prepareForReport()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # ------------------------------------------------------</span><br><span class="line">        # -- Mock backend business service as the upsteeam</span><br><span class="line">        # ------------------------------------------------------</span><br><span class="line">        location /backend &#123;</span><br><span class="line">            default_type text/html;</span><br><span class="line">            content_by_lua_block &#123;</span><br><span class="line">                ngx.say(&quot;&lt;p&gt;Backend service for testing only.&lt;/p&gt;&quot;)</span><br><span class="line">                ngx.say(&quot;&lt;p&gt;Backend sw8 received headers: &quot; .. ngx.req.get_headers()[&quot;sw8&quot;] .. &quot;&lt;/p&gt;&quot;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        # ------------------------------------------------------</span><br><span class="line">        # -- Mock OAP server to provide register and trace collection</span><br><span class="line">        # ------------------------------------------------------</span><br><span class="line">        location /v3/management/reportProperties &#123;</span><br><span class="line">            default_type text/html;</span><br><span class="line">            lua_need_request_body on;</span><br><span class="line"></span><br><span class="line">            content_by_lua_block &#123;</span><br><span class="line">                local cjson = require(&apos;cjson&apos;)</span><br><span class="line"></span><br><span class="line">                ngx.log(ngx.DEBUG, &apos;Instance report request = &apos;, ngx.req.get_body_data())</span><br><span class="line"></span><br><span class="line">                local reportInfo = &#123;&#125;</span><br><span class="line">                ngx.say(cjson.encode(reportInfo))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /v3/management/keepAlive &#123;</span><br><span class="line">            default_type text/html;</span><br><span class="line">            lua_need_request_body on;</span><br><span class="line"></span><br><span class="line">            content_by_lua_block &#123;</span><br><span class="line">                local cjson = require(&apos;cjson&apos;)</span><br><span class="line">                ngx.log(ngx.DEBUG, &apos;KeepAlive request = &apos;, ngx.req.get_body_data())</span><br><span class="line"></span><br><span class="line">                local keepAliveInfo = &#123;&#125;</span><br><span class="line">                ngx.say(cjson.encode(keepAliveInfo))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /v3/segments &#123;</span><br><span class="line">            default_type text/html;</span><br><span class="line">            lua_need_request_body on;</span><br><span class="line"></span><br><span class="line">            content_by_lua_block &#123;</span><br><span class="line">                local cjson = require(&apos;cjson&apos;)</span><br><span class="line">                ngx.log(ngx.DEBUG, &apos;Received segment = &apos;, ngx.req.get_body_data())</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="5-7、重载配置文件"><a href="#5-7、重载配置文件" class="headerlink" title="5.7、重载配置文件"></a>5.7、重载配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#重载nginx</span><br><span class="line">/usr/loca/nginx/sbin/nginx -s reload</span><br><span class="line">#访问测试</span><br><span class="line">curl http://127.0.0.1:60000/ingress</span><br><span class="line">#如下返回表示后端服务部署正常，登录UI查看链路数据</span><br><span class="line">&lt;p&gt;Backend service for testing only.&lt;/p&gt;</span><br><span class="line">&lt;p&gt;Backend sw8 received headers: 1-Y2JiMjk3YzAtMTRhOS00NmJjLWFkOTEtMWQwZWY5YjQyZGY5-NDY1YTc4YWQtOTNjYy00MzJlLWE4MzYtOTgyNGQ0OTUwNmQ2-1-c3p6dF9uZ2lueDExMg==-Y2VudG9zMjAwOS04NThmNmZjZjk3LW02OXRw-L3RpZXIyL2xi-YmFja2VuZCBzZXJ2aWNl&lt;/p&gt;</span><br></pre></td></tr></table></figure><h3 id="5-8、进行简单压测"><a href="#5-8、进行简单压测" class="headerlink" title="5.8、进行简单压测"></a>5.8、进行简单压测</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ab -c 100 -n 1000 http://127.0.0.1:60000/ingress</span><br><span class="line">    Server Software:        nginx/1.12.1</span><br><span class="line">    Server Hostname:        127.0.0.1</span><br><span class="line">    Server Port:            60000</span><br><span class="line">    </span><br><span class="line">    Document Path:          /ingress</span><br><span class="line">    Document Length:        272 bytes</span><br><span class="line">    </span><br><span class="line">    Concurrency Level:      100</span><br><span class="line">    Time taken for tests:   0.423 seconds</span><br><span class="line">    Complete requests:      1000</span><br><span class="line">    Failed requests:        0</span><br><span class="line">    Write errors:           0</span><br><span class="line">    Total transferred:      415000 bytes</span><br><span class="line">    HTML transferred:       272000 bytes</span><br><span class="line">    Requests per second:    2363.95 [#/sec] (mean)</span><br><span class="line">    Time per request:       42.302 [ms] (mean)</span><br><span class="line">    Time per request:       0.423 [ms] (mean, across all concurrent requests)</span><br><span class="line">    Transfer rate:          958.05 [Kbytes/sec] received</span><br></pre></td></tr></table></figure><h3 id="5-7、登录skywalking-UI进行查看"><a href="#5-7、登录skywalking-UI进行查看" class="headerlink" title="5.7、登录skywalking UI进行查看"></a>5.7、登录skywalking UI进行查看</h3><blockquote><p>提示：实例名可看做是一个容器，一台服务器，一个OS进程，但必须唯一，用于区分和标识，具体UI使用详解，请阅读官方手册：<a href="https://skywalking.apache.org/docs/main/latest/en/concepts-and-designs/ui-overview/" target="_blank" rel="noopener">Visualization</a></p></blockquote><p><img src="http://static.zybuluo.com/a807257775/lvwcvx88jcs80i073g4xls3p/image_1evovi773c331r2v1nke1v3o1jpn16.png" alt="image_1evovi773c331r2v1nke1v3o1jpn16.png-136kB"></p><h2 id="6、使用K8S部署NGINX"><a href="#6、使用K8S部署NGINX" class="headerlink" title="6、使用K8S部署NGINX"></a>6、使用K8S部署NGINX</h2><blockquote><p>提示：使用k8s部署基于skywalking的nginx，存在如下几个关键点，1、必须保证服务实例唯一，服务名称根据项目来定 2、skywalking的地址使用coredns的域名出现无法识别，必须填写clusterIP 3、nginx.conf配置文件是不支持容器变量传递，则放弃使用configmap进行存储和挂载，使用envsubst实现</p></blockquote><h3 id="6-1、准备构建Docker镜像的所需资源文件"><a href="#6-1、准备构建Docker镜像的所需资源文件" class="headerlink" title="6.1、准备构建Docker镜像的所需资源文件"></a>6.1、准备构建Docker镜像的所需资源文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@centos2009-858f6fcf97-m69tp nginx112]# ll</span><br><span class="line">total 5820</span><br><span class="line">-rw-r--r-- 1 root root     152 Mar  2 10:13 docker-entrypoint.sh -- 容器入口文件</span><br><span class="line">-rw-r--r-- 1 root root     642 Mar  2 10:13 Dockerfile  -- 镜像构建文件</span><br><span class="line">-rw-r--r-- 1 root root  885212 Mar  2 09:55 luajit2.1.0.tar.gz -- 将编译好的luajit打包</span><br><span class="line">-rw-r--r-- 1 root root 5012833 Mar  2 09:51 nginx112_skywalking.tar.gz -- 将编译并配置好的nginx打包</span><br><span class="line">-rw-r--r-- 1 root root   45535 Mar  2 09:52 skywalking-nginx-lua-0.3.0.tar.gz -- skywalking lua脚本打包</span><br><span class="line">#镜像构建文件内容</span><br><span class="line">[root@centos2009-858f6fcf97-m69tp nginx112]# cat Dockerfile </span><br><span class="line"># Version 0.0.1</span><br><span class="line">FROM 192.168.6.10/szzt_production/centos:centos7.9.2009</span><br><span class="line">MAINTAINER lisir </span><br><span class="line">ENV LUAJIT_LIB /usr/local/luajit/lib</span><br><span class="line">ENV LUAJIT_INC /usr/local/luajit/include/luajit-2.1</span><br><span class="line">ENV PATH /usr/local/nginx/sbin:$PATH</span><br><span class="line">ADD ./nginx112_skywalking.tar.gz /usr/local/</span><br><span class="line">ADD ./luajit2.1.0.tar.gz /usr/local/</span><br><span class="line">ADD ./skywalking-nginx-lua-0.3.0.tar.gz /usr/local/</span><br><span class="line">COPY ./docker-entrypoint.sh /</span><br><span class="line">RUN useradd -s /sbin/nologin -M www &amp;&amp; ln -sf /dev/stdout /usr/local/nginx/logs/access.log &amp;&amp; ln -sf /dev/stderr /usr/local/nginx/logs/error.log &amp;&amp; chmod 777 /docker-entrypoint.sh</span><br><span class="line">ENTRYPOINT [&quot;/docker-entrypoint.sh&quot;]</span><br><span class="line">WORKDIR /usr/local/nginx</span><br><span class="line">EXPOSE 80</span><br><span class="line">CMD [&quot;nginx&quot;,&quot;-g&quot;,&quot;daemon off;&quot;]</span><br><span class="line">#重要：为保证实例名唯一，需提前制作好使nginx.conf.template文件，用envsubst将nginx.conf.template中的内容覆盖nginx.conf文件内容，实现读取环境变量</span><br><span class="line">[root@centos2009-858f6fcf97-m69tp nginx112]# cat docker-entrypoint.sh </span><br><span class="line">#!/usr/bin/env sh</span><br><span class="line">set -eu</span><br><span class="line">envsubst &apos;$&#123;SVC_NAME&#125; $&#123;HOSTNAME&#125;&apos; &lt; /usr/local/nginx/conf/nginx.conf.template &gt; /usr/local/nginx/conf/nginx.conf</span><br><span class="line">exec &quot;$@&quot;</span><br></pre></td></tr></table></figure><h3 id="6-2、构建基于skywalking的nginx生产镜像"><a href="#6-2、构建基于skywalking的nginx生产镜像" class="headerlink" title="6.2、构建基于skywalking的nginx生产镜像"></a>6.2、构建基于skywalking的nginx生产镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#构建过程直接-t打上标签</span><br><span class="line">docker image build -t 192.168.6.33/szzt_production/nginx112:latest .</span><br><span class="line">#上传至私有仓库</span><br><span class="line">docker push 192.168.6.33/szzt_production/nginx112:latest</span><br></pre></td></tr></table></figure><h3 id="6-3、部署一个nginx容器进行测试"><a href="#6-3、部署一个nginx容器进行测试" class="headerlink" title="6.3、部署一个nginx容器进行测试"></a>6.3、部署一个nginx容器进行测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#用制作好的镜像，create的一个容器</span><br><span class="line">docker container run -d --name nginx-lisir -p 83:60000 -e SVC_NAME=szzt-lisir-nginx -e SW_ADDR=http://10.244.1.19:12800 --restart always 192.168.6.33/szzt_production/nginx112:latest</span><br><span class="line">#访问测试</span><br><span class="line">curl http://127.0.0.1:83/ingress</span><br><span class="line">&lt;p&gt;Backend service for testing only.&lt;/p&gt;</span><br><span class="line">&lt;p&gt;Backend sw8 received headers: 1-Y2JiMjk3YzAtMTRhOS00NmJjLWFkOTEtMWQwZWY5YjQyZGY5-Y2JiMjk3YzAtMTRhOS00NmJjLWFkOTEtMWQwZWY5YjQyZGY5-1-c3p6dC1saXNpci1uZ2lueA==-MGUyMTRlOTI3MGU0-L3RpZXIyL2xi-YmFja2VuZCBzZXJ2aWNl&lt;/p&gt;</span><br></pre></td></tr></table></figure><h3 id="6-4、使用k8s部署"><a href="#6-4、使用k8s部署" class="headerlink" title="6.4、使用k8s部署"></a>6.4、使用k8s部署</h3><blockquote><p>提示：k8s配置文件篇幅过长这里不展示，按照如下指令操作，可完成PVC存储、configmap配置中心、集群暴露端口svc及pod相关等资源的创建；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#按照文件数据顺序，依次使用Kubectl apply -f xxx.yml，即可完成nginx集群部署，重点对6号文件进行调整，里面需增加SVC_NAME、SW_ADDR的ENV，用于配置文件变量替换</span><br><span class="line">[root@DEVOPSSRV01 nginx_deployment]# ll</span><br><span class="line">total 28</span><br><span class="line">-rw-r--r-- 1 root root  292 Jan  7 14:44 1.nginx_pv.yml</span><br><span class="line">-rw-r--r-- 1 root root  217 Jan  7 14:44 2.nginx_pvc_web1.yml</span><br><span class="line">-rw-r--r-- 1 root root 4653 Mar  2 11:04 3.nginx-config.yml</span><br><span class="line">-rw-r--r-- 1 root root  519 Mar  2 11:04 4.www-config.yml</span><br><span class="line">-rw-r--r-- 1 root root  354 Mar  2 11:39 5.nginx_svc.yml</span><br><span class="line">-rw-r--r-- 1 root root 1386 Mar  2 11:13 6.nginx_deployment_v3.yml</span><br><span class="line">#使用命令查看创建后的资源运行状态</span><br><span class="line">[root@DEVOPSSRV01 nginx_deployment]# kubectl get pod,svc -n nginx-production -o wide</span><br><span class="line">NAME                            READY   STATUS    RESTARTS   AGE     IP             NODE                NOMINATED NODE   READINESS GATES</span><br><span class="line">pod/nginx112-59fcbcbccc-5d7ms   1/1     Running   0          5h32m   10.244.1.24    tssrv02.novalocal   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx112-59fcbcbccc-mfglm   1/1     Running   0          5h32m   10.244.2.195   dbsrv01.novalocal   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">NAME                TYPE       CLUSTER-IP   EXTERNAL-IP   PORT(S)                        AGE     SELECTOR</span><br><span class="line">service/nginx-svc   NodePort   10.98.3.73   &lt;none&gt;        60000:30002/TCP,80:30006/TCP   5h36m   app=web_server</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="6-5、登录k8s-dashboard查看资源情况"><a href="#6-5、登录k8s-dashboard查看资源情况" class="headerlink" title="6.5、登录k8s dashboard查看资源情况"></a>6.5、登录k8s dashboard查看资源情况</h3><ul><li>pods资源<br><img src="http://static.zybuluo.com/a807257775/9vh9vk708i3a6syu702m6is9/image_1evovvggs1ujt6vv1js1e7rpgf1j.png" alt="image_1evovvggs1ujt6vv1js1e7rpgf1j.png-138.9kB"></li><li>configmaps资源<br><img src="http://static.zybuluo.com/a807257775/zmu8syto8q0j0wjefyn9ckzq/image_1evp244544vnfr6re01efg1qdum.png" alt="image_1evp244544vnfr6re01efg1qdum.png-126.5kB"></li></ul><h3 id="6-6、登录skywalking-UI查看资源情况"><a href="#6-6、登录skywalking-UI查看资源情况" class="headerlink" title="6.6、登录skywalking UI查看资源情况"></a>6.6、登录skywalking UI查看资源情况</h3><ul><li>可用简单的压测命令进行测试后，在登录查看，在k8s上创建了几个POD，这里应当看到对应的几个实例<br><img src="http://static.zybuluo.com/a807257775/q3pgp06401jqvt26ll5l0b61/image_1evp3e9m4ism1fr6v8cvhtl8b13.png" alt="image_1evp3e9m4ism1fr6v8cvhtl8b13.png-137.4kB"></li></ul><h2 id="7、打完收工"><a href="#7、打完收工" class="headerlink" title="7、打完收工"></a>7、打完收工</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用SkyWalking监控Nginx链路信息&quot;&gt;&lt;a href=&quot;#使用SkyWalking监控Nginx链路信息&quot; class=&quot;headerlink&quot; title=&quot;使用SkyWalking监控Nginx链路信息&quot;&gt;&lt;/a&gt;使用SkyWalking监控Ngi
      
    
    </summary>
    
      <category term="SkyWalking" scheme="http://www.lisirlife.cn/categories/SkyWalking/"/>
    
    
      <category term="SkyWalking" scheme="http://www.lisirlife.cn/tags/SkyWalking/"/>
    
  </entry>
  
  <entry>
    <title>ECK-从Kafka实时抓取JAVA日志</title>
    <link href="http://www.lisirlife.cn/2021/02/26/ECK-%E4%BB%8EKafka%E5%AE%9E%E6%97%B6%E6%8A%93%E5%8F%96JAVA%E6%97%A5%E5%BF%97/"/>
    <id>http://www.lisirlife.cn/2021/02/26/ECK-从Kafka实时抓取JAVA日志/</id>
    <published>2021-02-26T05:00:00.000Z</published>
    <updated>2024-09-21T09:02:52.380Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ECK-从Kafka实时抓取JAVA日志"><a href="#ECK-从Kafka实时抓取JAVA日志" class="headerlink" title="ECK-从Kafka实时抓取JAVA日志"></a>ECK-从Kafka实时抓取JAVA日志</h1><h2 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h2><blockquote><p>本篇博客完整的记录了zk及kafka完整安装过程，并协同开发将java应用日志，直接输出至kafka集群，随后通过logstash的kafka input插件进行主题消费，并通过正则进行数据结构化，最后输出到es集群（es集群通过k8s采用eck模式进行安装），数据结果则使用kibaka进行展示，默认关闭selinux及防火墙，系统优化已提前做完；</p></blockquote><h2 id="2、部署环境介绍"><a href="#2、部署环境介绍" class="headerlink" title="2、部署环境介绍"></a>2、部署环境介绍</h2><table><thead><tr><th>平台</th><th>IP</th><th>主机名</th><th>ECK版本</th><th>ZK版本</th><th>Kafka版本</th></tr></thead><tbody><tr><td>CentOS Linux release 7.7.1908</td><td>192.168.6.10</td><td>DEVOPSSRV01</td><td>ELK:7.10.1</td><td>3.6.2</td><td>2.5.0</td><td></td></tr><tr><td>CentOS Linux release 7.7.1908</td><td>192.168.6.39</td><td>DBSRV01</td><td>ELK:7.10.1</td><td>3.6.2</td><td>2.5.0</td><td></td></tr><tr><td>CentOS Linux release 7.7.1908</td><td>192.168.6.45</td><td>TSSRV02</td><td>ELK:7.10.1</td><td>3.6.2</td><td>2.5.0</td><td></td></tr></tbody></table><h2 id="3、ZooKeeper集群安装与配置"><a href="#3、ZooKeeper集群安装与配置" class="headerlink" title="3、ZooKeeper集群安装与配置"></a>3、ZooKeeper集群安装与配置</h2><h3 id="3-1、安装并配置JDK1-8环境"><a href="#3-1、安装并配置JDK1-8环境" class="headerlink" title="3.1、安装并配置JDK1.8环境"></a>3.1、安装并配置JDK1.8环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#安装jdk1.8.0_261</span><br><span class="line">[root@DEVOPSSRV01 java]# pwd</span><br><span class="line">/opt/java</span><br><span class="line">[root@DEVOPSSRV01 java]# ls</span><br><span class="line">jdk1.8.0_261  jdk-8u261-linux-x64.tar.gz</span><br><span class="line">#配置jdk、zk、kafka环境变量</span><br><span class="line">[root@DEVOPSSRV01 ~]# cat /etc/profile</span><br><span class="line"># /etc/profile</span><br><span class="line"># Java Environment Config</span><br><span class="line">JAVA_HOME=/opt/java/jdk1.8.0_261</span><br><span class="line">JRE_HOME=/opt/java/jdk1.8.0_261/jre</span><br><span class="line">CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin:/usr/local/kafka-2.5.0/bin:/usr/local/zk-3.6.2/bin</span><br><span class="line">export PATH JAVA_HOME JRE_HOME CLASSPATH</span><br></pre></td></tr></table></figure><h3 id="3-2、下载并安装zk（免编译）"><a href="#3-2、下载并安装zk（免编译）" class="headerlink" title="3.2、下载并安装zk（免编译）"></a>3.2、下载并安装zk（免编译）</h3><blockquote><p>zk下载地址：<a href="https://zookeeper.apache.org/releases.html" target="_blank" rel="noopener">Apache ZooKeeper™ Releases</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#解压二进制安装文件至/usr/local</span><br><span class="line">[root@DEVOPSSRV01 soft]# tar xzvf apache-zookeeper-3.6.2-bin.tar.gz -C /usr/local/</span><br><span class="line">#切换至通用安装路径</span><br><span class="line">[root@DEVOPSSRV01 soft]# cd /usr/local/</span><br><span class="line">#修改zk文件夹名称</span><br><span class="line">[root@DEVOPSSRV01 local]# mv apache-zookeeper-3.6.2-bin /usr/local/zk-3.6.2</span><br></pre></td></tr></table></figure><h3 id="3-3、zk集群配置"><a href="#3-3、zk集群配置" class="headerlink" title="3.3、zk集群配置"></a>3.3、zk集群配置</h3><blockquote><p>提示：默认情况下只需要对dataDir进行配置，新增集群配置信息即可；</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@DEVOPSSRV01 ~]# cd /usr/local/zk-3.6.2/conf/</span><br><span class="line">[root@DEVOPSSRV01 conf]# cp zoo_sample.cfg zoo.cfg</span><br><span class="line">[root@DEVOPSSRV01 conf]# vim zoo.cfg</span><br><span class="line">#修改数据文件目录</span><br><span class="line">dataDir=/usr/local/zk-3.6.2/data</span><br><span class="line">...</span><br><span class="line">#调整集群配置</span><br><span class="line">server.0=192.168.6.10:2888:3888</span><br><span class="line">server.1=192.168.6.45:2888:3888</span><br><span class="line">server.2=192.168.6.39:2888:3888</span><br></pre></td></tr></table></figure><ul><li>附录：zoo.cfg配置文件详解</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 通信心跳数，Zookeeper服务器与客户端心跳时间，单位毫秒Zookeeper使用的基本时间，服务器之间或客户端与服务器之间维持心跳的时间间隔，也就是每个tickTime时间就会发送一个心跳，时间单位为毫秒。 它用于心跳机制，并且设置最小的session超时时间为两倍心跳时间。（session的最小超时时间是2*tickTime）</span><br><span class="line">tickTime=2000</span><br><span class="line"># LF初始通信时限 集群中的Fo1lower跟随者服务器与Leader领导者服务器之间初始连接时能容忍的最多心跳数（tickTime的数量），用它来限定集群中的Zookeeper服务器连接到Leader的时限。</span><br><span class="line">initLimit=10</span><br><span class="line"># LF同步通信时限 集群中Leader与Fo1lower之间的最大响应时间单位，假如响应超过syncLimit*tickTime，Leader认为Fo11wer死掉，从服务器列表中删除Fo1lwer。</span><br><span class="line">syncLimit=5</span><br><span class="line"># 数据文件目录+数据持久化路径 主要用于保存Zookeeper中的数据。</span><br><span class="line">dataDir=/usr/local/zk-3.6.2/data</span><br><span class="line"># 客户端连接端口 监听客户端连接的端口。</span><br><span class="line">clientPort=2181</span><br><span class="line"># 客户端连接的最大连接数</span><br><span class="line">#maxClientCnxns=60</span><br><span class="line"># 要保留在dataDir中的快照数</span><br><span class="line">#autopurge.snapRetainCount=3</span><br><span class="line"># 清除任务间隔（小时）</span><br><span class="line"># 设置为“0”以禁用自动清除功能</span><br><span class="line">#autopurge.purgeInterval=1</span><br><span class="line">#server.x：x表示一个数字，这个数字表示第几个服务器，配置在myid的文件，3888：选举leader使用，2888：集群内机器通讯使用（Leader监听此端口）</span><br><span class="line">server.0=192.168.6.10:2888:3888</span><br><span class="line">server.1=192.168.6.45:2888:3888</span><br><span class="line">server.2=192.168.6.39:2888:3888</span><br></pre></td></tr></table></figure><h3 id="3-4、zk集群同步"><a href="#3-4、zk集群同步" class="headerlink" title="3.4、zk集群同步"></a>3.4、zk集群同步</h3><blockquote><p>提示：以上操作全部在三台服务器上进行，可使用scp进行快速多机拷贝，拷贝完成后，对<code>myid</code>进行修改，确保与<code>zoo.cfg</code>中<code>server.x</code>保持一直，并唯一；</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#DEVOPSSRV01主机的myid：0</span><br><span class="line">[root@DEVOPSSRV01 data]# cat myid </span><br><span class="line">0</span><br><span class="line">[root@DEVOPSSRV01 data]# pwd</span><br><span class="line">/usr/local/zk-3.6.2/data</span><br><span class="line"></span><br><span class="line">#TSSRV02主机的myid：1</span><br><span class="line">[root@TSSRV02 data]# cat myid </span><br><span class="line">1</span><br><span class="line">[root@TSSRV02 data]# pwd</span><br><span class="line">/usr/local/zk-3.6.2/data</span><br><span class="line"></span><br><span class="line">#DBSRV01主机的myid：2</span><br><span class="line">[root@DBSRV01 data]# cat myid </span><br><span class="line">2</span><br><span class="line">[root@DBSRV01 data]# pwd</span><br><span class="line">/usr/local/zk-3.6.2/data</span><br></pre></td></tr></table></figure><h3 id="3-5、zk集群管理"><a href="#3-5、zk集群管理" class="headerlink" title="3.5、zk集群管理"></a>3.5、zk集群管理</h3><blockquote><p>提示：配置jdk环境变量的时候，已经将zk和kafka的安装目录添加到了path中，可直接使用命令进行管理；</p></blockquote><h4 id="3-5-1、启动集群"><a href="#3-5-1、启动集群" class="headerlink" title="3.5.1、启动集群"></a>3.5.1、启动集群</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#三台机器共同执行zkServer.sh start</span><br><span class="line">#TSSRV02</span><br><span class="line">[root@TSSRV02 logs]# zkServer.sh start</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/local/zk-3.6.2/bin/../conf/zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br><span class="line">#DBSRV01</span><br><span class="line">[root@DBSRV01 logs]# zkServer.sh start</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/local/zk-3.6.2/bin/../conf/zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br><span class="line">#DEVOPSSRV01</span><br><span class="line">[root@DEVOPSSRV01 logs]# zkServer.sh start</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/local/zk-3.6.2/bin/../conf/zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br></pre></td></tr></table></figure><h4 id="3-5-2、查看集群状态"><a href="#3-5-2、查看集群状态" class="headerlink" title="3.5.2、查看集群状态"></a>3.5.2、查看集群状态</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#三台机器共同执行zkServer.sh status</span><br><span class="line">#TSSRV02主机角色为follower</span><br><span class="line">[root@TSSRV02 logs]# zkServer.sh status</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/local/zk-3.6.2/bin/../conf/zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost. Client SSL: false.</span><br><span class="line">Mode: follower</span><br><span class="line"></span><br><span class="line">#DBSRV01主机角色为leader，由于DBSRV01的myid是2，权重大，所以它是leader角色</span><br><span class="line">[root@DBSRV01 logs]# zkServer.sh status</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/local/zk-3.6.2/bin/../conf/zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost. Client SSL: false.</span><br><span class="line">Mode: leader</span><br><span class="line"></span><br><span class="line">#DEVOPSSRV01主机角色为DEVOPSSRV01</span><br><span class="line">[root@DEVOPSSRV01 logs]# zkServer.sh status</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/local/zk-3.6.2/bin/../conf/zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost. Client SSL: false.</span><br><span class="line">Mode: follower</span><br></pre></td></tr></table></figure><ul><li>集群状态：<img src="http://static.zybuluo.com/a807257775/n8hjcab2779v8hxy6c6px8gg/image_1ev7300ac1b6f1ttk7ag1f451bd3p.png" alt="image_1ev7300ac1b6f1ttk7ag1f451bd3p.png-49.5kB"></li></ul><h4 id="3-5-3、停止与重启指令"><a href="#3-5-3、停止与重启指令" class="headerlink" title="3.5.3、停止与重启指令"></a>3.5.3、停止与重启指令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#停止</span><br><span class="line">zkServer.sh stop</span><br><span class="line">#重启</span><br><span class="line">zkServer.sh restart</span><br></pre></td></tr></table></figure><h2 id="4、Kafka集群安装与配置"><a href="#4、Kafka集群安装与配置" class="headerlink" title="4、Kafka集群安装与配置"></a>4、Kafka集群安装与配置</h2><blockquote><p>提示：安装kafka集群前，确保已安装jdk1.8和zk集群，并配置好相关环境变量，请看第三章节；</p></blockquote><h3 id="4-1、下载并安装kafka（免编译）"><a href="#4-1、下载并安装kafka（免编译）" class="headerlink" title="4.1、下载并安装kafka（免编译）"></a>4.1、下载并安装kafka（免编译）</h3><blockquote><p>kafka下载地址：<a href="http://kafka.apache.org/downloads" target="_blank" rel="noopener">DOWNLOAD KAFKA</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#解压至指定目录</span><br><span class="line">[root@DEVOPSSRV01 soft]# tar xzvf kafka_2.12-2.5.0.tgz -C /usr/local/ &amp;&amp; cd /usr/local/</span><br><span class="line">#重命名</span><br><span class="line">[root@DEVOPSSRV01 local]# mv kafka_2.12-2.5.0 /usr/local/kafka-2.5.0</span><br><span class="line">#切换到kafaka二进制资源目录</span><br><span class="line">[root@DEVOPSSRV01 soft]# cd kafka-2.5.0/</span><br><span class="line">#创建日志目录</span><br><span class="line">[root@DEVOPSSRV01 local]# mkdir -pv /var/log/kafka</span><br><span class="line">#文件结构</span><br><span class="line">[root@DEVOPSSRV01 kafka-2.5.0]# ls</span><br><span class="line">bin  config  libs  LICENSE  logs  NOTICE  site-docs</span><br><span class="line">[root@DEVOPSSRV01 kafka-2.5.0]# pwd</span><br><span class="line">/usr/local/kafka-2.5.0</span><br></pre></td></tr></table></figure><h3 id="4-2、kafka集群配置"><a href="#4-2、kafka集群配置" class="headerlink" title="4.2、kafka集群配置"></a>4.2、kafka集群配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#切换至kafka配置文件目录</span><br><span class="line">[root@DEVOPSSRV01 ~]# cd /usr/local/kafka-2.5.0/config/</span><br><span class="line">#对broker的配置文件server.properties进行调整</span><br><span class="line">[root@DEVOPSSRV01 config]# vim server.properties</span><br><span class="line">broker.id=0</span><br><span class="line">listeners=PLAINTEXT://192.168.6.10:9092</span><br><span class="line">log.dirs=/var/log/kafka</span><br><span class="line">zookeeper.connect=192.168.6.10:2181,192.168.6.39:2181,192.168.6.45:2181</span><br></pre></td></tr></table></figure><ul><li>附录：broker的配置文件<code>server.properties</code>详解<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">############################# Server Basics #############################</span><br><span class="line">#每一个broker在集群中的唯一标示，要求是正数</span><br><span class="line">broker.id=0</span><br><span class="line"></span><br><span class="line">############################# Socket Server Settings #############################</span><br><span class="line">#服务端监听地址，可采用0.0.0.0，但如果服务器上部署了docker集群，建议绑定固定网卡IP</span><br><span class="line">listeners=PLAINTEXT://192.168.6.10:9092</span><br><span class="line"></span><br><span class="line">#处理网络请求的线程数量，也就是接收消息的线程数。</span><br><span class="line">#接收线程会将接收到的消息放到内存中，然后再从内存中写入磁盘</span><br><span class="line">num.network.threads=3</span><br><span class="line"></span><br><span class="line">#消息从内存中写入磁盘是时候使用的线程数量。</span><br><span class="line">#用来处理磁盘IO的线程数量</span><br><span class="line">num.io.threads=8</span><br><span class="line"></span><br><span class="line">#发送套接字的缓冲区大小</span><br><span class="line">socket.send.buffer.bytes=102400</span><br><span class="line"></span><br><span class="line">#接受套接字的缓冲区大小</span><br><span class="line">socket.receive.buffer.bytes=102400</span><br><span class="line"></span><br><span class="line">#请求套接字的缓冲区大小</span><br><span class="line">socket.request.max.bytes=104857600</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">############################# Log Basics #############################</span><br><span class="line">#kafka运行日志存放的路径</span><br><span class="line">log.dirs=/var/log/kafka</span><br><span class="line"></span><br><span class="line">#topic在当前broker上的分片个数</span><br><span class="line">num.partitions=1</span><br><span class="line"></span><br><span class="line">#我们知道segment文件默认会被保留7天的时间，超时的话就</span><br><span class="line">#会被清理，那么清理这件事情就需要有一些线程来做。这里就是</span><br><span class="line">#用来设置恢复和清理data下数据的线程数量</span><br><span class="line">num.recovery.threads.per.data.dir=1</span><br><span class="line"></span><br><span class="line">############################# Internal Topic Settings  #############################</span><br><span class="line"># The replication factor for the group metadata internal topics &quot;__consumer_offsets&quot; and &quot;__transaction_state&quot;</span><br><span class="line"># For anything other than development testing, a value greater than 1 is recommended to ensure availability such as 3.</span><br><span class="line">offsets.topic.replication.factor=1</span><br><span class="line">transaction.state.log.replication.factor=1</span><br><span class="line">transaction.state.log.min.isr=1</span><br><span class="line"></span><br><span class="line">############################# Log Flush Policy #############################</span><br><span class="line">#上面我们说过接收线程会将接收到的消息放到内存中，然后再从内存</span><br><span class="line">#写到磁盘上，那么什么时候将消息从内存中写入磁盘，就有一个</span><br><span class="line">#时间限制（时间阈值）和一个数量限制（数量阈值），这里设置的是</span><br><span class="line">#数量阈值，下一个参数设置的则是时间阈值。</span><br><span class="line">#partion buffer中，消息的条数达到阈值，将触发flush到磁盘。</span><br><span class="line">#log.flush.interval.messages=10000</span><br><span class="line"></span><br><span class="line">#消息buffer的时间，达到阈值，将触发将消息从内存flush到磁盘，</span><br><span class="line">#单位是毫秒。</span><br><span class="line">#log.flush.interval.ms=1000</span><br><span class="line"></span><br><span class="line">############################# Log Retention Policy #############################</span><br><span class="line">#segment文件保留的最长时间，默认保留7天（168小时），</span><br><span class="line">#超时将被删除，也就是说7天之前的数据将被清理掉。</span><br><span class="line">log.retention.hours=720</span><br><span class="line"></span><br><span class="line">#topic每个分区的最大文件大小，一个topic的大小限制 = 分区数*log.retention.bytes 。-1没有大小限制</span><br><span class="line">#log.retention.bytes和log.retention.minutes任意一个达到要求，都会执行删除，会被topic创建时的指定参数覆盖</span><br><span class="line">#log.retention.bytes=1073741824</span><br><span class="line"></span><br><span class="line">#日志文件中每个segment的大小，默认为1G</span><br><span class="line">log.segment.bytes=1073741824</span><br><span class="line"></span><br><span class="line">#上面的参数设置了每一个segment文件的大小是1G，那么</span><br><span class="line">#就需要有一个东西去定期检查segment文件有没有达到1G，</span><br><span class="line">#多长时间去检查一次，就需要设置一个周期性检查文件大小</span><br><span class="line">#的时间（单位是毫秒）</span><br><span class="line">log.retention.check.interval.ms=300000</span><br><span class="line"></span><br><span class="line">############################# Zookeeper #############################</span><br><span class="line">#zookeeper集群的地址，可以是多个，多个之间用逗号分割</span><br><span class="line">#hostname1:port1,hostname2:port2,hostname3:port3</span><br><span class="line">zookeeper.connect=192.168.6.10:2181,192.168.6.39:2181,192.168.6.45:2181</span><br><span class="line"></span><br><span class="line">#zookeeper链接超时时间</span><br><span class="line">#单位是毫秒。</span><br><span class="line">zookeeper.connection.timeout.ms=18000</span><br><span class="line"></span><br><span class="line">############################# Group Coordinator Settings #############################</span><br><span class="line">#当Consumer Group新增或减少Consumer时，重新分配Topic Partition的延迟时间</span><br><span class="line">group.initial.rebalance.delay.ms=0</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-2、kafka集群同步"><a href="#4-2、kafka集群同步" class="headerlink" title="4.2、kafka集群同步"></a>4.2、kafka集群同步</h3><blockquote><p>提示：以上操作全部在三台服务器上进行，可使用scp进行快速多机拷贝，拷贝完成后，对<code>broker.id</code>、<code>listeners</code>、<code>log.dirs</code>、<code>zookeeper.connect</code>关键参数进行修改；</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#修改完成后切换至配置文件目录</span><br><span class="line">[root@TSSRV02 ~]# cd /usr/local/kafka-2.5.0/config</span><br><span class="line">#使用grep命令进行配置过滤和比对，如下图</span><br><span class="line">[root@TSSRV02 config]# egrep -v &apos;^#|^$&apos; server.properties</span><br></pre></td></tr></table></figure><ul><li>配置文件比对：<img src="http://static.zybuluo.com/a807257775/um0dbgndmhh7ygmotxs096j1/image_1ev8r1cpd1f2apm73dt1cbstbs9.png" alt="image_1ev8r1cpd1f2apm73dt1cbstbs9.png-71kB"></li></ul><h3 id="4-3、kafka集群管理"><a href="#4-3、kafka集群管理" class="headerlink" title="4.3、kafka集群管理"></a>4.3、kafka集群管理</h3><blockquote><p>提示：配置jdk环境变量的时候，已经将zk和kafka的安装目录添加到了path中，可直接使用命令进行管理，<br>启动kafka集群前必须先确保zk服务正常；</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#非交互式启动集群</span><br><span class="line">bin/kafka-server-start.sh -daemon config/server.properties</span><br><span class="line">#停止kafka集群</span><br><span class="line">bin/kafka-server-stop.sh stop</span><br><span class="line">#查看主题列表</span><br><span class="line">kafka-topics.sh --zookeeper 0.0.0.0:2181 --list</span><br><span class="line">#创建主题logStash，有3个分区，1个副本</span><br><span class="line">kafka-topics.sh --zookeeper 0.0.0.0:2181 --create --topic logStash --replication-factor 1 --partitions 3</span><br><span class="line">#查看指定topic详情</span><br><span class="line">kafka-topics.sh --zookeeper 0.0.0.0:2181 --describe --topic logStash</span><br><span class="line">#查看某一topic数据</span><br><span class="line">kafka-console-consumer.sh --bootstrap-server 0.0.0.0:9092 --topic logStash --from-beginning</span><br><span class="line">##查看当前消费者</span><br><span class="line">kafka-consumer-groups.sh --bootstrap-server 0.0.0.0:9092 --list</span><br><span class="line">##查看指定消费者消费信息，其中依次展示group名称、消费的topic名称、partition id、consumer group最后一次提交的offset、最后提交的生产消息offset、消费offset与生产offset之间的差值、当前消费topic-partition的group成员id(不一定包含hostname)</span><br><span class="line">kafka-consumer-groups.sh --bootstrap-server 0.0.0.0:9092 --describe --group logstashSZZT</span><br></pre></td></tr></table></figure><h2 id="5、Logstash的安装与配置"><a href="#5、Logstash的安装与配置" class="headerlink" title="5、Logstash的安装与配置"></a>5、Logstash的安装与配置</h2><blockquote><p>本篇仅记录抓取java日志的全过程，Logstash的安装请参考：<a href="http://www.lisirlife.cn/2019/10/30/ELFK-%E5%AE%9E%E6%97%B6%E6%8A%93%E5%8F%96HAPROXY%E6%97%A5%E5%BF%97/">ELFK-实时抓取HAPROXY日志</a></p></blockquote><h3 id="5-1、java样本数据分析与正则编写"><a href="#5-1、java样本数据分析与正则编写" class="headerlink" title="5.1、java样本数据分析与正则编写"></a>5.1、java样本数据分析与正则编写</h3><ul><li><p>样本数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gateway:10.244.1.207:10000 2021-01-27 16:15:12.845 INFO main c.a.n.c.c.i.CacheData.addListener [fixed-nacos-headless.nacos-production.svc_8848-a8522218-4630-4adc-ab9f-5bb725fb9866] [a dd-listener] ok, tenant=a8522218-4630-4adc-ab9f-5bb725fb9866, dataId=router.json, group=DEFAULT_GROUP, cnt=1</span><br></pre></td></tr></table></figure></li><li><p>正则分拆：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">APP [a-zA-Z]+-?[a-zA-Z]+</span><br><span class="line">IP (?&lt;![0-9])(?:(?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5]))(?![0-9])</span><br><span class="line">PORT \b(?:[1-9][0-9]*)\b</span><br><span class="line">TOMCAT_DATESTAMP 20(?&gt;\d\d)&#123;1,2&#125;-(?:0?[1-9]|1[0-2])-(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9]) (?:2[0123]|[01]?[0-9]):?(?:[0-5][0-9])(?::?(?:(?:[0-5]?[0-9]|60)(?:[:.,][0-9]+)?))</span><br><span class="line">LOG_LEVEL ([Aa]lert|ALERT|[Tt]race|TRACE|[Dd]ebug|DEBUG|[Nn]otice|NOTICE|[Ii]nfo|INFO|[Ww]arn?(?:ing)?|WARN?(?:ING)?|[Ee]rr?(?:or)?|ERR?(?:OR)?|[Cc]rit?(?:ical)?|CRIT?(?:ICAL)?|[Ff]atal|FATAL|[Ss]evere|SEVERE|EMERG(?:ENCY)?|[Ee]merg(?:ency)?)\s?</span><br><span class="line">THREAD \S+</span><br></pre></td></tr></table></figure></li><li><p>Kibana Grok Debug：</p></li></ul><blockquote><p>Simulate后，如无报错则表示规则生效，数据结构化详情见<code>Structured Data</code>一栏</p></blockquote><p><img src="http://static.zybuluo.com/a807257775/rq59e89ecw5weq56ah5mi4hf/image_1ev9b36kklc9l0a1ruk71m99f13.png" alt="image_1ev9b36kklc9l0a1ruk71m99f13.png-83.6kB"></p><h3 id="5-2、导入java-patterns规则库"><a href="#5-2、导入java-patterns规则库" class="headerlink" title="5.2、导入java_patterns规则库"></a>5.2、导入java_patterns规则库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@DEVOPSSRV01 logstash]# cd /usr/share/logstash/patterns/</span><br><span class="line">[root@DEVOPSSRV01 patterns]# cat java_patterns </span><br><span class="line">#JAVA LOGS PATTTERNS</span><br><span class="line">APP [a-zA-Z]+-?[a-zA-Z]+</span><br><span class="line">IP (?&lt;![0-9])(?:(?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5]))(?![0-9])</span><br><span class="line">PORT \b(?:[1-9][0-9]*)\b</span><br><span class="line">TOMCAT_DATESTAMP 20(?&gt;\d\d)&#123;1,2&#125;-(?:0?[1-9]|1[0-2])-(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9]) (?:2[0123]|[01]?[0-9]):?(?:[0-5][0-9])(?::?(?:(?:[0-5]?[0-9]|60)(?:[:.,][0-9]+)?))</span><br><span class="line">LOG_LEVEL ([Aa]lert|ALERT|[Tt]race|TRACE|[Dd]ebug|DEBUG|[Nn]otice|NOTICE|[Ii]nfo|INFO|[Ww]arn?(?:ing)?|WARN?(?:ING)?|[Ee]rr?(?:or)?|ERR?(?:OR)?|[Cc]rit?(?:ical)?|CRIT?(?:ICAL)?|[Ff]atal|FATAL|[Ss]evere|SEVERE|EMERG(?:ENCY)?|[Ee]merg(?:ency)?)\s?</span><br><span class="line">THREAD \S+</span><br><span class="line">MESSAGE .*</span><br></pre></td></tr></table></figure><h3 id="5-3、导入java-log-conf配置文件"><a href="#5-3、导入java-log-conf配置文件" class="headerlink" title="5.3、导入java_log.conf配置文件"></a>5.3、导入java_log.conf配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@DEVOPSSRV01 conf.d]# pwd</span><br><span class="line">/etc/logstash/conf.d</span><br><span class="line">[root@DEVOPSSRV01 conf.d]# cat java_log.conf</span><br><span class="line">input &#123;</span><br><span class="line">  kafka &#123;</span><br><span class="line">    bootstrap_servers =&gt; &quot;192.168.6.10:9092,192.168.6.39:9092,192.168.6.45:9092&quot;</span><br><span class="line">    topics =&gt; [&quot;logStash&quot;]</span><br><span class="line">    consumer_threads =&gt; 3</span><br><span class="line">    decorate_events =&gt; true</span><br><span class="line">    auto_offset_reset =&gt; &quot;earliest&quot;</span><br><span class="line">    client_id =&gt; &quot;logstash610&quot;</span><br><span class="line">    group_id =&gt; &quot;logstashSZZT&quot;</span><br><span class="line">    value_deserializer_class =&gt; &quot;org.apache.kafka.common.serialization.ByteArrayDeserializer&quot;</span><br><span class="line">    key_deserializer_class =&gt; &quot;org.apache.kafka.common.serialization.ByteArrayDeserializer&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  grok &#123;</span><br><span class="line">    patterns_dir =&gt; [&quot;/usr/share/logstash/patterns&quot;]</span><br><span class="line">    match =&gt; &#123; &quot;message&quot; =&gt; &quot;%&#123;APP:app&#125;:%&#123;IP:ip&#125;:%&#123;PORT:port&#125; %&#123;TOMCAT_DATESTAMP:tomcat_datestamp&#125; %&#123;LOG_LEVEL:log_level&#125; %&#123;THREAD:thread&#125; %&#123;MESSAGE:message&#125;&quot; &#125;</span><br><span class="line">    overwrite =&gt; [ &quot;message&quot; ]</span><br><span class="line">  &#125;</span><br><span class="line">  date &#123;</span><br><span class="line">    match =&gt; [ &quot;tomcat_datestamp&quot;, &quot;yyyy-MM-dd HH:mm:ss.SSS&quot; ]</span><br><span class="line">    target =&gt; &quot;@timestamp&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  ruby &#123;</span><br><span class="line">    code =&gt; &quot;event.set(&apos;timestamp&apos;, event.get(&apos;@timestamp&apos;).time.localtime + 8*60*60)&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    convert =&gt; [&quot;timestamp&quot;, &quot;string&quot;]</span><br><span class="line">    gsub =&gt; [ &quot;message&quot;, &quot;\r&quot;, &quot;&quot; ]</span><br><span class="line">    gsub =&gt; [&quot;timestamp&quot;, &quot;T([\S\s]*?)Z&quot;, &quot;&quot;]</span><br><span class="line">    gsub =&gt; [&quot;timestamp&quot;, &quot;-&quot;, &quot;.&quot;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [&quot;https://192.168.6.10:30679&quot;] </span><br><span class="line">    ssl =&gt; true</span><br><span class="line">    cacert =&gt; &quot;/data/share/elastic-pv/http-certs/tls.crt&quot;</span><br><span class="line">    user =&gt; &quot;elastic&quot;</span><br><span class="line">    index =&gt; &quot;unifed-auth-center-%&#123;timestamp&#125;&quot;</span><br><span class="line">    password =&gt; &quot;fWX7545K62Kr40Q0KOmT2GlD&quot;</span><br><span class="line">    ssl_certificate_verification =&gt; false</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-4、重启logstash"><a href="#5-4、重启logstash" class="headerlink" title="5.4、重启logstash"></a>5.4、重启logstash</h3><blockquote><p>提示：日志如无ERROR级别的日志，表示数据已开始向ES导入，随后请登录kibana查看数据情况</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@DEVOPSSRV01 logstash]# systemctl restart logstash.serivce</span><br><span class="line">[root@DEVOPSSRV01 logstash]# tail -f /var/log/logstash/logstash-plain.log</span><br></pre></td></tr></table></figure><h3 id="5-5、登录kibana创建索引查看数据"><a href="#5-5、登录kibana创建索引查看数据" class="headerlink" title="5.5、登录kibana创建索引查看数据"></a>5.5、登录kibana创建索引查看数据</h3><ul><li><p>输入es用户名和密码<br><img src="http://static.zybuluo.com/a807257775/mjp4a3c0yj85s7r6h4jx42dn/image_1ev92mvs176um508ov1adjb819.png" alt="image_1ev92mvs176um508ov1adjb819.png-64.8kB"></p></li><li><p>创建索引<br><img src="http://static.zybuluo.com/a807257775/14f74ts9olez1jqo8bqmdyaw/image_1ev9b7r6ldlafocrhh5mk1pb81g.png" alt="image_1ev9b7r6ldlafocrhh5mk1pb81g.png-133.5kB"></p></li><li><p>返回首页，打开Discover查看数据<br><img src="http://static.zybuluo.com/a807257775/mhmvtggs0vq58oficf4iea5n/image_1ev92p1451r3mph0a9sev1j05m.png" alt="image_1ev92p1451r3mph0a9sev1j05m.png-298.8kB"></p></li></ul><h2 id="6、其他资料"><a href="#6、其他资料" class="headerlink" title="6、其他资料"></a>6、其他资料</h2><ul><li>阿里资料：<a href="https://help.aliyun.com/document_detail/165190.html?spm=a2c4g.11186623.2.6.39ed7ddcQ7XOVl" target="_blank" rel="noopener">消息队列Kafka版可以作为Input接入Logstash</a></li><li>Logstash Reference：<a href="https://www.elastic.co/guide/en/logstash/7.10/index.html" target="_blank" rel="noopener">官方logstash资料</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ECK-从Kafka实时抓取JAVA日志&quot;&gt;&lt;a href=&quot;#ECK-从Kafka实时抓取JAVA日志&quot; class=&quot;headerlink&quot; title=&quot;ECK-从Kafka实时抓取JAVA日志&quot;&gt;&lt;/a&gt;ECK-从Kafka实时抓取JAVA日志&lt;/h1&gt;&lt;
      
    
    </summary>
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/categories/ELK%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/tags/ELK%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>企业级镜像仓库之Harbor部署手册</title>
    <link href="http://www.lisirlife.cn/2021/02/26/%E4%BC%81%E4%B8%9A%E7%BA%A7%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93%E4%B9%8BHarbor%E9%83%A8%E7%BD%B2%E6%89%8B%E5%86%8C/"/>
    <id>http://www.lisirlife.cn/2021/02/26/企业级镜像仓库之Harbor部署手册/</id>
    <published>2021-02-26T05:00:00.000Z</published>
    <updated>2024-09-21T09:02:52.412Z</updated>
    
    <content type="html"><![CDATA[<h1 id="企业级镜像仓库之Harbor部署手册"><a href="#企业级镜像仓库之Harbor部署手册" class="headerlink" title="企业级镜像仓库之Harbor部署手册"></a>企业级镜像仓库之Harbor部署手册</h1><h2 id="1、harbor概述"><a href="#1、harbor概述" class="headerlink" title="1、harbor概述"></a>1、harbor概述</h2><ul><li>VMware开源的企业级Registry项目Harbor，以Docker公司开源的registry 为基础，提供了管理UI, 基于角色的访问控制(Role Based Access Control)，AD/LDAP集成、以及审计日志(Audit logging) 等企业用户需求的功能，同时还原生支持中文，主要特点：<ul><li>基于角色的访问控制 - 用户与 Docker 镜像仓库通过“项目”进行组织管理，一个用户可以对多个镜像仓库在同一命名空间（project）里有不同的权限。</li><li>镜像复制 - 镜像可以在多个 Registry 实例中复制（同步）。尤其适合于负载均衡，高可用，混合云和多云的场景。</li><li>图形化用户界面 - 用户可以通过浏览器来浏览，检索当前 Docker 镜像仓库，管理项目和命名空间。</li><li>AD/LDAP 支持 - Harbor 可以集成企业内部已有的 AD/LDAP，用于鉴权认证管理。</li><li>审计管理 - 所有针对镜像仓库的操作都可以被记录追溯，用于审计管理。</li><li>国际化 - 已拥有英文、中文、德文、日文和俄文的本地化版本。更多的语言将会添加进来。</li><li>RESTful API - RESTful API 提供给管理员对于 Harbor 更多的操控, 使得与其它管理软件集成变得更容易。</li><li>部署简单 - 提供在线和离线两种安装工具， 也可以安装到 vSphere 平台(OVA 方式)虚拟设备</li></ul></li></ul><h2 id="2、harbor架构介绍"><a href="#2、harbor架构介绍" class="headerlink" title="2、harbor架构介绍"></a>2、harbor架构介绍</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">      Name                     Command                  State                 Ports          </span><br><span class="line">---------------------------------------------------------------------------------------------</span><br><span class="line">harbor-core         /harbor/entrypoint.sh            Up (healthy)                            </span><br><span class="line">harbor-db           /docker-entrypoint.sh            Up (healthy)                            </span><br><span class="line">harbor-jobservice   /harbor/entrypoint.sh            Up (healthy)                            </span><br><span class="line">harbor-log          /bin/sh -c /usr/local/bin/ ...   Up (healthy)   127.0.0.1:1514-&gt;10514/tcp</span><br><span class="line">harbor-portal       nginx -g daemon off;             Up (healthy)                            </span><br><span class="line">nginx               nginx -g daemon off;             Up (healthy)   0.0.0.0:80-&gt;8080/tcp     </span><br><span class="line">redis               redis-server /etc/redis.conf     Up (healthy)                            </span><br><span class="line">registry            /home/harbor/entrypoint.sh       Up (healthy)                            </span><br><span class="line">registryctl         /home/harbor/start.sh            Up (healthy)</span><br></pre></td></tr></table></figure><ul><li>Harbor的每一个组件都被包装成一个docker容器。自然，Harbor是通过docker compose来部署的。在Harbor源代码的make目录下的docker-compose模板会被用于部署Harbor。打开该模板文件，可以看到Harbor由7个容器组件所组成：<ul><li>proxy - 通过nginx服务器来做反向代理</li><li>registry - docker官方发布的一个仓库镜像组件</li><li>ui - 整个架构的核心服务。该容器是Harbor工程的主要部分</li><li>adminserver - 作为Harbor工程的配置数据管理器使用</li><li>mysql - 通过官方Mysql镜像创建的数据库容器</li><li>job services - 通过状态机的形式将镜像复制到远程Harbor实例。镜像删除同样也可以被同步到远程Harbor实例中。</li><li>log - 运行rsyslogd的容器，主要用于收集其他容器的日志<ul><li>这些容器之间都通过Docker内的DNS服务发现来连接通信。通过这种方式，每一个容器都可以通过相应的容器来进行访问。对于终端用户来说，只有反向代理(Nginx)服务的端口需要对外暴露。</li></ul></li></ul></li></ul><h2 id="3、harbor套件部署"><a href="#3、harbor套件部署" class="headerlink" title="3、harbor套件部署"></a>3、harbor套件部署</h2><h3 id="3-1、安装docker-compose-Harbor是通过docker-compose来部署的"><a href="#3-1、安装docker-compose-Harbor是通过docker-compose来部署的" class="headerlink" title="3.1、安装docker-compose(Harbor是通过docker compose来部署的)"></a>3.1、安装docker-compose(Harbor是通过docker compose来部署的)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#下载docker-compose</span><br><span class="line">curl -L &quot;https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br><span class="line">#赋予可执行权限</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br><span class="line">#构建软连接    </span><br><span class="line">ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class="line">#确认版本    </span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h3 id="3-2、下载离线安装包"><a href="#3-2、下载离线安装包" class="headerlink" title="3.2、下载离线安装包"></a>3.2、下载离线安装包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#下载地址：https://github.com/goharbor/harbor/releases</span><br><span class="line">#下载全量offline离线安装包</span><br><span class="line">wget https://github.com/goharbor/harbor/releases/download/v2.1.3/harbor-offline-installer-v2.1.3.tgz</span><br><span class="line">#解压</span><br><span class="line">tar xf harbor-offline-installer-v2.0.1.tgz </span><br><span class="line">#切换至harbor安装文件目录</span><br><span class="line">cd harbor</span><br></pre></td></tr></table></figure><h3 id="3-3、修改harbor安装的配置文件"><a href="#3-3、修改harbor安装的配置文件" class="headerlink" title="3.3、修改harbor安装的配置文件"></a>3.3、修改harbor安装的配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#harbor主配置文件</span><br><span class="line">cp harbor.yml.tmpl  harbor.yml</span><br><span class="line">#用于存放harbor的持久化数据</span><br><span class="line">mkdir -pv /data/share/harbor_data/</span><br><span class="line">#修改harbor.yml主配置文件</span><br><span class="line">#需要写IP地址或者域名</span><br><span class="line">hostname: 192.168.6.10</span><br><span class="line">#http配置</span><br><span class="line">http:</span><br><span class="line">     port: 80</span><br><span class="line">#https配置需指定ssl证书，需要时开启         </span><br><span class="line">#https:</span><br><span class="line">#  # https port for harbor, default is 443</span><br><span class="line">#  port: 443</span><br><span class="line">#  # The path of cert and key files for nginx</span><br><span class="line">#  certificate: /your/certificate/path</span><br><span class="line">#  private_key: /your/private/key/path </span><br><span class="line">#harbor登录用户的密码，用户名：admin</span><br><span class="line">harbor_admin_password: qaz000123    </span><br><span class="line">#数据库配置</span><br><span class="line">database:</span><br><span class="line">  password: qaz000123</span><br><span class="line">  max_idle_conns: 50</span><br><span class="line">  max_open_conns: 1000</span><br><span class="line">#持久化存储数据目录</span><br><span class="line">data_volume: /data/share/harbor_data</span><br></pre></td></tr></table></figure><h2 id="4、安装并启动Harbor"><a href="#4、安装并启动Harbor" class="headerlink" title="4、安装并启动Harbor"></a>4、安装并启动Harbor</h2><h3 id="4-1、安装之前需要启动docker，然后执行安装脚本"><a href="#4-1、安装之前需要启动docker，然后执行安装脚本" class="headerlink" title="4.1、安装之前需要启动docker，然后执行安装脚本"></a>4.1、安装之前需要启动docker，然后执行安装脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./install.sh</span><br><span class="line">#注意：安装完成后harbor是通过docker-compose启动和管理的</span><br></pre></td></tr></table></figure><h3 id="4-2、安装完成后查看下正在运行的docker容器"><a href="#4-2、安装完成后查看下正在运行的docker容器" class="headerlink" title="4.2、安装完成后查看下正在运行的docker容器"></a>4.2、安装完成后查看下正在运行的docker容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps | grep harbor</span><br></pre></td></tr></table></figure><h2 id="5、访问harbor-WEB界面"><a href="#5、访问harbor-WEB界面" class="headerlink" title="5、访问harbor WEB界面"></a>5、访问harbor WEB界面</h2><ul><li>访问地址<a href="http://10.255.4.33/" target="_blank" rel="noopener">http://10.255.4.33/</a><br><img src="http://static.zybuluo.com/a807257775/0k1zqs5ja6ehj7ceolr6go07/image_1eveljil5hh4crb1ctjvbtip69.png" alt="image_1eveljil5hh4crb1ctjvbtip69.png-82.1kB"></li><li>用项目管理镜像<br><img src="http://static.zybuluo.com/a807257775/p3cfmwdrhbtjdk7nlqb7pci0/image_1eveljsf78hs9odno08pcfobm.png" alt="image_1eveljsf78hs9odno08pcfobm.png-103.7kB"></li></ul><h2 id="6、Harbor的使用（上传下载镜像）"><a href="#6、Harbor的使用（上传下载镜像）" class="headerlink" title="6、Harbor的使用（上传下载镜像）"></a>6、Harbor的使用（上传下载镜像）</h2><h3 id="6-1、web页面新建szzt-production项目"><a href="#6-1、web页面新建szzt-production项目" class="headerlink" title="6.1、web页面新建szzt_production项目"></a>6.1、web页面新建szzt_production项目</h3><ul><li>目前已制作或上传自有镜像共计15个<br><img src="http://static.zybuluo.com/a807257775/jfc234yxr224cs9677lw2q7d/image_1evelll971nvslcp8ea7m71b6d13.png" alt="image_1evelll971nvslcp8ea7m71b6d13.png-163kB"></li></ul><h3 id="6-2、将本地容器commit后，然后push到私有仓库"><a href="#6-2、将本地容器commit后，然后push到私有仓库" class="headerlink" title="6.2、将本地容器commit后，然后push到私有仓库"></a>6.2、将本地容器commit后，然后push到私有仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker login 192.168.6.10</span><br><span class="line">docker commit f1944ac523f7 192.168.6.10/szzt_production/nacos-server:1.3.2</span><br><span class="line">docker push 192.168.6.10/szzt_production/nacos-server:1.3.2</span><br><span class="line"># docker tag xoa_all_production:v1 192.168.0.8/xoa_all_production/2020.06.01.1:v1</span><br><span class="line"># docker push 192.168.0.8/xoa_all_production/2020.06.01.1:v1</span><br></pre></td></tr></table></figure><h3 id="6-3、修改各个docker节点或k8s-node节点的仓库源"><a href="#6-3、修改各个docker节点或k8s-node节点的仓库源" class="headerlink" title="6.3、修改各个docker节点或k8s node节点的仓库源"></a>6.3、修改各个docker节点或k8s node节点的仓库源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/docker/daemon.json </span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://wpf59uhk.mirror.aliyuncs.com&quot;],</span><br><span class="line">  &quot;insecure-registries&quot;: [&quot;192.168.6.10&quot;]</span><br><span class="line">&#125;</span><br><span class="line">#重启docker</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="6-4、拉取私有仓库镜像"><a href="#6-4、拉取私有仓库镜像" class="headerlink" title="6.4、拉取私有仓库镜像"></a>6.4、拉取私有仓库镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull 192.168.6.10/szzt_production/nacos-server:1.3.2</span><br></pre></td></tr></table></figure><h2 id="7、harbor的管理与启停"><a href="#7、harbor的管理与启停" class="headerlink" title="7、harbor的管理与启停"></a>7、harbor的管理与启停</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#切换到安装目录</span><br><span class="line">cd /soft/harbor_docker/</span><br><span class="line">#查看harbor运行情况</span><br><span class="line">docker-compose ps</span><br><span class="line">      Name                     Command                  State                 Ports          </span><br><span class="line">---------------------------------------------------------------------------------------------</span><br><span class="line">harbor-core         /harbor/entrypoint.sh            Up (healthy)                            </span><br><span class="line">harbor-db           /docker-entrypoint.sh            Up (healthy)                            </span><br><span class="line">harbor-jobservice   /harbor/entrypoint.sh            Up (healthy)                            </span><br><span class="line">harbor-log          /bin/sh -c /usr/local/bin/ ...   Up (healthy)   127.0.0.1:1514-&gt;10514/tcp</span><br><span class="line">harbor-portal       nginx -g daemon off;             Up (healthy)                            </span><br><span class="line">nginx               nginx -g daemon off;             Up (healthy)   0.0.0.0:80-&gt;8080/tcp     </span><br><span class="line">redis               redis-server /etc/redis.conf     Up (healthy)                            </span><br><span class="line">registry            /home/harbor/entrypoint.sh       Up (healthy)                            </span><br><span class="line">registryctl         /home/harbor/start.sh            Up (healthy) </span><br><span class="line">#启动harbor服务</span><br><span class="line">docker-compose up -d</span><br><span class="line">#关闭harbor服务</span><br><span class="line">docker-compose stop</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;企业级镜像仓库之Harbor部署手册&quot;&gt;&lt;a href=&quot;#企业级镜像仓库之Harbor部署手册&quot; class=&quot;headerlink&quot; title=&quot;企业级镜像仓库之Harbor部署手册&quot;&gt;&lt;/a&gt;企业级镜像仓库之Harbor部署手册&lt;/h1&gt;&lt;h2 id=&quot;1
      
    
    </summary>
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/categories/ELK%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="ELK文档" scheme="http://www.lisirlife.cn/tags/ELK%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>Docker常用命令手册</title>
    <link href="http://www.lisirlife.cn/2020/12/11/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%89%8B%E5%86%8C/"/>
    <id>http://www.lisirlife.cn/2020/12/11/Docker常用命令手册/</id>
    <published>2020-12-11T01:00:00.000Z</published>
    <updated>2024-09-21T09:02:52.368Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker常用命令手册"><a href="#Docker常用命令手册" class="headerlink" title="Docker常用命令手册"></a>Docker常用命令手册</h1><h2 id="1、docker常用基础命令"><a href="#1、docker常用基础命令" class="headerlink" title="1、docker常用基础命令"></a>1、docker常用基础命令</h2><blockquote><p>本文记录了在学习docker过程中所使用过，并可能会用到的命令，将命令进行解析和归集，方便日常工作使用，实时更新中</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">docker &lt;选项&gt;&lt;命令&gt;&lt;参数&gt;</span><br><span class="line">    --api-enable-cors=false </span><br><span class="line">        #使用API时，启用CORS（cross-origin resource sharing）</span><br><span class="line">    -b 、--bridge=&quot;&quot; </span><br><span class="line">        #使用事先创建的网桥接口。若设置为none，则不在容器内使用网络</span><br><span class="line">    --bip=&quot;&quot; </span><br><span class="line">        #使用CIDR标记法设置docker 的IP带宽。该选项不能与-b选项同时使用</span><br><span class="line">        #如：-bip=&quot;192.168.0.0/24&quot;</span><br><span class="line">    -D 、--debug </span><br><span class="line">        #启用调试模式</span><br><span class="line">    -d 、--deamon=false </span><br><span class="line">        #以守护进程模式运行</span><br><span class="line">    --dns </span><br><span class="line">        #设置docker要使用的DNS服务器</span><br><span class="line">    --dns-search=[] </span><br><span class="line">        #设置docker要使用的DNS搜索域。若设置为：example.com，则向服务器查询hello时，将首先查找hello.example.com</span><br><span class="line">    -e、--exec-drive=&quot;native&quot; </span><br><span class="line">        #设置docker运行驱动，可设置为Native与lxc</span><br><span class="line">    --fixed-cidr=&quot;&quot; </span><br><span class="line">        #固定分配IPv4地址的带宽。该IP地址必须在-b选项设置的网桥网络或--bip设置的IP网段内</span><br><span class="line">    -G、--group=&quot;docker&quot; </span><br><span class="line">        #以守护进程模式运行时，使用-H选项创建Unix套接字后，设置该Unix套接字所在的组。使用&quot;&quot;空字符串表示不设置分组</span><br><span class="line">    -g、 --graph=&quot;/var/lib/docker&quot; </span><br><span class="line">        #设置docker使用目录的顶层路径</span><br><span class="line">    -H、--host[] </span><br><span class="line">        #以守护进程模式运行时，设置套接字路径。</span><br><span class="line">    --icc=true </span><br><span class="line">        #开启容器间通信</span><br><span class="line">    --insecure-registry=[] </span><br><span class="line">        #使用私有证书搭建docker注册服务器时，设置docker注册服务器域名</span><br><span class="line">    --ip=0.0.0.0 </span><br><span class="line">        #使用docker run 命令时-p选项将端口暴露在外时，设置要绑定的默认IP地址</span><br><span class="line">    --ip-forward=true </span><br><span class="line">        #开启net.ipv4.ip_forward</span><br><span class="line">    --ip-masq=true </span><br><span class="line">        #为网桥上的IP地址开启IP伪装（masquerading）</span><br><span class="line">    --iptables=true </span><br><span class="line">        #开启iptables规则</span><br><span class="line">    --mtu=0 </span><br><span class="line">        #设置容器的网络最大传输单元（MTU, Maxmum transmission unit）若不设置，则使用路由器的默认MTU或者设置为1500</span><br><span class="line">    -p、--pidfile=&quot;/var/run/docker.pid&quot; </span><br><span class="line">        #设置PID文件路径</span><br><span class="line">    -registry-mirror=[] </span><br><span class="line">        #设置docker registry 的镜像地址</span><br><span class="line">    -s、--storage-driver=[] </span><br><span class="line">        #设置储存驱动，默认为auto，也可以设置为drivcemapper</span><br><span class="line">    --selinux-enabled=false </span><br><span class="line">        #开启SELinux SELinux尚不支持BTRFS储存驱动</span><br><span class="line">    --storage-opt </span><br><span class="line">        #设置存储驱动选项</span><br><span class="line">    --tls=false </span><br><span class="line">        #使用TLS</span><br><span class="line">    --tlscacert=&quot;/home/exapmleuser/.docker/ca.pem&quot; </span><br><span class="line">        #设置要在远程证书中使用的CA证书文件的路径</span><br><span class="line">    --tlscert=&quot;/home/exapmleuser/.docker/cert.pem&quot; </span><br><span class="line">        #设置证书文件路径</span><br><span class="line">    --tlskey=&quot;/home/exapmleuser/.docker/key.pem&quot; </span><br><span class="line">        #设置密匙文件路径</span><br><span class="line">    tlsverify=&quot;false&quot; </span><br><span class="line">        #使用TLS远程证书，守护进程与客户端全部使用证书验证</span><br><span class="line">    -v、--version=false </span><br><span class="line">        #打印版本信息</span><br></pre></td></tr></table></figure><h2 id="2、镜像操作命令总结"><a href="#2、镜像操作命令总结" class="headerlink" title="2、镜像操作命令总结"></a>2、镜像操作命令总结</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]# docker image --help</span><br><span class="line">Usage:docker image COMMAND</span><br><span class="line">Manage images</span><br><span class="line">Commands:</span><br><span class="line">  build       从Dockerfile构建镜像</span><br><span class="line">  history     用于显示镜像的历史。此处的历史依据Dockerfile文件中的设置创建</span><br><span class="line">  import      用于从压缩为tar文件（.tar .tar.gz .tgz .bzip .tar.xz .txz）的文件系统创建镜像</span><br><span class="line">  inspect     用于以JSON格式显示容器与镜像的详细信息</span><br><span class="line">  load        用于从tar文件创建镜像</span><br><span class="line">  ls          查看镜像列表更多用法参考如下笔记</span><br><span class="line">  prune       删除悬虚（dangling）镜像，添加-a参数则会移除没有被使用的镜像</span><br><span class="line">  pull        用于从镜像仓库拉取镜像</span><br><span class="line">  push        用于将镜像推送到Docker注册服务器</span><br><span class="line">  rm          删除一个或多个镜像</span><br><span class="line">  save        用于将镜像保存为tar包文件，-o、--output=&quot;&quot; 设置保存的文件名</span><br><span class="line">  tag         用于设置及修改镜像标签</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">#查看所有镜像</span><br><span class="line">docker images -a</span><br><span class="line">#查看镜像摘要，用于区分同名镜像，可使用摘要信息拉取镜像保证准确唯一</span><br><span class="line">docker image ls --digests ubuntu</span><br><span class="line">#根据镜像nameID删除镜像，删除前首先停止镜像，并确保无其他依赖次镜像层的镜像</span><br><span class="line">docker image rm $&#123;ID&#125;</span><br><span class="line">#批量删除镜像-f参数为强制删除</span><br><span class="line">docker image rm $(docker image ls -q) -f</span><br><span class="line">#拉取镜像</span><br><span class="line">docker image pull &lt;repository&gt;:&lt;tag&gt;</span><br><span class="line">docker image pull nginx:1.19.0</span><br><span class="line">docker image pull richarvey/nginx-php-fpm:last</span><br><span class="line">#拉取nigelpoulton/tu-demo下所有镜像</span><br><span class="line">docker image pull -a nigelpoulton/tu-demo</span><br><span class="line">#查看悬虚（dangling）镜像</span><br><span class="line">docker image ls --filter dangling=true</span><br><span class="line">#删除悬虚（dangling）镜像，添加-a参数则会移除没有被使用的镜像</span><br><span class="line">docker image prune</span><br><span class="line">#使用reference过滤仅显示标签为latest的镜像</span><br><span class="line">docker image ls --filter=reference=&quot;*:1.19.0&quot;</span><br><span class="line">#使用--format参数通过GO模板对输出内容进行格式化，如下只返回镜像的大小属性</span><br><span class="line">docker image ls --format &quot;&#123;&#123;.Size&#125;&#125;&quot;</span><br><span class="line">#只显示仓库、标签和大小信息</span><br><span class="line">docker image ls --format &quot;&#123;&#123;.Repository&#125;&#125;: &#123;&#123;.Tag&#125;&#125;: &#123;&#123;.Size&#125;&#125;&quot;</span><br><span class="line">#通过CLI的方式搜索docker hub，通过NAME字段进行内容匹配</span><br><span class="line">docker search nginx</span><br><span class="line">#使用--filter &quot;is-official=true&quot;参数，使命令返回内容只显示官方镜像</span><br><span class="line">docker search nginx --filter &quot;is-official=true&quot;</span><br><span class="line">#使用--filter &quot;is-automated=true&quot;参数，只显示自动创建的仓库</span><br><span class="line">docker search nginx --filter &quot;is-automated=true&quot;</span><br><span class="line">#使用--limit增加放回内容的行数，最多为100行</span><br><span class="line">docker search nginx --limit 100</span><br><span class="line">#查看镜像分层内容，包括镜像层数据和元数据</span><br><span class="line">docker image inspect nginx:1.19.0</span><br><span class="line">#查看镜像的构建历史命令记录</span><br><span class="line">docker image history nginx:1.19.0</span><br><span class="line">#显示完整构建命令</span><br><span class="line">docker history --format &#123;&#123;.CreatedBy&#125;&#125; --no-trunc=true  nginx:latest</span><br><span class="line">#修改镜像tag和name</span><br><span class="line">docker image tag cd645f5a4769 portainer/portainer:1.24.0</span><br><span class="line"></span><br><span class="line">#区别，可以依据具体使用场景来选择命令，若是只想备份images，使用save、load即可，若是在启动容器后，容器内容有变化，需要备份，则使用export、import</span><br><span class="line">#使用load命令导入镜像-i指表示从文件输入。会成功导入镜像及相关元数据，包括tag信息</span><br><span class="line">docker load -i jms_core.tar</span><br><span class="line">#使用save命令导出镜像，其中-o和&gt;表示输出到文件，nginx.tar为目标文件，nginx:latest是源镜像名（name:tag）</span><br><span class="line">docker save -o jms_nginx.tar jumpserver/jms_nginx:v2.4.3</span><br><span class="line">#其中-o表示输出到文件，nginx-test.tar为目标文件，nginx-test是源容器名（name）</span><br><span class="line">docker export -o nginx-test.tar nginx-test</span><br><span class="line">#使用import导入镜像</span><br><span class="line">docker import nginx-test.tar nginx:imp</span><br></pre></td></tr></table></figure><h2 id="3、容器操作命令总结"><a href="#3、容器操作命令总结" class="headerlink" title="3、容器操作命令总结"></a>3、容器操作命令总结</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]# docker container --help</span><br><span class="line">Usage:docker container COMMAND</span><br><span class="line">Manage containers</span><br><span class="line">Commands:</span><br><span class="line">  attach      用于将标准输入（stdin）与标准输出（stdout）连接到正在运行的容器</span><br><span class="line">  commit      用于从容器的修改项提交新镜像版本到本地</span><br><span class="line">  cp          用于将容器的目录或文件复制的到主机。若将cp命令中的路径设置为目录，则将该目录下的所有内容复制到主机</span><br><span class="line">  create      使用指定的镜像创建容器。与run命令不同，使用create命令只能创建容器而并不启动</span><br><span class="line">  diff        用于检查容器文件系统的修改</span><br><span class="line">  exec        用于从外部运行容器内部的命令</span><br><span class="line">  export      将用于将容器的文件系统导出为tar文件包</span><br><span class="line">  inspect     用于以JSON格式显示容器与镜像的详细信息</span><br><span class="line">  kill        用于向容器发送KILL信号，从而关闭容器（推荐使用更优雅温和的 docker stop 命令)</span><br><span class="line">  logs        令用于输出容器日志</span><br><span class="line">  ls          命令用于查看所有运行的容器 -a则查看所有容器</span><br><span class="line">  pause       命令用于暂停容器中正在运行的所有进程</span><br><span class="line">  port        命令用于查看容器的某个端口是否处于开放状态</span><br><span class="line">  prune       移除所有停止的容器</span><br><span class="line">  rename      对容器重命名</span><br><span class="line">  restart     使容器重启可加-t命令设置重启等待时间</span><br><span class="line">  rm          移除一个或多个容器，docker rm `docker ps -aq`删除所有容器</span><br><span class="line">  run         用于指定镜像创建容器，run命令在创建容器后会启动容器</span><br><span class="line">  start       启动一个或多个已停止的容器，参考rm命令用法</span><br><span class="line">  stats       显示容器资源使用统计信息的实时流</span><br><span class="line">  stop        停止停止一个或多个正在运行的容器，参考rm命令用法</span><br><span class="line">  top         顶部显示容器正在运行的进程</span><br><span class="line">  unpause     取消暂停取消暂停一个或多个容器中的所有进程</span><br><span class="line">  update      更新一个或多个容器的更新配置</span><br><span class="line">  wait        等待容器终止，然后输出 Exit Code</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#用于列出所有在UP的容器，使用-a则可以看到处于exited的容器</span><br><span class="line">docker container ls</span><br><span class="line">#用于查看单独容器的日志</span><br><span class="line">docker logs $&#123;ID&#125;</span><br><span class="line">#新建nginx容器，后台运行+名称及端口</span><br><span class="line">docker container run -d --name nginx-A -p 80:80 nginx:1.19.0</span><br><span class="line">#构建一个退出终端则自动删除的容器进行测试</span><br><span class="line">docker container run --rm -p 80:80 nginx:1.19.0</span><br><span class="line">#连接至运行的容器</span><br><span class="line">docker exec -it $ID /bin/bash</span><br><span class="line">#组合键退出当前容器</span><br><span class="line">CTRL+PQ</span><br><span class="line">#查看当前运行容器</span><br><span class="line">docker ps</span><br><span class="line">#查看所有容器，包含未运行的容器</span><br><span class="line">docker ps -a</span><br><span class="line">#停止容器运行</span><br><span class="line">docker container stop $&#123;ID&#125;</span><br><span class="line">#删除已停止的容器</span><br><span class="line">docker container rm $&#123;ID&#125;</span><br><span class="line">#批量删除容器</span><br><span class="line">docker container rm $(docker container ls -aq) -f</span><br><span class="line">#参数--restart always，当daemon重启或服务器重启后，停止的容器也会跟着被启动</span><br><span class="line">docker container run -d --name nginx-A --restart always -p 80:80 nginx:1.19.0</span><br><span class="line">#根据运行的容器保存全新的镜像到本地-a创建者，-m日志信息，-p创建镜像是暂停容器</span><br><span class="line">docker commit -a lisir -m &quot;tools-devle&quot; -p 911a04c39577 centos_devel:20200726</span><br><span class="line">#运行一个mysql5.7容器实例</span><br><span class="line">docker container run -d --name Mysql-B --restart always -p 32805:3306 -e PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin -e GOSU_VERSION=1.12 -e MYSQL_MAJOR=8.0 -e MYSQL_VERSION=8.0.21-1debian10 -e MYSQL_ROOT_PASSWORD=qaz000123 mysql:latest</span><br><span class="line">#运行一个portaine容器实例</span><br><span class="line">docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer</span><br><span class="line">#运行一个centos6.7容器实例</span><br><span class="line">docker container run -it -d --name Centos6.7-A-devel --restart always -v /soft:/soft centos_devel:20200726 /bin/bash</span><br><span class="line">#运行一个nginx1.12.1容器实例</span><br><span class="line">docker container run -d --name nginx-lisir -p 83:80 --restart always nginx112:latest</span><br><span class="line">#-i -t -d参数详解</span><br><span class="line">-i 以交互模式运行容器，通常与 -t 同时使用；</span><br><span class="line">-t 为容器重新分配一个伪输入终端，通常与 -i 同时使用；</span><br><span class="line">-d 后台运行容器，并返回容器ID；</span><br><span class="line">#使用root用户登录容器</span><br><span class="line">docker exec -ti -u root 4650e8d1bcca bash</span><br></pre></td></tr></table></figure><h2 id="3、卷操作命令总结"><a href="#3、卷操作命令总结" class="headerlink" title="3、卷操作命令总结"></a>3、卷操作命令总结</h2><ul><li><p>挂载（bind mount）</p><blockquote><p>bind mount自docker早期便开始为人们使用了，用于将host机器的目录mount到container中。但是bind mount在不同的宿主机系统时不可移植的，比如Windows和Linux的目录结构是不一样的，bind mount所指向的host目录也不能一样。这也是为什么bind mount不能出现在Dockerfile中的原因，因为这样Dockerfile就不可移植了；</p></blockquote></li><li><p>卷（volume）</p><blockquote><p>volume也是绕过container的文件系统，直接将数据写到host机器上，只是volume是被docker管理的，docker下所有的volume都在host机器上的指定目录下/var/lib/docker/volumes；</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#查看所有卷</span><br><span class="line">docker volume ls</span><br><span class="line">#创建卷</span><br><span class="line">docker volume create</span><br><span class="line">#查看卷详细信息</span><br><span class="line">docker volume inspect $&#123;VONAME&#125;</span><br><span class="line">#删除未被容器或副本使用的全部卷，谨慎使用</span><br><span class="line">docker volume prune</span><br><span class="line">#删除未被使用的指定卷</span><br><span class="line">docker volume rm</span><br><span class="line">#查看容器挂载的卷或本地目录</span><br><span class="line">docker inspect 2bfe5c73244b | grep Mounts -A 20</span><br><span class="line">#创建卷并进行挂载的案列</span><br><span class="line">[root@docker _data]# docker volume create hello</span><br><span class="line">[root@docker _data]# docker container run -it -d --name Centos6.7-A --restart always -v hello:/soft centos:centos6.7 /bin/bash</span><br><span class="line">cde91c0a176a0c2f6e5792fec16b499e083f3272f759d3a8be2b93df2d9c3e07</span><br><span class="line">[root@docker _data]# docker inspect cde91c0a176a | grep Mounts -A 20</span><br><span class="line">[root@cde91c0a176a soft]# touch 1</span><br><span class="line">[root@cde91c0a176a soft]# pwd</span><br><span class="line">/soft</span><br><span class="line">[root@cde91c0a176a soft]# exit</span><br><span class="line">[root@docker _data]# pwd</span><br><span class="line">/var/lib/docker/volumes/hello/_data</span><br><span class="line">[root@docker _data]# ls</span><br><span class="line">1</span><br><span class="line">[root@docker ~]# docker inspect cde91c0a176a | grep Mounts -A 20</span><br><span class="line">&quot;Mounts&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Type&quot;: &quot;volume&quot;,</span><br><span class="line">        &quot;Name&quot;: &quot;hello&quot;,</span><br><span class="line">        &quot;Source&quot;: &quot;/var/lib/docker/volumes/hello/_data&quot;,</span><br><span class="line">        &quot;Destination&quot;: &quot;/soft&quot;,</span><br><span class="line">        &quot;Driver&quot;: &quot;local&quot;,</span><br><span class="line">        &quot;Mode&quot;: &quot;z&quot;,</span><br><span class="line">        &quot;RW&quot;: true,</span><br><span class="line">        &quot;Propagation&quot;: &quot;&quot;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="4、docker-compose操作命令总结"><a href="#4、docker-compose操作命令总结" class="headerlink" title="4、docker-compose操作命令总结"></a>4、docker-compose操作命令总结</h2><ul><li>注意：以下操作命令需在有<code>docker-compose.yml</code>配置文件的目录下执行，否则需指定配置文件<code>-f</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#创建并启动服务</span><br><span class="line">docker-compose up</span><br><span class="line">#日志分离模式启动</span><br><span class="line">docker-compose up -d</span><br><span class="line">#停止服务</span><br><span class="line">docker-compose stop</span><br><span class="line">#启动已存在的服务</span><br><span class="line">docker-compose start</span><br><span class="line">#重启服务已存在的服务</span><br><span class="line">docker-compose restart</span><br><span class="line">#列出镜像</span><br><span class="line">docker-compose images</span><br><span class="line">#查看日志</span><br><span class="line">docker-compose logs</span><br><span class="line">docker-compose logs -f -t</span><br><span class="line">#查看进程</span><br><span class="line">docker-compose top</span><br><span class="line">#列出compose应用中各个容器的状态、命令以及网络端口</span><br><span class="line">docker-compose ps</span><br><span class="line">#查看compose版本</span><br><span class="line">docker-compose version</span><br><span class="line">#暂停服务</span><br><span class="line">docker-compose pause</span><br><span class="line">#终止暂停服务</span><br><span class="line">docker-compose unpause</span><br><span class="line">#查看配置</span><br><span class="line">docker-compose config </span><br><span class="line">#用于停止并删除运行中的应用，它会删除容器和网络，不会删除镜像和卷</span><br><span class="line">docker-compose down</span><br><span class="line">#用于删除已停止的应用，它会删除容器和网络，不会删除镜像和卷</span><br><span class="line">docker-compose rm</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Docker常用命令手册&quot;&gt;&lt;a href=&quot;#Docker常用命令手册&quot; class=&quot;headerlink&quot; title=&quot;Docker常用命令手册&quot;&gt;&lt;/a&gt;Docker常用命令手册&lt;/h1&gt;&lt;h2 id=&quot;1、docker常用基础命令&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="Docker" scheme="http://www.lisirlife.cn/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://www.lisirlife.cn/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Centos7操作系统常规设置</title>
    <link href="http://www.lisirlife.cn/2020/12/09/Centos7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B8%B8%E8%A7%84%E8%AE%BE%E7%BD%AE/"/>
    <id>http://www.lisirlife.cn/2020/12/09/Centos7操作系统常规设置/</id>
    <published>2020-12-09T00:37:00.000Z</published>
    <updated>2024-09-21T09:02:52.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Centos7操作系统常规设置"><a href="#Centos7操作系统常规设置" class="headerlink" title="Centos7操作系统常规设置"></a>Centos7操作系统常规设置</h1><h2 id="1、网络类"><a href="#1、网络类" class="headerlink" title="1、网络类"></a>1、网络类</h2><h3 id="安装ifconfig、arp等mii-tool等命令"><a href="#安装ifconfig、arp等mii-tool等命令" class="headerlink" title="安装ifconfig、arp等mii-tool等命令"></a>安装ifconfig、arp等mii-tool等命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y net-tools</span><br></pre></td></tr></table></figure><h3 id="安装图形化网络配置"><a href="#安装图形化网络配置" class="headerlink" title="安装图形化网络配置"></a>安装图形化网络配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#nmtui 命令取代了 setup中的网络配置</span><br><span class="line">yum install NetworkManager-tui -y</span><br></pre></td></tr></table></figure><h3 id="安装nslookup命令"><a href="#安装nslookup命令" class="headerlink" title="安装nslookup命令"></a>安装nslookup命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install bind-utils -y</span><br></pre></td></tr></table></figure><h3 id="网卡及网络信息"><a href="#网卡及网络信息" class="headerlink" title="网卡及网络信息"></a>网卡及网络信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ip n</span><br><span class="line">ip -s l</span><br><span class="line">ss -tlnup</span><br><span class="line">netstat -tlnup</span><br></pre></td></tr></table></figure><h3 id="查看MAC地址"><a href="#查看MAC地址" class="headerlink" title="查看MAC地址"></a>查看MAC地址</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arp -a</span><br><span class="line">ip addr show</span><br></pre></td></tr></table></figure><h3 id="查看路由"><a href="#查看路由" class="headerlink" title="查看路由"></a>查看路由</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">route -n</span><br><span class="line">ip route show</span><br><span class="line">ip -6 route show</span><br></pre></td></tr></table></figure><h2 id="2、系统类"><a href="#2、系统类" class="headerlink" title="2、系统类"></a>2、系统类</h2><h3 id="查看操作系统版本"><a href="#查看操作系统版本" class="headerlink" title="查看操作系统版本"></a>查看操作系统版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/redhat-release</span><br></pre></td></tr></table></figure><h3 id="查看操作系统内核版本"><a href="#查看操作系统内核版本" class="headerlink" title="查看操作系统内核版本"></a>查看操作系统内核版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br></pre></td></tr></table></figure><h3 id="时区和时间设置"><a href="#时区和时间设置" class="headerlink" title="时区和时间设置"></a>时区和时间设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#时区配置方法1</span><br><span class="line">timedatectl set-timezone Asia/Shanghai</span><br><span class="line">timedatectl status</span><br><span class="line">/etc/locale.conf</span><br><span class="line">#时区配置方法2</span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line">#时间配置</span><br><span class="line">yum install dnf ntpdate -y</span><br><span class="line">dnf makecache</span><br><span class="line">ntpdate ntp.aliyun.com</span><br></pre></td></tr></table></figure><h3 id="语言设置"><a href="#语言设置" class="headerlink" title="语言设置"></a>语言设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#方法1</span><br><span class="line">locale -a |grep CN</span><br><span class="line">vim /etc/locale.conf</span><br><span class="line">source /etc/locale.conf</span><br><span class="line"></span><br><span class="line">#方法2</span><br><span class="line">localectl set-locale LANG=zh_CN.utf8</span><br><span class="line">localectl status</span><br></pre></td></tr></table></figure><h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hostname</span><br></pre></td></tr></table></figure><h3 id="服务的管理和控制"><a href="#服务的管理和控制" class="headerlink" title="服务的管理和控制"></a>服务的管理和控制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#systemctl是最主要的工具。它融合service 和chkconfig的功能于一体</span><br><span class="line">systemctl --help</span><br><span class="line">#启动脚本存放目录</span><br><span class="line">/usr/lib/systemd/system</span><br></pre></td></tr></table></figure><h3 id="服务启动与停止"><a href="#服务启动与停止" class="headerlink" title="服务启动与停止"></a>服务启动与停止</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start service_name</span><br><span class="line">systemctl stop service_name</span><br><span class="line">systemctl restart/status/reload sshd</span><br></pre></td></tr></table></figure><h3 id="服务自启动"><a href="#服务自启动" class="headerlink" title="服务自启动"></a>服务自启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable service_name</span><br><span class="line">systemctl disable service_name</span><br></pre></td></tr></table></figure><h3 id="服务一览"><a href="#服务一览" class="headerlink" title="服务一览"></a>服务一览</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files</span><br><span class="line">systemctl --type service</span><br><span class="line">systemctl is-enabled sshd</span><br></pre></td></tr></table></figure><h3 id="重载服务配置文件"><a href="#重载服务配置文件" class="headerlink" title="重载服务配置文件"></a>重载服务配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h3 id="杀死服务"><a href="#杀死服务" class="headerlink" title="杀死服务"></a>杀死服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl kill --signal=9 sshd</span><br><span class="line">kill -9 &lt;PID&gt;</span><br></pre></td></tr></table></figure><h3 id="切换运行级别"><a href="#切换运行级别" class="headerlink" title="切换运行级别"></a>切换运行级别</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl isolate multi-user.target</span><br><span class="line">systemctl isolate graphical.target</span><br><span class="line">#默认</span><br><span class="line">systemctl set-default graphical.target</span><br><span class="line">systemctl set-default multi-user.target</span><br><span class="line">#当前</span><br><span class="line">systemctl get-default</span><br></pre></td></tr></table></figure><h3 id="关闭服务器"><a href="#关闭服务器" class="headerlink" title="关闭服务器"></a>关闭服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">init 0</span><br><span class="line">poweroff</span><br><span class="line">systemctl poweroff</span><br></pre></td></tr></table></figure><h3 id="重启服务器"><a href="#重启服务器" class="headerlink" title="重启服务器"></a>重启服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">init 6</span><br><span class="line">reboot</span><br><span class="line">systemctl reboot</span><br></pre></td></tr></table></figure><h3 id="单用户模式"><a href="#单用户模式" class="headerlink" title="单用户模式"></a>单用户模式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl rescue</span><br></pre></td></tr></table></figure><h3 id="查看开机时间"><a href="#查看开机时间" class="headerlink" title="查看开机时间"></a>查看开机时间</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#查看看机时间</span><br><span class="line">systemd-analyze time</span><br><span class="line">#查看占用开机时间的程序和服务</span><br><span class="line">systemd-analyze blame</span><br><span class="line">#将开机时间所占用的程序到出成图形化进行分析</span><br><span class="line">systemd-analyze plot &gt; bootime.svg</span><br></pre></td></tr></table></figure><h3 id="文件结构变化"><a href="#文件结构变化" class="headerlink" title="文件结构变化"></a>文件结构变化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">centos7的/bin, /sbin, /lib, and /lib64移到/usr下</span><br></pre></td></tr></table></figure><h3 id="通过repoquery查看rpm包中包含哪些文件"><a href="#通过repoquery查看rpm包中包含哪些文件" class="headerlink" title="通过repoquery查看rpm包中包含哪些文件"></a>通过repoquery查看rpm包中包含哪些文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install yum-utils</span><br><span class="line">repoquery -q -l &lt;包名&gt;</span><br></pre></td></tr></table></figure><h2 id="3、优化类"><a href="#3、优化类" class="headerlink" title="3、优化类"></a>3、优化类</h2><h3 id="内核参数配置文件"><a href="#内核参数配置文件" class="headerlink" title="内核参数配置文件"></a>内核参数配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#centos7采用文件夹引用方式加载配置</span><br><span class="line">/etc/sysctl.d/</span><br><span class="line">/usr/lib/sysctl.d/</span><br><span class="line">/run/sysctl.d/</span><br></pre></td></tr></table></figure><h3 id="内核参数优化"><a href="#内核参数优化" class="headerlink" title="内核参数优化"></a>内核参数优化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">#filemax</span><br><span class="line">fs.file-max = 65535</span><br><span class="line">#关闭ipv6</span><br><span class="line">net.ipv6.conf.all.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 = 1</span><br><span class="line"># 避免放大攻击</span><br><span class="line">net.ipv4.icmp_echo_ignore_broadcasts = 1</span><br><span class="line"># 开启恶意icmp错误消息保护</span><br><span class="line">net.ipv4.icmp_ignore_bogus_error_responses = 11</span><br><span class="line">#决定检查过期多久邻居条目</span><br><span class="line">net.ipv4.neigh.default.gc_stale_time=120</span><br><span class="line">#使用arp_announce / arp_ignore解决ARP映射问题</span><br><span class="line">net.ipv4.conf.default.arp_announce = 2</span><br><span class="line">net.ipv4.conf.all.arp_announce=2</span><br><span class="line">net.ipv4.conf.lo.arp_announce=2</span><br><span class="line">#处理无源路由的包</span><br><span class="line">net.ipv4.conf.all.accept_source_route = 0</span><br><span class="line">net.ipv4.conf.default.accept_source_route = 0</span><br><span class="line">kernel.sysrq = 0</span><br><span class="line">#core文件名中添加pid作为扩展名</span><br><span class="line">kernel.core_uses_pid = 1 </span><br><span class="line">#修改消息队列长度</span><br><span class="line">kernel.msgmnb = 65536</span><br><span class="line">kernel.msgmax = 65536</span><br><span class="line">#开机路由转发</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">#开启反向路径过滤</span><br><span class="line">net.ipv4.conf.all.rp_filter = 1</span><br><span class="line">net.ipv4.conf.default.rp_filter = 1</span><br><span class="line">#设置最大内存共享段大小bytes</span><br><span class="line">kernel.shmmax = 68719476736</span><br><span class="line">kernel.shmall = 4294967296</span><br><span class="line">#timewait的数量，默认180000</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 20000</span><br><span class="line">net.ipv4.tcp_sack = 1</span><br><span class="line">net.ipv4.tcp_window_scaling = 1</span><br><span class="line">net.ipv4.tcp_rmem = 4096 87380 4194304</span><br><span class="line">net.ipv4.tcp_wmem = 4096 16384 4194304</span><br><span class="line">net.core.wmem_default = 8388608</span><br><span class="line">net.core.rmem_default = 8388608</span><br><span class="line">net.core.rmem_max = 16777216</span><br><span class="line">net.core.wmem_max = 16777216</span><br><span class="line">#每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。</span><br><span class="line">net.core.netdev_max_backlog = 32768</span><br><span class="line">#记录的那些尚未收到客户端确认信息的连接请求的最大值。对于有128M内存的系统而言，缺省值是1024</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 65536</span><br><span class="line">#web应用中listen函数的backlog默认会给我们内核参数的net.core.somaxconn限制到128，而nginx定义的NGX_LISTEN_BACKLOG默认为511，所以有必要调整这个值。</span><br><span class="line">net.core.somaxconn = 32768</span><br><span class="line">#限制仅仅是为了防止简单的DoS 攻击</span><br><span class="line">net.ipv4.tcp_max_orphans = 3276800</span><br><span class="line">#未收到客户端确认信息的连接请求的最大值</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 262144</span><br><span class="line">net.ipv4.tcp_timestamps = 0</span><br><span class="line">#内核放弃建立连接之前发送SYNACK 包的数量</span><br><span class="line">net.ipv4.tcp_synack_retries = 1</span><br><span class="line">#内核放弃建立连接之前发送SYN 包的数量</span><br><span class="line">net.ipv4.tcp_syn_retries = 1</span><br><span class="line">#启用timewait 快速回收</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">#开启重用。允许将TIME-WAIT sockets 重新用于新的TCP 连接</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_mem = 94500000 915000000 927000000</span><br><span class="line">net.ipv4.tcp_fin_timeout = 1</span><br><span class="line"># 开启SYN洪水攻击保护(防范少量SYN攻击)</span><br><span class="line">net.ipv4.tcp_syncookies = 1 </span><br><span class="line">#允许系统打开的端口范围</span><br><span class="line">net.ipv4.ip_local_port_range = 32768 61000</span><br></pre></td></tr></table></figure><h3 id="开机启动脚本需加X权限"><a href="#开机启动脚本需加X权限" class="headerlink" title="开机启动脚本需加X权限"></a>开机启动脚本需加X权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure><h3 id="安装系统基本管理工具"><a href="#安装系统基本管理工具" class="headerlink" title="安装系统基本管理工具"></a>安装系统基本管理工具</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall &quot;Development Tools&quot; --setopt=group_package_types=mandatory,default,optional</span><br><span class="line">yum install tree net-tools bind-utils tree sysstat NetworkManager-tui ntp iftop vim telnet wget nethogs htop glances dstat traceroute lrzsz goaccess ntpdate dos2unix openssl-devel tcpdump lrzsz fio nss curl ca-certificates socat -y</span><br></pre></td></tr></table></figure><h3 id="优化SSH相关配置"><a href="#优化SSH相关配置" class="headerlink" title="优化SSH相关配置"></a>优化SSH相关配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">#AddressFamily any</span><br><span class="line">AddressFamily inet</span><br><span class="line">#注:(inet is ipv4 only; inet6 is ipv6 only)</span><br><span class="line"></span><br><span class="line">Port 60002</span><br><span class="line">#禁止root用户登录，根据需求设定</span><br><span class="line"># PermitRootLogin no</span><br><span class="line">#禁止空密码登录</span><br><span class="line">PermitEmptyPasswords no</span><br><span class="line">#不使用DNS解析，可以加快访问速度</span><br><span class="line">UseDNS no</span><br><span class="line"># 是一套类似Kerberos 5的通用网络安全系统接口。该接口是对各种不同的客户端服务器安全机制的封装，以消除安全接口的不同，降低编程难度。但该接口在目标机器无域名解析时会有问题</span><br><span class="line">GSSAPIAuthentication no</span><br></pre></td></tr></table></figure><h3 id="关闭防火强和setlinux"><a href="#关闭防火强和setlinux" class="headerlink" title="关闭防火强和setlinux"></a>关闭防火强和setlinux</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#停止防火墙服务并取消开机自启</span><br><span class="line">systemctl disable --now firewalld</span><br><span class="line"></span><br><span class="line">#关闭selinux</span><br><span class="line">setenforce 0</span><br><span class="line">sed -i &apos;s#SELINUX=enforcing#SELINUX=disabled#g&apos; /etc/selinux/config</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Centos7操作系统常规设置&quot;&gt;&lt;a href=&quot;#Centos7操作系统常规设置&quot; class=&quot;headerlink&quot; title=&quot;Centos7操作系统常规设置&quot;&gt;&lt;/a&gt;Centos7操作系统常规设置&lt;/h1&gt;&lt;h2 id=&quot;1、网络类&quot;&gt;&lt;a hre
      
    
    </summary>
    
      <category term="Linux基础" scheme="http://www.lisirlife.cn/categories/Linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Linux基础" scheme="http://www.lisirlife.cn/tags/Linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>WMware ESXI磁盘扩容手册</title>
    <link href="http://www.lisirlife.cn/2020/12/08/WMware%20ESXI%E7%A3%81%E7%9B%98%E6%89%A9%E5%AE%B9%E6%89%8B%E5%86%8C/"/>
    <id>http://www.lisirlife.cn/2020/12/08/WMware ESXI磁盘扩容手册/</id>
    <published>2020-12-08T07:37:00.000Z</published>
    <updated>2024-09-21T09:02:52.403Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WMware-ESXI磁盘扩容手册"><a href="#WMware-ESXI磁盘扩容手册" class="headerlink" title="WMware ESXI磁盘扩容手册"></a>WMware ESXI磁盘扩容手册</h1><h2 id="1、磁盘扩容需知"><a href="#1、磁盘扩容需知" class="headerlink" title="1、磁盘扩容需知"></a>1、磁盘扩容需知</h2><ul><li>任何类型的（精简置备、厚置备）磁盘，都无法在ESXI控制台缩减容量；</li><li>Linux虚机在未使用的lvm的分区格式下，可以实现磁盘在线扩容及新增硬盘，但无法合并分区，只能单独挂载目录使用；</li><li>Linux虚机在使用了lvm的分区格式下，可以实现磁盘在线扩容及新增硬盘，通过lvm命令，在线扩容指定分区；</li><li>虚拟机磁盘扩容时，任何时候都可以热添加硬盘，不受免费授权影响；</li><li>当ESXI宿主机磁盘空间不足时，可以通过ESXI控制台在线扩充容量，不需要停机操作，前提是已有多余的硬盘在服务器上；</li></ul><h2 id="2、Linux虚拟机磁盘扩容"><a href="#2、Linux虚拟机磁盘扩容" class="headerlink" title="2、Linux虚拟机磁盘扩容"></a>2、Linux虚拟机磁盘扩容</h2><blockquote><p>提示：由于Linux特殊的文件系统，若要对指定的分区（挂载目录）进行扩容，必须在首次安装系统的时候，使用LVM分区格式，否则不支持动态扩缩容；</p></blockquote><h3 id="2-1、实验环境"><a href="#2-1、实验环境" class="headerlink" title="2.1、实验环境"></a>2.1、实验环境</h3><table><thead><tr><th>平台</th><th>IP</th><th>磁盘类型</th><th>是否使用LVM</th></tr></thead><tbody><tr><td>CentOS 7.8 64Bit</td><td>192.168.8.164</td><td>精简置备</td><td>是</td><td></td></tr></tbody></table><h3 id="2-2、单硬盘在线扩容"><a href="#2-2、单硬盘在线扩容" class="headerlink" title="2.2、单硬盘在线扩容"></a>2.2、单硬盘在线扩容</h3><ul><li><strong>选择要扩容的虚拟机，点击编辑</strong><br><img src="http://static.zybuluo.com/a807257775/b2l4xgte09lkzm220tbqrwav/image_1ep3hembv1pnc3ksbkgpf5spk7j.png" alt="image_1ep3hembv1pnc3ksbkgpf5spk7j.png-122.5kB"><br><img src="http://static.zybuluo.com/a807257775/qyta721qx5z88zprqziurrsy/image_1ep3hhgqnrjs10rs1j0qee6bpr80.png" alt="image_1ep3hhgqnrjs10rs1j0qee6bpr80.png-106.5kB"><br><img src="http://static.zybuluo.com/a807257775/8mrlcjj4dchvoo55999frswy/image_1ep3hj289kbn1d9m1vgan4k11br8d.png" alt="image_1ep3hj289kbn1d9m1vgan4k11br8d.png-126.9kB"></li><li><strong>需执行命令对硬盘容量进行刷新，否则需要重启服务器，才可以看到变化</strong><br><img src="http://static.zybuluo.com/a807257775/xqi3s05b23vwnk8e3rgvhc2k/image_1ep3hnolmvb8158u1buh8a211lr8q.png" alt="image_1ep3hnolmvb8158u1buh8a211lr8q.png-61.7kB"></li><li><strong>使用fdisk命令对/dev/sda磁盘进行lvm分区</strong><br><img src="http://static.zybuluo.com/a807257775/qmm7h2i4j373h4koj3kr6l68/image_1ep58lbinle1182j1ste1eqc1j0vm.png" alt="image_1ep58lbinle1182j1ste1eqc1j0vm.png-81kB"></li><li><strong>执行fdisk查看磁盘分区状态</strong><br><img src="http://static.zybuluo.com/a807257775/nf7ez3v3siz6zqydegma8x0j/image_1ep3i9pmi15tnqdj11l618mm187ua1.png" alt="image_1ep3i9pmi15tnqdj11l618mm187ua1.png-57kB"></li><li><strong>此时系统并未出现/dev/sda3，执行partprobe命令后刷新分区表</strong><br><img src="http://static.zybuluo.com/a807257775/981epe624jo8k83fa9zbgn18/image_1ep562k9hcuj74ig7uq7vbv19.png" alt="image_1ep562k9hcuj74ig7uq7vbv19.png-31.9kB"></li><li><strong>创建pv物理卷</strong><br><img src="http://static.zybuluo.com/a807257775/tx6cr3aeah85722cdczmq7z6/image_1ep5929h3n5gadc2b711h7kao13.png" alt="image_1ep5929h3n5gadc2b711h7kao13.png-39.4kB"></li><li><strong>将新增的pv添加至vg卷组</strong><br><img src="http://static.zybuluo.com/a807257775/awh6vdf1pyh82d83vweoo7y0/image_1ep59cja6a705hk1jcm19nt9q51g.png" alt="image_1ep59cja6a705hk1jcm19nt9q51g.png-41.1kB"></li><li><strong>扩展lv逻辑卷</strong><br><img src="http://static.zybuluo.com/a807257775/ez9voyhnwnxi02uru0x9ji2k/image_1ep59vpklms3pamrkf1dqj15gj1t.png" alt="image_1ep59vpklms3pamrkf1dqj15gj1t.png-68.2kB"></li><li><strong>重新丈量磁盘空间</strong><br><img src="http://static.zybuluo.com/a807257775/dper8ppofnbgjr3t32mpl4kf/image_1ep5akc4b1c5t9kolff15ttfq82a.png" alt="image_1ep5akc4b1c5t9kolff15ttfq82a.png-72.2kB"></li></ul><h2 id="3、Win虚拟机磁盘扩容"><a href="#3、Win虚拟机磁盘扩容" class="headerlink" title="3、Win虚拟机磁盘扩容"></a>3、Win虚拟机磁盘扩容</h2><h3 id="3-1、实验环境"><a href="#3-1、实验环境" class="headerlink" title="3.1、实验环境"></a>3.1、实验环境</h3><table><thead><tr><th>平台</th><th>IP</th><th>磁盘类型</th></tr></thead><tbody><tr><td>Winodws 2012 R2 DataCenter</td><td>192.168.8.165</td><td>基本磁盘</td><td></td></tr></tbody></table><h3 id="3-2、单硬盘在线扩容"><a href="#3-2、单硬盘在线扩容" class="headerlink" title="3.2、单硬盘在线扩容"></a>3.2、单硬盘在线扩容</h3><ul><li><strong>通过esxi web控制台选中要扩容的主机，选择编辑</strong><br><img src="http://static.zybuluo.com/a807257775/klvj21ytoipxf5phq1apgd3k/image_1ep3fmsnp184cr9nqhq1pb514ocm.png" alt="image_1ep3fmsnp184cr9nqhq1pb514ocm.png-115.6kB"></li><li><strong>选择要扩容的应用，输入扩充后的容量，保存即可</strong><br><img src="http://static.zybuluo.com/a807257775/f0bfqtc2cwh2uwz6harlcpgg/image_1ep3fpnhj17im3h5nbms4o2o613.png" alt="image_1ep3fpnhj17im3h5nbms4o2o613.png-103.6kB"></li><li><strong>左上角提示已成功配置虚机win2012，证明物理大小已扩充成功</strong><br><img src="http://static.zybuluo.com/a807257775/nbvqiz17uvnmnj9wzmkfw08d/image_1ep3fqemi1igfsb3h13r01mul1g.png" alt="image_1ep3fqemi1igfsb3h13r01mul1g.png-121.4kB"></li><li><strong>通过控制台或mstsc连接虚拟机，对硬盘逻辑空间进行扩容</strong><br><img src="http://static.zybuluo.com/a807257775/ijfapzjg2t2aq7qmi4ne9mis/image_1ep3fuk3j9q018lo13291c4gp3o1t.png" alt="image_1ep3fuk3j9q018lo13291c4gp3o1t.png-122.7kB"></li><li><strong>选择要扩容的分区，右键扩展卷</strong><br><img src="http://static.zybuluo.com/a807257775/yfggs87lknxt5o1x6cc6d4y0/image_1ep3g06ng1b451crj1f6v16ctqeq2a.png" alt="image_1ep3g06ng1b451crj1f6v16ctqeq2a.png-134.8kB"><br><img src="http://static.zybuluo.com/a807257775/k5vxfhmih4w8sbbkt3rcrhv1/image_1ep3g0fuv1qoqt6vsjvkp611222n.png" alt="image_1ep3g0fuv1qoqt6vsjvkp611222n.png-175.5kB"><br><img src="http://static.zybuluo.com/a807257775/mtiw7m6lcyzm5ctm8jmg2z16/image_1ep3g10m1c41iqkorfrmo4kp34.png" alt="image_1ep3g10m1c41iqkorfrmo4kp34.png-95.7kB"><br><img src="http://static.zybuluo.com/a807257775/h9sdk3czjqlek2mn9sx44kg6/image_1ep3g16at176tdagefmeiv7m43h.png" alt="image_1ep3g16at176tdagefmeiv7m43h.png-170.4kB"></li><li><strong>完成容量扩容，全程无需重启即可生效</strong><br><img src="http://static.zybuluo.com/a807257775/8hbp02ci83ipokjkdl2dqpkl/image_1ep3g2bv65bb19i5lc91aoakej3u.png" alt="image_1ep3g2bv65bb19i5lc91aoakej3u.png-120.6kB"></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;WMware-ESXI磁盘扩容手册&quot;&gt;&lt;a href=&quot;#WMware-ESXI磁盘扩容手册&quot; class=&quot;headerlink&quot; title=&quot;WMware ESXI磁盘扩容手册&quot;&gt;&lt;/a&gt;WMware ESXI磁盘扩容手册&lt;/h1&gt;&lt;h2 id=&quot;1、磁盘扩
      
    
    </summary>
    
      <category term="虚拟化技术" scheme="http://www.lisirlife.cn/categories/%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="虚拟化技术" scheme="http://www.lisirlife.cn/tags/%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hyper-V虚拟机迁移至ESXI操作手册</title>
    <link href="http://www.lisirlife.cn/2020/12/05/Hyper-V%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%BF%81%E7%A7%BB%E8%87%B3ESXI%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/"/>
    <id>http://www.lisirlife.cn/2020/12/05/Hyper-V虚拟机迁移至ESXI操作手册/</id>
    <published>2020-12-05T07:37:00.000Z</published>
    <updated>2024-09-21T09:02:52.388Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hyper-V虚拟机迁移至ESXI操作手册"><a href="#Hyper-V虚拟机迁移至ESXI操作手册" class="headerlink" title="Hyper-V虚拟机迁移至ESXI操作手册"></a>Hyper-V虚拟机迁移至ESXI操作手册</h1><h2 id="1、VMware-Converter工具介绍"><a href="#1、VMware-Converter工具介绍" class="headerlink" title="1、VMware-Converter工具介绍"></a>1、VMware-Converter工具介绍</h2><ul><li>VMware vCenter Converter 使用户可以快速、简单、轻松地实现基于 Microsoft Windows 的物理机转换和将第三方映像格式转换为 VMware 虚拟机。它还可以在两个 VMware 平台之间转换虚拟机</li><li>新版本融合了之前两个独立的工具：VMware P2V Assistant和Virtual Machine Importer。 除了物理——虚拟转化功能外，Converter 3还可以将微软Virtual Server/Virtual PC以及赛门铁克Backup Exec System Recovery等第三方VM格式转化为VMware兼容映像</li><li>Converter工具可以将物理机转化为WMware支持的虚拟机，也可将远程主机（物理\虚拟）直接迁移至ESXI，也可以将Hyper-V下关闭的主机保存为VMX文件，也可热迁移至ESXI目标服务器；<ul><li>下载地址：<a href="https://dl.filehorse.com/win/developer-tools/vmware-vcenter-converter/VMware-converter-en-6.2.0-8466193.exe?st=wf9V6bSKMI7z1LXnr5aL5g&amp;e=1607047164&amp;fn=VMware-converter-en-6.2.0-8466193.exe" target="_blank" rel="noopener">VMware-converter-en-6.2.0-8466193.exe</a></li></ul></li></ul><h2 id="2、VMware-Converter工具使用"><a href="#2、VMware-Converter工具使用" class="headerlink" title="2、VMware-Converter工具使用"></a>2、VMware-Converter工具使用</h2><blockquote><p>提示：安装过程一路下一步，启动时用右键管理员运行即可，如出现导出报错，请检查三个服务是否正常运行:<code>vmware-converter-agent</code>、<code>vmware-converter-server</code>、<code>vmware-converter-worker</code>。</p></blockquote><h3 id="2-1、转换虚拟机"><a href="#2-1、转换虚拟机" class="headerlink" title="2.1、转换虚拟机"></a>2.1、转换虚拟机</h3><p><img src="http://static.zybuluo.com/a807257775/2hivf6mwz67y9b1s0dex5znh/image_1eojsd88psn8a701rus12hj1n2k13.png" alt="image_1eojsd88psn8a701rus12hj1n2k13.png-37kB"></p><h3 id="2-2、连接Hyper-V服务器"><a href="#2-2、连接Hyper-V服务器" class="headerlink" title="2.2、连接Hyper-V服务器"></a>2.2、连接Hyper-V服务器</h3><p><img src="http://static.zybuluo.com/a807257775/6ha47bnrih5grj1i1pic8w3i/image_1eojsefdo1nio1qf1uot77614va1g.png" alt="image_1eojsefdo1nio1qf1uot77614va1g.png-25.5kB"><br><img src="http://static.zybuluo.com/a807257775/nl6uhrairsjci9nb3w2n4g0q/image_1eojses2a1l6id24hu51go61im01t.png" alt="image_1eojses2a1l6id24hu51go61im01t.png-15.8kB"></p><h3 id="2-2、选中要迁移的主机点击NEXT"><a href="#2-2、选中要迁移的主机点击NEXT" class="headerlink" title="2.2、选中要迁移的主机点击NEXT"></a>2.2、选中要迁移的主机点击NEXT</h3><p><img src="http://static.zybuluo.com/a807257775/6ndhtoyftvwurt28aiienj1w/image_1eojsg31f17mp1ddq7cvpig97j2a.png" alt="image_1eojsg31f17mp1ddq7cvpig97j2a.png-24.9kB"></p><h3 id="2-3、选中导出类型、版本、目标地址等信息"><a href="#2-3、选中导出类型、版本、目标地址等信息" class="headerlink" title="2.3、选中导出类型、版本、目标地址等信息"></a>2.3、选中导出类型、版本、目标地址等信息</h3><p><img src="http://static.zybuluo.com/a807257775/adq3apyasmxl76977jlyqptp/image_1eojso2gpunc1gj31eiqakk1tms2n.png" alt="image_1eojso2gpunc1gj31eiqakk1tms2n.png-54kB"></p><h3 id="2-4、可配置相关虚拟机参数"><a href="#2-4、可配置相关虚拟机参数" class="headerlink" title="2.4、可配置相关虚拟机参数"></a>2.4、可配置相关虚拟机参数</h3><p><img src="http://static.zybuluo.com/a807257775/c5arbhcac2ia0z0x2gt5ev9d/image_1eojsqsjp1dtr158em7u1mh5e6f3h.png" alt="image_1eojsqsjp1dtr158em7u1mh5e6f3h.png-37.4kB"></p><h3 id="2-5、开始导出"><a href="#2-5、开始导出" class="headerlink" title="2.5、开始导出"></a>2.5、开始导出</h3><p><img src="http://static.zybuluo.com/a807257775/ckioxjdwavj1tjvttqfr0uju/image_1eojsrgvevp819c34q5kpe17bv3u.png" alt="image_1eojsrgvevp819c34q5kpe17bv3u.png-51.2kB"></p><h3 id="2-6、完成导出"><a href="#2-6、完成导出" class="headerlink" title="2.6、完成导出"></a>2.6、完成导出</h3><p><img src="http://static.zybuluo.com/a807257775/0qflyywqwenigdp2ilhp68uv/image_1eojsshbj1i561pokg1orghnp4o.png" alt="image_1eojsshbj1i561pokg1orghnp4o.png-39.7kB"></p><h2 id="3、利用Ovftool工具转换ESXI支持的格式"><a href="#3、利用Ovftool工具转换ESXI支持的格式" class="headerlink" title="3、利用Ovftool工具转换ESXI支持的格式"></a>3、利用Ovftool工具转换ESXI支持的格式</h2><blockquote><p>提示：此工具在安装vmware workstation后，就默认在安装目录下，用cmd的方式进行格式转换；</p></blockquote><h3 id="3-1、用cmd切换至ovftool工具目录"><a href="#3-1、用cmd切换至ovftool工具目录" class="headerlink" title="3.1、用cmd切换至ovftool工具目录"></a>3.1、用cmd切换至ovftool工具目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#切换至ovftool目录</span><br><span class="line">cd /d D:\Program Files (x86)\VMware\VMware Workstation\OVFTool</span><br></pre></td></tr></table></figure><h3 id="3-2、执行转换命令"><a href="#3-2、执行转换命令" class="headerlink" title="3.2、执行转换命令"></a>3.2、执行转换命令</h3><p><img src="http://static.zybuluo.com/a807257775/rznj8byvww27crov0nxk833v/image_1eojt80uk1kdu11t4mhb1r1obqc55.png" alt="image_1eojt80uk1kdu11t4mhb1r1obqc55.png-21kB"></p><h3 id="3-3、转换完成后的目录结构"><a href="#3-3、转换完成后的目录结构" class="headerlink" title="3.3、转换完成后的目录结构"></a>3.3、转换完成后的目录结构</h3><p><img src="http://static.zybuluo.com/a807257775/zwnf01rt9za7b7r4yg90se83/image_1eojtaegv14k64no7mv12bo1qgd5i.png" alt="image_1eojtaegv14k64no7mv12bo1qgd5i.png-20.4kB"></p><h2 id="4、导入至esxi服务器"><a href="#4、导入至esxi服务器" class="headerlink" title="4、导入至esxi服务器"></a>4、导入至esxi服务器</h2><blockquote><p>提示：这里使用的是esxi6.7版本，导入了enterprise plus版本的key</p></blockquote><ul><li>新建/注册服务器<br><img src="http://static.zybuluo.com/a807257775/t5f38wjwk72pjp0v02arzl3e/image_1eojti5j31jjeduc1uji7m31jlg5v.png" alt="image_1eojti5j31jjeduc1uji7m31jlg5v.png-209.7kB"></li><li>从OVF或OVA文件部署虚拟机<br><img src="http://static.zybuluo.com/a807257775/w6bcpb5as2j2y1g4j45z4bs8/image_1eojv7j501d9rpo819qb1hnv1c069.png" alt="image_1eojv7j501d9rpo819qb1hnv1c069.png-59.8kB"></li><li>输入虚拟机名称，选择OVF及VMDX、VMDK文件<br><img src="http://static.zybuluo.com/a807257775/pzqg7fsyov1l8l3tluqakzlf/image_1eojv8orc1bbv1foc1lagqt6l6m.png" alt="image_1eojv8orc1bbv1foc1lagqt6l6m.png-67.1kB"></li><li>下一步完成即可<br><img src="http://static.zybuluo.com/a807257775/pow2ngc7mayivd0o6mud28h0/image_1eojv9b4l1pvh1pvg1jqs1hu41rdi13.png" alt="image_1eojv9b4l1pvh1pvg1jqs1hu41rdi13.png-70kB"></li><li>导入成功确认服务器连接是否正常<br><img src="http://static.zybuluo.com/a807257775/i46eesav1fqsebla367bjfu4/image_1eojvbgm7dkljco1tij1pbfuf41g.png" alt="image_1eojvbgm7dkljco1tij1pbfuf41g.png-124.6kB"></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hyper-V虚拟机迁移至ESXI操作手册&quot;&gt;&lt;a href=&quot;#Hyper-V虚拟机迁移至ESXI操作手册&quot; class=&quot;headerlink&quot; title=&quot;Hyper-V虚拟机迁移至ESXI操作手册&quot;&gt;&lt;/a&gt;Hyper-V虚拟机迁移至ESXI操作手册&lt;/
      
    
    </summary>
    
      <category term="虚拟化技术" scheme="http://www.lisirlife.cn/categories/%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="虚拟化技术" scheme="http://www.lisirlife.cn/tags/%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Weblogic 12c部署手册</title>
    <link href="http://www.lisirlife.cn/2020/12/04/Weblogic%2012c%E9%83%A8%E7%BD%B2%E6%89%8B%E5%86%8C/"/>
    <id>http://www.lisirlife.cn/2020/12/04/Weblogic 12c部署手册/</id>
    <published>2020-12-04T07:37:00.000Z</published>
    <updated>2024-09-21T09:02:52.403Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Weblogic-12c部署手册"><a href="#Weblogic-12c部署手册" class="headerlink" title="Weblogic 12c部署手册"></a>Weblogic 12c部署手册</h1><h2 id="1、实验环境："><a href="#1、实验环境：" class="headerlink" title="1、实验环境："></a>1、实验环境：</h2><table><thead><tr><th>平台</th><th>IP</th><th>用途 </th></tr></thead><tbody><tr><td>CentOS 7.8 64Bit</td><td>192.168.x.x</td><td>weblogic12c+oracle11gr2</td></tr></tbody></table><h2 id="2、服务器环境配置（优化这里不提）"><a href="#2、服务器环境配置（优化这里不提）" class="headerlink" title="2、服务器环境配置（优化这里不提）"></a>2、服务器环境配置（优化这里不提）</h2><h3 id="2-1、安装jdk1-8"><a href="#2-1、安装jdk1-8" class="headerlink" title="2.1、安装jdk1.8"></a>2.1、安装jdk1.8</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#卸载系统自带的openjdk</span><br><span class="line">[root@aupserver soft]# yum remove java* </span><br><span class="line">[root@aupserver soft]# mkdir -p /usr/java/</span><br><span class="line">[root@aupserver soft]# tar xzvf jdk-8u131-linux-x64.tar.gz -C /usr/java/</span><br><span class="line">[root@aupserver soft]# ln -s /usr/java/jdk1.8.0_131/bin/java /usr/sbin/</span><br><span class="line">[root@aupserver soft]# java -version</span><br><span class="line">#配置root用户环境变量</span><br><span class="line">[root@aupserver soft]# vim /etc/profile</span><br><span class="line">JAVA_HOME=/usr/java/jdk1.8.0_131</span><br><span class="line">export JAVA_HOME</span><br><span class="line">CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export CLASSPATH</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH:$HOME/bin:$JAVA_HOME/bin</span><br><span class="line">export PATH</span><br><span class="line">export LANG=zh_CN.UTF-8</span><br><span class="line">export CONFIG_JVM_ARGS=&apos;-Djava.security.egd=file:/dev/urandom&apos;</span><br></pre></td></tr></table></figure><h3 id="2-2、下载weblogic12c安装包"><a href="#2-2、下载weblogic12c安装包" class="headerlink" title="2.2、下载weblogic12c安装包"></a>2.2、下载weblogic12c安装包</h3><ul><li>在下载页面选择 Generic (800 MB) ：<a href="http://www.oracle.com/technetwork/middleware/weblogic/downloads/wls-for-dev-1703574.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/middleware/weblogic/downloads/wls-for-dev-1703574.html</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@aupserver soft]# pwd</span><br><span class="line">/soft</span><br><span class="line">[root@aupserver soft]# ls fmw_12.2.1.4.0_wls_Disk1_1of1.zip </span><br><span class="line">fmw_12.2.1.4.0_wls_Disk1_1of1.zip</span><br><span class="line">[root@aupserver soft]# unzip fmw_12.2.1.4.0_wls_Disk1_1of1.zip -d /soft</span><br></pre></td></tr></table></figure><h3 id="2-3、创建weblogic用户"><a href="#2-3、创建weblogic用户" class="headerlink" title="2.3、创建weblogic用户"></a>2.3、创建weblogic用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@aupserver soft]# useradd weblogic</span><br><span class="line">[root@aupserver soft]# passwd weblogic</span><br></pre></td></tr></table></figure><h3 id="2-4、采用静默模式安装（需创建响应文件）"><a href="#2-4、采用静默模式安装（需创建响应文件）" class="headerlink" title="2.4、采用静默模式安装（需创建响应文件）"></a>2.4、采用静默模式安装（需创建响应文件）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@aupserver soft]# su weblogic</span><br><span class="line"></span><br><span class="line">#创建响应文件</span><br><span class="line">[weblogic@aupserver soft]# vim /home/weblogic/wls.rsp</span><br><span class="line">#My Oracle Support User Name</span><br><span class="line">MOS_USERNAME=</span><br><span class="line">#My Oracle Support Password</span><br><span class="line">MOS_PASSWORD=&lt;SECURE VALUE&gt;</span><br><span class="line">#If the Software updates are already downloaded and available on your local system, then specify the path to the directory where these patches are available and set SPECIFY_DOWNLOAD_LOCATION to true</span><br><span class="line">AUTO_UPDATES_LOCATION=</span><br><span class="line">#Proxy Server Name to connect to My Oracle Support</span><br><span class="line">SOFTWARE_UPDATES_PROXY_SERVER=</span><br><span class="line">#Proxy Server Port</span><br><span class="line">SOFTWARE_UPDATES_PROXY_PORT=</span><br><span class="line">#Proxy Server Username</span><br><span class="line">SOFTWARE_UPDATES_PROXY_USER=</span><br><span class="line">#Proxy Server Password</span><br><span class="line">SOFTWARE_UPDATES_PROXY_PASSWORD=&lt;SECURE VALUE&gt;</span><br><span class="line">#The oracle home location. This can be an existing Oracle Home or a new Oracle Home</span><br><span class="line">ORACLE_HOME=/home/weblogic/Oracle/Middleware/Oracle_Home</span><br><span class="line">#The federated oracle home locations. This should be an existing Oracle Home. Multiple values can be provided as comma seperated values</span><br><span class="line">FEDERATED_ORACLE_HOMES=</span><br><span class="line">#Set this variable value to the Installation Type selected. e.g. WebLogic Server, Coherence, Complete with Examples.</span><br><span class="line">INSTALL_TYPE=WebLogic Server</span><br><span class="line"></span><br><span class="line">#创建初始化环境文件</span><br><span class="line">[weblogic@aupserver soft]# vim /home/weblogic/oraInst.loc</span><br><span class="line">inst_group=weblogic</span><br><span class="line">inventory_loc=/home/weblogic/oraInventory</span><br><span class="line"></span><br><span class="line">#开始安装</span><br><span class="line">[weblogic@aupserver soft]# java -jar fmw_12.2.1.4.0_wls.jar -silent -responseFile /home/weblogic/wls.rsp -invPtrLoc /home/weblogic/oraInst.lo</span><br></pre></td></tr></table></figure><h3 id="2-5、创建域"><a href="#2-5、创建域" class="headerlink" title="2.5、创建域"></a>2.5、创建域</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[weblogic@aupserver soft]# mkdir -p /home/weblogic/Oracle/Middleware/Oracle_Home/user_projects/domains/base_domain</span><br><span class="line">[weblogic@aupserver soft]# cd /home/weblogic/Oracle/Middleware/Oracle_Home/user_projects/domains/base_domain</span><br><span class="line">[weblogic@aupserver base_domain]# cp /home/weblogic/Oracle/Middleware/Oracle_Home/wlserver/common/templates/scripts/wlst/basicWLSDomain.py ./base_domain.py</span><br></pre></td></tr></table></figure><h3 id="2-6、修改建域脚本"><a href="#2-6、修改建域脚本" class="headerlink" title="2.6、修改建域脚本"></a>2.6、修改建域脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#修改weblogic控制台用户密码</span><br><span class="line">[weblogic@aupserver base_domain]# vim base_domain.py</span><br><span class="line">#=======================================================================================</span><br><span class="line"># Define the user password for weblogic.</span><br><span class="line">#=======================================================================================</span><br><span class="line"></span><br><span class="line">cd(&apos;/&apos;)</span><br><span class="line">cd(&apos;Security/base_domain/User/weblogic&apos;)</span><br><span class="line"># Please set password here before using this script, e.g. cmo.setPassword(&apos;value&apos;)</span><br><span class="line">cmo.setPassword(&apos;qaz000123&apos;)</span><br><span class="line"></span><br><span class="line">..................中间省略</span><br><span class="line"></span><br><span class="line">#修改weblogic的domains路径</span><br><span class="line">#=======================================================================================</span><br><span class="line"># Write the domain and close the domain template.</span><br><span class="line">#=======================================================================================</span><br><span class="line"></span><br><span class="line">setOption(&apos;OverwriteDomain&apos;, &apos;true&apos;)</span><br><span class="line">writeDomain(&apos;/home/weblogic/Oracle/Middleware/Oracle_Home/user_projects/domains/base_domain&apos;)</span><br><span class="line">closeTemplate()</span><br></pre></td></tr></table></figure><h3 id="2-7、执行脚本"><a href="#2-7、执行脚本" class="headerlink" title="2.7、执行脚本"></a>2.7、执行脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[weblogic@aupserver base_domain]# /home/weblogic/Oracle/Middleware/Oracle_Home/oracle_common/common/bin/wlst.sh base_domain.py</span><br></pre></td></tr></table></figure><h3 id="2-8、启动和停止weblogic服务"><a href="#2-8、启动和停止weblogic服务" class="headerlink" title="2.8、启动和停止weblogic服务"></a>2.8、启动和停止weblogic服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[weblogic@aupserver base_domain]# /home/weblogic/Oracle/Middleware/Oracle_Home/user_projects/domains/base_domain</span><br><span class="line">[weblogic@aupserver base_domain]# ./bin/startWebLogic.sh</span><br><span class="line">[weblogic@aupserver base_domain]# ./bin/stopWebLogic.sh</span><br></pre></td></tr></table></figure><h3 id="2-9、免密启动和后台运行"><a href="#2-9、免密启动和后台运行" class="headerlink" title="2.9、免密启动和后台运行"></a>2.9、免密启动和后台运行</h3><ul><li>启动weblogic需要输入用户名密码，如果不想每次都输入用户名密码，可以新建文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[weblogic@aupserver security]$ pwd</span><br><span class="line">/home/weblogic/Oracle/Middleware/Oracle_Home/user_projects/domains/base_domain/servers/AdminServer/security</span><br><span class="line">[weblogic@aupserver security]$ ls</span><br><span class="line">boot.properties  boot.properties_20201030</span><br><span class="line">[weblogic@aupserver security]$ cat boot.properties</span><br><span class="line"># Generated by Configuration Wizard on Thu Oct 29 19:26:47 CST 2020</span><br><span class="line">#内容如下（用户名密码填写安装domain时设置的用户名密码）</span><br><span class="line">username=weblogic</span><br><span class="line">password=qaz000123</span><br><span class="line"></span><br><span class="line">#直接运行./startWebLogic.sh是前台运行，关闭窗口后服务会自动停止。如果希望后台运行，关闭窗口后服务继续运行，可以使用以下命令</span><br><span class="line">[weblogic@aupserver bin]$ nohup ./startWebLogic.sh &amp;</span><br><span class="line">#该命令会创建nohup.out文件，原本控制台的输出内容会写入到这个文件里面</span><br></pre></td></tr></table></figure></li></ul><h2 id="3、新建SRV及免密配置"><a href="#3、新建SRV及免密配置" class="headerlink" title="3、新建SRV及免密配置"></a>3、新建SRV及免密配置</h2><ul><li><p>图形化创建服务器<br><img src="http://static.zybuluo.com/a807257775/blnq8u8ygafy9jiru2mpo4bh/image_1els39tqh1ddgmeg1aar1ht12me9.png" alt="image_1els39tqh1ddgmeg1aar1ht12me9.png-116.6kB"><br><img src="http://static.zybuluo.com/a807257775/tv9chanmb92dnzcfsyo68g0w/image_1els3h89mddmeqrsf111811khf16.png" alt="image_1els3h89mddmeqrsf111811khf16.png-98.9kB"></p></li><li><p>首次启动服务器回要求输入web控制台密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#启动新server服务器需使用startManagedWebLogic脚本来执行</span><br><span class="line">[weblogic@aupserver bin]$ pwd</span><br><span class="line">/home/weblogic/Oracle/Middleware/Oracle_Home/user_projects/domains/base_domain/bin</span><br><span class="line">[weblogic@aupserver bin]$ ./startManagedWebLogic.sh uap-managerr http://aupserver:7001</span><br><span class="line">[weblogic@aupserver bin]$ ./startManagedWebLogic.sh uap-server http://aupserver:7001</span><br></pre></td></tr></table></figure></li><li><p>配置免密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[weblogic@aupserver security]$ pwd</span><br><span class="line">/home/weblogic/Oracle/Middleware/Oracle_Home/user_projects/domains/base_domain/servers/uap-server/security</span><br><span class="line">[weblogic@aupserver security]$ cat boot.properties</span><br><span class="line">#Fri Oct 30 09:12:31 CST 2020</span><br><span class="line">password=&#123;AES256&#125;FYgyVDNhKPqyTy+dTjnDeV0XVhnFR3tfBXhceKMCA2I\=</span><br><span class="line">username=&#123;AES256&#125;yya+mtqt3V8t2G3oltxpsb3AEgxyUJhCAHz2XHQAygY\=</span><br></pre></td></tr></table></figure></li><li><p>再次启动服务器并放入后台执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#启动新建的服务器</span><br><span class="line">[weblogic@aupserver bin]$ nohup ./startManagedWebLogic.sh uap-server http://aupserver:7001 &amp;</span><br><span class="line">[weblogic@aupserver bin]$ nohup ./startManagedWebLogic.sh uap-managerr http://aupserver:7001 &amp;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Weblogic-12c部署手册&quot;&gt;&lt;a href=&quot;#Weblogic-12c部署手册&quot; class=&quot;headerlink&quot; title=&quot;Weblogic 12c部署手册&quot;&gt;&lt;/a&gt;Weblogic 12c部署手册&lt;/h1&gt;&lt;h2 id=&quot;1、实验环境：&quot;&gt;
      
    
    </summary>
    
      <category term="Weblogic" scheme="http://www.lisirlife.cn/categories/Weblogic/"/>
    
    
      <category term="Weblogic" scheme="http://www.lisirlife.cn/tags/Weblogic/"/>
    
  </entry>
  
</feed>
